var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,0.692,1,2.436]],["body/controllers/AdminController.html",[0,0.522,1,2.714,2,0.554,3,0.191,4,0.171,5,0.171,6,2.291,7,1.179,8,2.688,9,0.432,10,0.921,11,1.819,12,3.388,13,3.388,14,5.225,15,3.388,16,2.688,17,3.569,18,2.028,19,0.022,20,1.836,21,1.077,22,2.688,23,1.161,24,1.096,25,0.921,26,1.161,27,2.96,28,1.211,29,2.022,30,2.291,31,2.21,32,2.688,33,2.688,34,1.543,35,2.031,36,2.688,37,2.688,38,1.836,39,2.688,40,0.43,41,1.342,42,1.639,43,2.129,44,1.256,45,0.171,46,1.731,47,1.68,48,2.956,49,1.342,50,2.21,51,1.836,52,2.031,53,1.68,54,1.55,55,1.342,56,1.44,57,1.836,58,2.688,59,0.191,60,0.113,61,0.984,62,2.956,63,3.266,64,1.077,65,2.688,66,2.688,67,2.129,68,3.003,69,2.688,70,2.688,71,3.003,72,2.031,73,2.688,74,2.688,75,2.688,76,2.688,77,0.012,78,0.012]],["title/modules/AdminModule.html",[79,0.651,80,2.23]],["body/modules/AdminModule.html",[1,3.921,2,1.053,3,0.274,4,0.244,5,0.244,19,0.022,40,0.467,45,0.244,46,2.397,47,2.401,48,3.194,49,1.919,50,3.061,51,2.624,59,0.274,60,0.161,77,0.015,78,0.015,79,1.048,80,4.339,81,1.253,82,1.253,83,1.406,84,1.406,85,1.253,86,2.101,87,1.406,88,3.275,89,3.275,90,2.397,91,1.87,92,1.406,93,1.406,94,3.842,95,2.624,96,1.919]],["title/injectables/AdminService.html",[50,1.667,97,0.573]],["body/injectables/AdminService.html",[3,0.196,4,0.175,5,0.175,9,0.442,10,0.937,11,1.876,12,3.447,13,3.447,15,3.447,17,3.609,19,0.022,21,1.213,23,1.382,24,1.305,25,1.225,26,1.382,28,1.305,29,1.724,30,3.447,31,2.241,34,1.861,40,0.376,45,0.175,50,1.89,52,2.079,59,0.196,60,0.116,61,1.007,64,1.16,77,0.012,78,0.012,97,0.65,98,0.95,99,2.346,100,4.043,101,3.049,102,1.587,103,2.179,104,2.751,105,2.766,106,4.043,107,2.751,108,4.506,109,2.395,110,2.751,111,4.043,112,1.861,113,2.751,114,2.333,115,2.751,116,4.043,117,2.751,118,2.528,119,1.474,120,1.587,121,0.897,122,1.206,123,1.134,124,4.087,125,1.286,126,2.751,127,1.286,128,1.206,129,4.043,130,2.751,131,2.333,132,2.751,133,2.751]],["title/controllers/AppController.html",[0,0.692,134,2.436]],["body/controllers/AppController.html",[0,1.105,2,0.936,3,0.324,4,0.289,5,0.289,9,0.73,10,1.319,18,1.763,19,0.022,21,0.936,28,1.053,40,0.405,45,0.289,59,0.324,60,0.191,64,0.936,77,0.017,78,0.017,112,2.21,121,1.481,122,1.992,134,3.888,135,3.872,136,5.558,137,4.542,138,3.587,139,3.872,140,4.542]],["title/modules/AppModule.html",[79,0.651,141,2.436]],["body/modules/AppModule.html",[2,0.788,3,0.182,4,0.162,5,0.162,19,0.022,40,0.483,45,0.162,59,0.182,60,0.107,77,0.012,78,0.012,79,0.837,80,3.579,81,0.832,82,0.832,83,0.933,84,0.933,85,0.832,86,1.678,87,0.933,91,1.399,92,0.933,93,0.933,134,3.131,138,3.303,139,2.174,141,4.862,142,2.174,143,2.174,144,2.174,145,3.579,146,3.579,147,3.579,148,3.579,149,3.579,150,3.579,151,3.711,152,3.579,153,3.579,154,3.579,155,2.55,156,2.888,157,2.55,158,2.55,159,1.742,160,3.822,161,2.55,162,2.55,163,2.61,164,4.584,165,2.55,166,2.55,167,2.61,168,2.55,169,2.55,170,3.822,171,2.55,172,2.55,173,2.55,174,2.55,175,1.742]],["title/injectables/AppService.html",[97,0.573,138,2.058]],["body/injectables/AppService.html",[3,0.34,4,0.304,5,0.304,9,0.767,10,1.36,19,0.022,21,0.983,28,1.105,40,0.34,45,0.304,59,0.34,60,0.2,64,0.983,77,0.018,78,0.018,97,0.943,98,1.647,112,2.278,136,5.655,138,3.385,176,4.066,177,4.769,178,4.769,179,4.769]],["title/controllers/AuthAdminController.html",[0,0.692,180,2.436]],["body/controllers/AuthAdminController.html",[0,0.377,2,0.401,3,0.138,4,0.124,5,0.124,7,0.852,9,0.312,10,0.718,11,1.583,18,1.499,19,0.022,21,1.057,23,1.259,24,1.188,25,1.188,26,1.259,28,1.188,29,1.672,40,0.343,42,0.801,44,0.909,45,0.124,46,1.414,47,1.215,48,2.414,49,0.971,55,0.971,59,0.138,60,0.082,61,0.711,62,1.937,63,1.937,64,0.908,77,0.009,78,0.009,108,3.293,112,1.991,123,1.816,125,1.448,127,0.909,128,0.852,163,3.814,175,3.674,180,2.116,181,3.103,182,1.328,183,2.641,184,3.293,185,3.293,186,2.641,187,2.641,188,3.502,189,2.641,190,1.944,191,1.657,192,5.497,193,3.362,194,2.641,195,1.944,196,5.378,197,1.657,198,1.944,199,1.944,200,2.641,201,1.944,202,2.641,203,2.641,204,4.372,205,1.944,206,1.657,207,1.944,208,1.944,209,2.754,210,2.641,211,1.215,212,1.657,213,1.944,214,1.657,215,1.657,216,3.293,217,1.469,218,1.657,219,1.657,220,1.657,221,1.944,222,3.293,223,1.944,224,2.641,225,1.657,226,1.469,227,1.469,228,1.469,229,1.657,230,1.657,231,1.657,232,1.657,233,1.657,234,1.469,235,1.657,236,1.657,237,1.657,238,1.657,239,1.657,240,1.657,241,1.657,242,2.641,243,1.657,244,1.657,245,1.657,246,1.657,247,1.657,248,3.098,249,2.641,250,2.641,251,1.937,252,2.641,253,2.641,254,2.641,255,2.641,256,1.657,257,1.469,258,1.657]],["title/modules/AuthAdminModule.html",[79,0.651,145,2.23]],["body/modules/AuthAdminModule.html",[2,0.966,3,0.241,4,0.215,5,0.215,19,0.022,40,0.469,45,0.215,46,2.308,49,1.689,50,2.948,51,2.31,56,1.812,59,0.241,60,0.142,77,0.014,78,0.014,79,0.981,81,1.103,82,1.103,83,1.238,84,1.238,85,1.103,86,1.968,87,1.238,90,2.308,91,1.715,92,1.238,93,1.238,95,2.31,96,1.689,145,4.315,156,2.555,163,2.31,180,3.672,181,1.951,259,2.884,260,2.884,261,3.942,262,2.555,263,2.884,264,2.884,265,2.51,266,2.884,267,2.884,268,2.884,269,2.884,270,2.884,271,2.884,272,3.995,273,2.884,274,2.884]],["title/controllers/AuthController.html",[0,0.692,275,2.23]],["body/controllers/AuthController.html",[0,0.745,2,0.792,3,0.274,4,0.244,5,0.244,7,1.685,9,0.617,10,1.184,18,1.491,19,0.022,21,0.792,23,0.943,24,1.184,25,0.89,26,0.943,27,1.796,28,0.89,40,0.409,42,1.584,45,0.244,46,1.406,56,2.058,59,0.364,60,0.241,64,0.792,67,2.058,77,0.015,78,0.015,112,2.375,114,2.216,121,1.253,275,3.194,276,2.902,277,4.356,278,3.275,279,3.825,280,4.356,281,3.842,282,3.86,283,2.737,284,2.902,285,4.356,286,5.431,287,5.217,288,2.902,289,3.275,290,3.275,291,3.275,292,3.275]],["title/modules/AuthModule.html",[79,0.651,146,2.23]],["body/modules/AuthModule.html",[2,1.142,3,0.31,4,0.277,5,0.277,19,0.022,40,0.434,45,0.277,59,0.31,60,0.183,77,0.017,78,0.017,79,1.113,81,1.42,82,1.42,83,1.593,84,1.593,85,1.42,86,2.232,87,1.593,91,2.028,92,1.593,93,1.593,146,4.236,275,3.811,283,3.629,284,3.289,293,3.711,294,3.711,295,4.353,296,3.711]],["title/injectables/AuthSService.html",[97,0.573,283,1.91]],["body/injectables/AuthSService.html",[3,0.209,4,0.187,5,0.187,9,0.472,10,0.983,11,1.369,19,0.022,21,0.874,23,1.041,24,1.263,25,0.983,26,1.041,28,0.68,40,0.429,45,0.187,59,0.209,60,0.123,61,1.075,62,1.836,64,0.605,67,2.271,77,0.013,78,0.013,97,0.681,98,1.014,102,1.694,103,2.247,105,2.446,109,1.467,114,1.694,120,1.694,121,0.958,123,2.247,125,1.372,127,2.326,128,1.859,131,2.446,159,2.006,188,3.399,217,2.218,226,2.218,227,3.76,228,2.218,265,2.665,277,3.615,278,3.615,279,3.406,282,2.218,283,2.271,296,2.504,297,2.504,298,4.646,299,2.936,300,2.936,301,2.936,302,2.936,303,4.24,304,2.936,305,2.936,306,2.504,307,2.504,308,2.936,309,2.936,310,2.936,311,2.936,312,4.976,313,2.936,314,4.24,315,2.936,316,2.936,317,2.936,318,2.936,319,2.936,320,2.936,321,4.24,322,2.936,323,2.936,324,2.936,325,2.936,326,2.936,327,2.936,328,2.936,329,2.936,330,2.936,331,2.936,332,2.936]],["title/injectables/AuthService.html",[46,1.306,97,0.573]],["body/injectables/AuthService.html",[3,0.209,4,0.187,5,0.187,9,0.472,10,0.983,11,1.657,19,0.022,21,1.025,23,1.222,24,1.153,25,1.153,26,1.222,28,0.983,29,1.777,40,0.388,45,0.187,46,1.552,50,2.902,53,1.836,54,1.694,59,0.209,60,0.123,61,1.552,62,2.65,64,1.025,67,3.095,77,0.013,78,0.013,90,2.204,97,0.681,98,1.014,112,2.514,114,2.446,123,1.748,125,1.982,127,1.982,128,1.859,175,2.006,188,4.341,251,3.111,333,2.504,334,4.976,335,4.24,336,2.936,337,2.936,338,2.936,339,5.449,340,4.976,341,2.936,342,2.218,343,2.504,344,4.24,345,2.936,346,2.936,347,2.936,348,2.936,349,2.936,350,2.936,351,2.936,352,4.24,353,2.936,354,2.936,355,2.936,356,2.936]],["title/controllers/AuthStudentController.html",[0,0.692,357,2.436]],["body/controllers/AuthStudentController.html",[0,0.383,2,0.407,3,0.141,4,0.126,5,0.126,7,0.865,9,0.317,10,0.727,11,1.591,18,1.514,19,0.022,21,1.064,23,1.267,24,1.196,25,1.196,26,1.267,28,1.196,29,1.683,40,0.345,42,0.814,44,0.922,45,0.126,46,1.428,47,1.233,48,2.438,49,0.986,59,0.141,60,0.083,61,0.722,62,1.96,64,0.916,77,0.009,78,0.009,112,2.004,123,1.832,125,1.465,127,0.922,128,0.865,175,3.525,183,2.673,184,3.326,185,3.326,186,2.673,187,2.673,188,3.525,189,2.673,191,1.682,192,5.514,193,3.382,194,2.673,196,5.397,197,1.682,200,2.673,202,2.673,203,2.673,204,4.4,206,1.682,209,2.777,210,2.673,211,1.233,212,1.682,214,1.682,215,1.682,216,3.326,217,1.491,218,1.682,219,1.682,220,1.682,222,3.326,224,2.673,225,1.682,226,1.491,227,1.491,228,1.491,229,1.682,230,1.682,231,1.682,232,1.682,233,1.682,234,1.491,235,1.682,236,1.682,237,1.682,238,1.682,239,1.682,240,1.682,241,1.682,242,2.673,243,1.682,244,1.682,245,1.682,246,1.682,247,1.682,249,2.673,250,2.673,251,1.96,252,2.673,253,2.673,254,2.673,255,2.673,256,1.682,257,1.491,258,1.682,357,2.141,358,4.088,359,1.491,360,1.973,361,1.973,362,1.973,363,1.973,364,1.973,365,1.973,366,1.973,367,1.973,368,1.973,369,1.138,370,1.973,371,2.947,372,1.973,373,1.973,374,2.369,375,3.135]],["title/modules/AuthStudentModule.html",[79,0.651,147,2.23]],["body/modules/AuthStudentModule.html",[2,0.968,3,0.242,4,0.216,5,0.216,19,0.022,40,0.47,45,0.216,46,2.311,49,1.695,50,2.951,51,2.318,56,1.818,59,0.242,60,0.142,77,0.014,78,0.014,79,0.983,81,1.107,82,1.107,83,1.242,84,1.242,85,1.107,86,1.971,87,1.242,90,2.311,91,1.719,92,1.242,93,1.242,96,1.695,147,4.318,156,2.564,263,2.893,264,2.893,265,2.515,266,2.893,267,2.893,268,2.893,270,2.893,271,2.893,272,4.004,273,2.893,274,2.893,357,3.679,358,2.564,376,2.893,377,2.893,378,3.946,379,2.893,380,2.564,381,2.893]],["title/controllers/GradeController.html",[0,0.692,382,2.436]],["body/controllers/GradeController.html",[0,0.586,2,0.623,3,0.215,4,0.192,5,0.192,7,1.325,9,0.486,10,1.003,11,1.861,18,2.143,19,0.022,21,1.138,23,1.241,24,1.172,25,1.003,26,1.241,27,2.927,28,1.28,29,2.089,34,1.68,40,0.36,41,1.509,42,1.784,43,2.318,44,1.412,45,0.192,59,0.215,60,0.127,64,1.138,77,0.013,78,0.013,101,3.185,112,1.963,121,0.985,382,2.956,383,2.576,384,3.021,385,3.69,386,3.69,387,3.69,388,3.021,389,3.021,390,3.021,391,3.021,392,3.021,393,2.576,394,3.021,395,3.021,396,3.021,397,3.021,398,3.021,399,2.917,400,2.576,401,2.283,402,1.743,403,3.021,404,5.521,405,4.708,406,3.021,407,3.021,408,3.021,409,3.021,410,3.021,411,3.021,412,3.021,413,3.021,414,3.021,415,3.021]],["title/modules/GradeModule.html",[79,0.651,148,2.23]],["body/modules/GradeModule.html",[2,1.142,3,0.31,4,0.277,5,0.277,19,0.022,40,0.434,45,0.277,59,0.31,60,0.183,77,0.017,78,0.017,79,1.113,81,1.42,82,1.42,83,1.593,84,1.593,85,1.42,86,2.232,87,1.593,91,2.028,92,1.593,93,1.593,148,4.236,382,4.164,399,3.909,400,3.711,416,3.711,417,3.711,418,4.353,419,4.353]],["title/injectables/GradeService.html",[97,0.573,399,2.058]],["body/injectables/GradeService.html",[3,0.212,4,0.19,5,0.19,9,0.479,10,0.993,11,1.856,17,2.034,19,0.022,21,1.198,23,1.347,24,1.271,25,1.162,26,1.347,28,1.271,29,1.397,31,2.345,34,1.947,40,0.414,45,0.19,52,2.25,53,1.862,54,1.718,59,0.212,60,0.125,61,1.09,64,1.13,77,0.013,78,0.013,97,0.688,98,1.029,101,3.164,102,1.718,103,2.261,105,2.894,109,2.505,118,2.677,119,1.595,120,1.718,121,0.971,122,1.306,123,1.228,125,1.392,127,1.392,128,1.306,131,2.471,385,3.652,386,3.652,387,3.652,393,3.652,399,2.471,420,2.539,421,2.978,422,4.283,423,2.978,424,3.429,425,2.978,426,2.978,427,4.283,428,2.978,429,5.016,430,2.978,431,2.978,432,2.978,433,2.978,434,2.978]],["title/injectables/JwtAdminGuard.html",[55,1.782,97,0.573]],["body/injectables/JwtAdminGuard.html",[3,0.358,4,0.32,5,0.32,19,0.021,40,0.431,45,0.32,55,3.024,59,0.358,60,0.211,77,0.018,78,0.018,97,0.973,98,1.734,181,2.897,401,3.794,402,2.897,435,4.281,436,3.139,437,5.021]],["title/injectables/JwtAdminStrategy.html",[97,0.573,261,2.23]],["body/injectables/JwtAdminStrategy.html",[3,0.251,4,0.225,5,0.225,9,0.567,10,1.118,11,1.513,19,0.022,21,0.995,23,0.867,24,0.818,26,0.867,28,0.818,40,0.441,45,0.225,59,0.251,60,0.148,61,2.013,64,1.133,77,0.015,78,0.015,97,0.776,98,1.219,109,1.764,123,1.456,181,3.172,193,3.017,209,3.017,211,2.207,251,2.207,261,3.017,265,2.585,269,3.01,402,2.037,436,2.207,438,2.667,439,4.115,440,3.531,441,4.115,442,3.531,443,4.689,444,3.01,445,4.115,446,2.667,447,2.667,448,4.115,449,2.411,450,2.411,451,4.689,452,3.646,453,2.667,454,3.01,455,3.531,456,2.667,457,3.01,458,3.01,459,3.01,460,3.01,461,3.01]],["title/injectables/JwtStudentGuard.html",[97,0.573,369,2.058]],["body/injectables/JwtStudentGuard.html",[3,0.359,4,0.321,5,0.321,19,0.021,40,0.433,45,0.321,59,0.359,60,0.212,77,0.018,78,0.018,97,0.976,98,1.743,369,3.503,401,3.812,402,2.911,436,3.154,462,4.302,463,5.045]],["title/injectables/JwtStudentStrategy.html",[97,0.573,378,2.23]],["body/injectables/JwtStudentStrategy.html",[3,0.254,4,0.227,5,0.227,9,0.573,10,1.126,11,1.521,19,0.022,21,1.002,23,0.876,24,0.827,26,0.876,28,0.827,40,0.442,45,0.227,59,0.254,60,0.15,61,2.023,64,1.139,77,0.015,78,0.015,97,0.781,98,1.232,109,1.782,123,1.47,193,3.038,209,3.038,211,2.23,251,2.23,265,2.603,378,3.038,381,3.041,402,2.058,405,3.041,436,2.23,439,4.144,441,4.144,443,4.713,444,3.041,445,4.144,446,2.695,447,2.695,448,4.144,449,2.436,450,2.436,452,3.672,453,2.695,456,2.695,457,3.041,458,3.041,459,3.041,460,3.041,461,3.041,464,2.695,465,3.567,466,3.567,467,4.713,468,3.041]],["title/controllers/LessonAdminController.html",[0,0.692,469,2.436]],["body/controllers/LessonAdminController.html",[0,0.571,2,0.607,3,0.21,4,0.187,5,0.187,7,1.291,9,0.473,10,0.985,11,1.852,18,2.118,19,0.022,20,2.011,21,1.124,23,1.224,24,1.155,25,0.985,26,1.224,27,2.904,28,1.265,29,2.075,31,2.33,34,1.935,35,2.225,38,2.011,40,0.355,41,1.471,42,1.752,43,2.276,44,1.376,45,0.187,55,1.471,56,1.577,57,2.011,59,0.21,60,0.124,63,3.411,64,1.124,77,0.013,78,0.013,121,0.96,122,1.291,182,2.011,424,1.841,469,2.902,470,4.371,471,2.945,472,3.21,473,3.21,474,3.727,475,3.21,476,2.511,477,2.945,478,2.225,479,2.945,480,2.945,481,2.945,482,2.511,483,2.945,484,2.49,485,2.011,486,2.945,487,2.945,488,2.511,489,2.011,490,2.011,491,2.511,492,2.511,493,2.511,494,2.511,495,2.511,496,2.511]],["title/modules/LessonAdminModule.html",[79,0.651,149,2.23]],["body/modules/LessonAdminModule.html",[2,1.136,3,0.307,4,0.275,5,0.275,19,0.022,40,0.433,45,0.275,59,0.307,60,0.181,77,0.017,78,0.017,79,1.108,81,1.408,82,1.408,83,1.58,84,1.58,85,1.408,86,2.223,87,1.58,91,2.018,92,1.58,93,1.58,95,2.949,149,4.226,262,3.262,469,4.148,470,3.262,484,3.377,485,2.949,497,3.681,498,3.681,499,3.262]],["title/injectables/LessonService.html",[97,0.573,484,1.782]],["body/injectables/LessonService.html",[3,0.213,4,0.191,5,0.191,9,0.481,10,0.997,11,1.858,19,0.022,21,1.2,23,1.43,24,1.35,25,1.274,26,1.43,28,1.274,29,1.403,31,2.352,34,1.954,40,0.358,41,1.496,45,0.191,59,0.213,60,0.126,61,1.096,64,1.133,77,0.013,78,0.013,97,0.691,98,1.035,101,2.481,102,1.728,103,2.267,105,2.903,109,2.514,118,2.689,119,1.604,120,1.728,121,0.977,122,1.313,123,1.235,125,1.4,127,1.4,128,1.313,131,2.481,472,3.249,473,3.249,475,3.249,478,3.249,484,2.148,499,4.155,500,2.554,501,2.995,502,4.301,503,2.995,504,4.301,505,2.995,506,2.995,507,2.995,508,4.301,509,2.995,510,5.032,511,2.995,512,2.995,513,2.995,514,2.995,515,2.995]],["title/controllers/LessonStudentController.html",[0,0.692,516,2.436]],["body/controllers/LessonStudentController.html",[0,0.56,2,0.595,3,0.206,4,0.184,5,0.184,7,1.266,9,0.464,10,0.971,11,1.845,18,2.099,19,0.022,21,1.114,23,1.327,24,1.253,25,1.142,26,1.327,27,3.014,28,1.253,29,2.064,31,2.304,34,1.914,40,0.351,41,1.442,42,2.032,43,2.244,44,1.35,45,0.184,59,0.206,60,0.121,64,1.114,77,0.013,78,0.013,121,0.942,122,1.266,359,2.182,369,1.666,374,4.085,424,1.805,472,3.165,473,3.165,474,2.861,475,3.165,476,2.462,478,2.182,482,2.462,484,2.462,485,1.972,488,2.462,489,1.972,490,1.972,491,2.462,492,2.462,493,2.462,494,2.462,495,2.462,496,2.462,516,2.861,517,4.338,518,2.888,519,3.572,520,2.888,521,2.888,522,2.888,523,2.888,524,2.888,525,2.462,526,2.888,527,2.462,528,2.888,529,2.888,530,2.888]],["title/modules/LessonStudentModule.html",[79,0.651,150,2.23]],["body/modules/LessonStudentModule.html",[2,1.136,3,0.307,4,0.275,5,0.275,19,0.022,40,0.433,45,0.275,59,0.307,60,0.181,77,0.017,78,0.017,79,1.108,81,1.408,82,1.408,83,1.58,84,1.58,85,1.408,86,2.223,87,1.58,91,2.018,92,1.58,93,1.58,150,4.226,379,3.681,380,3.262,484,3.377,485,2.949,499,3.262,516,4.148,517,3.262,531,4.317,532,4.317]],["title/modules/PrismaModule.html",[79,0.651,151,2.23]],["body/modules/PrismaModule.html",[3,0.305,4,0.272,5,0.272,19,0.021,40,0.391,45,0.272,59,0.305,60,0.18,77,0.017,78,0.017,79,1.104,81,1.396,82,1.396,83,1.567,84,1.567,85,1.396,86,2.214,87,2.214,91,2.007,92,1.567,93,1.567,103,2.951,151,4.288,533,3.651,534,3.651,535,3.651,536,4.282,537,5.484,538,4.282]],["title/injectables/PrismaService.html",[97,0.573,103,1.471]],["body/injectables/PrismaService.html",[3,0.309,4,0.276,5,0.276,19,0.022,21,0.893,23,1.064,24,1.005,25,1.005,26,1.064,40,0.433,45,0.276,59,0.309,60,0.182,61,1.587,77,0.017,78,0.017,97,0.888,98,1.497,103,2.279,119,2.322,159,2.961,265,2.322,298,5.464,436,3.455,456,3.275,539,3.696,540,6.085,541,5.527,542,4.335,543,4.335,544,4.335,545,4.335,546,4.335]],["title/classes/RegisterDTO.html",[60,0.15,279,2.23]],["body/classes/RegisterDTO.html",[0,0.694,3,0.255,4,0.228,5,0.228,9,0.575,18,2.308,19,0.022,21,1.225,24,1.283,25,1.378,27,1.673,40,0.394,42,1.476,45,0.228,46,1.31,59,0.347,60,0.233,64,0.738,67,2.966,77,0.015,78,0.015,112,2.594,114,3.195,121,1.167,275,2.237,276,2.704,279,3.462,280,3.051,282,2.704,283,2.609,284,2.704,285,4.153,286,5.302,287,5.068,288,2.704,289,4.722,290,3.051,291,3.051,292,3.051,547,3.579,548,3.68,549,3.579,550,3.579,551,5.538,552,3.579,553,3.579,554,3.579]],["title/controllers/SchoolController.html",[0,0.692,555,2.436]],["body/controllers/SchoolController.html",[0,0.628,2,0.667,3,0.23,4,0.206,5,0.206,7,1.419,9,0.52,10,1.053,11,1.823,18,2.038,19,0.022,20,2.21,21,1.082,23,1.289,24,1.217,25,1.053,26,1.289,27,2.803,28,1.217,29,2.028,34,1.764,38,2.21,40,0.406,41,1.616,42,1.873,43,2.434,44,1.513,45,0.206,55,1.616,56,1.733,57,2.21,59,0.23,60,0.136,63,3.282,64,1.082,77,0.014,78,0.014,112,2.038,121,1.055,555,3.103,556,2.759,557,3.236,558,3.874,559,3.874,560,3.874,561,3.236,562,4.302,563,3.236,564,2.759,565,3.236,566,3.236,567,3.236,568,3.236,569,3.029,570,2.759,571,2.759,572,3.236,573,3.236,574,3.236,575,3.236,576,3.236,577,3.236,578,3.236,579,3.236]],["title/modules/SchoolModule.html",[79,0.651,152,2.23]],["body/modules/SchoolModule.html",[2,1.098,3,0.292,4,0.261,5,0.261,19,0.022,40,0.475,45,0.261,46,1.5,47,2.561,48,2.561,49,2.047,59,0.292,60,0.172,77,0.016,78,0.016,79,1.081,81,1.336,82,1.336,83,1.5,84,1.5,85,1.336,86,2.168,87,1.5,90,1.5,91,1.951,92,1.5,93,1.5,96,2.047,152,4.168,555,4.046,569,3.847,570,3.493,580,3.493,581,3.493,582,4.097,583,4.097]],["title/injectables/SchoolService.html",[97,0.573,569,2.058]],["body/injectables/SchoolService.html",[3,0.212,4,0.19,5,0.19,9,0.479,10,0.993,11,1.856,19,0.022,21,1.198,23,1.347,24,1.271,25,1.162,26,1.347,28,1.271,29,1.397,31,2.345,34,2.129,40,0.391,45,0.19,59,0.212,60,0.125,61,1.09,64,1.13,77,0.013,78,0.013,97,0.688,98,1.029,101,3.164,102,1.718,103,2.261,105,2.894,109,2.505,118,2.677,119,1.595,120,1.718,121,0.971,122,1.306,123,1.228,124,4.277,125,1.392,127,1.392,128,1.306,131,2.471,558,3.652,559,3.652,560,3.652,562,4.144,564,3.652,569,2.471,571,2.539,584,2.539,585,2.978,586,4.283,587,2.978,588,5.485,589,2.978,590,2.978,591,4.283,592,2.978,593,2.978,594,2.978,595,2.978,596,2.978,597,2.978]],["title/controllers/StudentAdminController.html",[0,0.692,598,2.436]],["body/controllers/StudentAdminController.html",[0,0.531,2,0.564,3,0.195,4,0.174,5,0.174,7,1.2,9,0.44,10,0.933,11,1.826,18,2.046,19,0.022,20,1.869,21,1.086,23,1.173,24,1.108,25,0.933,26,1.173,27,2.974,28,1.222,29,2.033,31,2.234,34,1.855,35,2.068,38,1.869,40,0.375,41,1.367,42,1.661,43,2.157,44,1.279,45,0.174,53,1.711,54,1.579,55,1.367,56,1.466,57,1.869,59,0.195,60,0.115,63,3.295,64,1.086,67,2.157,68,3.043,71,3.043,72,2.068,77,0.012,78,0.012,90,1.749,96,1.367,121,0.893,122,1.2,167,4.013,182,1.869,424,1.711,474,3.6,489,1.869,490,1.869,598,2.751,599,4.244,600,3.043,601,3.043,602,3.043,603,2.333,604,2.737,605,2.068,606,2.737,607,2.737,608,2.737,609,2.333,610,2.737,611,2.737,612,2.333,613,2.333,614,2.333,615,2.333,616,2.333,617,2.333,618,2.333,619,2.737]],["title/modules/StudentAdminModule.html",[79,0.651,153,2.23]],["body/modules/StudentAdminModule.html",[2,1.133,3,0.306,4,0.274,5,0.274,19,0.022,40,0.432,45,0.274,59,0.306,60,0.181,77,0.017,78,0.017,79,1.106,81,1.402,82,1.402,83,1.574,84,1.574,85,1.402,86,2.219,87,1.574,90,2.472,91,2.012,92,1.574,93,1.574,95,2.936,96,2.147,153,4.222,167,2.936,262,3.248,371,3.248,598,4.14,599,3.248,620,4.299,621,4.299]],["title/controllers/StudentController.html",[0,0.692,622,2.436]],["body/controllers/StudentController.html",[0,0.547,2,0.581,3,0.201,4,0.179,5,0.179,7,1.236,9,0.453,10,0.954,11,1.836,18,2.075,19,0.022,21,1.101,23,1.193,24,1.126,25,0.954,26,1.193,27,2.996,28,1.239,29,2.05,34,1.887,40,0.381,41,1.407,42,1.696,43,2.204,44,1.317,45,0.179,53,1.761,54,1.626,59,0.201,60,0.118,64,1.101,67,2.204,68,3.109,71,3.109,72,2.129,77,0.012,78,0.012,90,1.779,96,1.407,112,1.887,121,0.919,122,1.236,369,1.626,374,4.038,424,1.761,474,3.651,489,1.925,490,1.925,519,2.402,525,2.402,527,2.402,600,3.109,601,3.109,602,3.109,603,2.402,605,2.129,609,2.402,612,2.402,613,2.402,614,2.402,615,2.402,616,2.402,617,2.402,618,2.402,622,2.81,623,2.402,624,2.818,625,2.818,626,2.818,627,2.818,628,2.818,629,2.818,630,2.818,631,2.818,632,2.818]],["title/modules/StudentModule.html",[79,0.651,154,2.23]],["body/modules/StudentModule.html",[2,1.142,3,0.31,4,0.277,5,0.277,19,0.022,40,0.434,45,0.277,59,0.31,60,0.183,77,0.017,78,0.017,79,1.113,81,1.42,82,1.42,83,1.593,84,1.593,85,1.42,86,2.232,87,1.593,90,2.48,91,2.028,92,1.593,93,1.593,96,2.174,154,4.236,380,3.289,622,4.164,633,4.353,634,4.353,635,4.353]],["title/injectables/StudentService.html",[90,1.306,97,0.573]],["body/injectables/StudentService.html",[3,0.2,4,0.179,5,0.179,9,0.452,10,0.952,11,1.883,19,0.022,21,1.222,23,1.394,24,1.316,25,1.237,26,1.394,28,1.316,29,1.741,31,2.268,34,1.884,40,0.346,45,0.179,59,0.2,60,0.118,61,1.029,64,1.17,77,0.012,78,0.012,90,1.503,97,0.66,98,0.971,101,3.08,102,1.621,103,2.201,105,2.8,109,2.424,112,1.884,114,2.369,118,2.567,119,1.505,120,1.621,121,0.917,122,1.232,123,1.159,125,1.314,127,1.314,128,1.232,131,2.369,371,4.033,600,3.103,601,3.103,602,3.103,605,3.103,636,2.396,637,4.107,638,2.81,639,4.107,640,2.81,641,2.81,642,2.81,643,4.107,644,2.81,645,4.107,646,2.81,647,4.853,648,2.81,649,4.107,650,2.81,651,2.81,652,2.81]],["title/coverage.html",[653,3.672]],["body/coverage.html",[0,1.281,1,1.925,5,0.179,6,2.402,19,0.022,25,0.653,46,1.031,50,1.317,55,1.407,60,0.118,77,0.012,78,0.012,85,0.919,90,1.031,97,1.083,99,2.402,103,1.162,128,1.236,134,1.925,135,2.402,138,1.626,163,1.925,167,1.925,176,2.402,180,1.925,181,3.084,182,3.32,261,1.761,275,1.761,276,3.109,279,1.761,283,1.509,297,2.402,333,2.402,357,1.925,358,2.129,359,3.109,369,1.626,378,1.761,382,1.925,383,2.402,399,1.626,420,2.402,435,2.402,438,3.109,449,2.81,450,1.925,462,2.402,464,3.109,469,1.925,470,2.129,484,1.407,500,2.402,516,1.925,517,2.129,539,2.402,555,1.925,556,2.402,569,1.626,584,2.402,598,1.925,599,2.129,622,1.925,623,2.402,636,2.402,653,2.129,654,2.818,655,2.818,656,2.818,657,7.187,658,6.131,659,5.345,660,5.685,661,4.861,662,4.115,663,4.115,664,5.345,665,2.402,666,4.861,667,2.818,668,2.818]],["title/dependencies.html",[82,1.398,669,2.543]],["body/dependencies.html",[19,0.022,45,0.27,49,2.121,54,2.45,60,0.229,77,0.016,78,0.016,82,1.385,119,2.275,159,2.901,211,2.655,265,2.275,288,3.209,306,3.621,307,3.621,402,2.45,446,4.122,447,3.209,670,4.247,671,4.247,672,6.027,673,4.247,674,4.247,675,4.247,676,4.247,677,4.247,678,4.247,679,4.247,680,4.247,681,4.247,682,4.247,683,4.247,684,4.247,685,4.247,686,4.247,687,4.247,688,4.247,689,4.247,690,4.247,691,4.247,692,4.247,693,4.247,694,4.247]],["title/miscellaneous/enumerations.html",[695,1.49,696,3.656]],["body/miscellaneous/enumerations.html",[9,0.848,19,0.019,77,0.019,78,0.019,342,3.985,695,2.634,696,4.497,697,6.235,698,4.497,699,4.497,700,5.274,701,5.274,702,5.274,703,5.274,704,5.274,705,5.274]],["title/miscellaneous/functions.html",[695,1.49,706,3.656]],["body/miscellaneous/functions.html",[9,0.874,19,0.019,77,0.019,78,0.019,85,2.193,665,4.637,695,2.717,706,4.637,707,5.438]],["title/index.html",[9,0.479,708,2.983,709,2.983]],["body/index.html",[4,0.241,19,0.022,77,0.015,78,0.015,234,2.86,653,2.86,710,3.786,711,3.786,712,5.06,713,3.786,714,3.786,715,3.786,716,3.786,717,3.786,718,3.786,719,3.228,720,5.699,721,3.786,722,3.786,723,3.786,724,6.66,725,3.786,726,3.786,727,3.786,728,6.522,729,3.786,730,3.786,731,5.06,732,3.786,733,3.786,734,3.786,735,3.786,736,5.06,737,5.06,738,3.786,739,3.786,740,3.786,741,5.06,742,5.06,743,3.786,744,3.786,745,3.786,746,3.786,747,3.786,748,3.228,749,3.786,750,3.786,751,3.786,752,3.786,753,3.786,754,3.786,755,3.786,756,3.786,757,3.786,758,3.786,759,3.228,760,3.786,761,3.786,762,3.786,763,3.786,764,3.786,765,3.786,766,3.228]],["title/modules.html",[81,1.585]],["body/modules.html",[19,0.017,77,0.017,78,0.017,80,2.666,81,1.391,141,2.912,145,2.666,146,2.666,147,2.666,148,2.666,149,2.666,150,2.666,151,2.666,152,2.666,153,2.666,154,2.666,748,6.1,767,7.155,768,7.155,769,7.155]],["title/overview.html",[770,4.144]],["body/overview.html",[2,0.539,19,0.022,46,2.017,50,2.576,60,0.11,77,0.012,78,0.012,79,0.477,80,3.929,81,0.852,82,0.852,83,0.957,84,0.957,85,0.852,86,0.957,87,0.957,88,2.229,89,2.229,90,2.191,91,1.425,92,0.957,93,0.957,98,0.903,103,2.468,138,2.684,141,4.85,142,2.229,143,2.229,144,2.229,145,4.059,146,3.445,147,4.059,148,3.445,149,3.445,150,3.445,151,3.612,152,3.445,153,3.445,154,3.445,257,1.975,259,2.229,260,2.229,261,2.908,283,2.492,293,2.229,294,2.229,376,2.229,377,2.229,378,2.908,399,2.684,416,2.229,417,2.229,484,2.575,497,2.229,498,2.229,533,2.229,534,2.229,535,2.229,569,2.684,580,2.229,581,2.229,770,2.229,771,2.614,772,2.614,773,2.614]],["title/properties.html",[548,3.24,669,2.543]],["body/properties.html",[19,0.022,77,0.019,78,0.019,548,4.046,719,4.566,759,4.566,766,4.566,774,5.355,775,5.355,776,5.355]],["title/miscellaneous/typealiases.html",[695,1.49,777,4.288]],["body/miscellaneous/typealiases.html",[9,0.848,17,4.259,19,0.019,25,1.222,77,0.019,78,0.019,562,4.711,695,2.634,698,4.497,699,4.497,778,5.274,779,5.274,780,5.274,781,5.274,782,5.274]],["title/miscellaneous/variables.html",[695,1.49,783,3.656]],["body/miscellaneous/variables.html",[9,0.705,19,0.022,64,1.148,77,0.017,78,0.017,181,2.532,193,4.025,209,3.483,342,4.209,343,4.75,438,3.316,449,4.397,450,3.805,451,5.219,452,4.209,453,4.209,454,3.742,464,3.316,467,5.219,468,3.742,695,2.192,783,3.742,784,5.571]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":775,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":257,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"overview.html":{}}}],["1.1.21",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":772,"title":{},"body":{"overview.html":{}}}],["12",{"_index":771,"title":{},"body":{"overview.html":{}}}],["13",{"_index":773,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":323,"title":{},"body":{"injectables/AuthSService.html":{}}}],["24",{"_index":273,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["3.3.9",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":272,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["7.2.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["accounting",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admin",{"_index":108,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{}}}],["admin.controller",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.controller.ts",{"_index":182,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:19",{"_index":481,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:20",{"_index":608,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:23",{"_index":195,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:25",{"_index":477,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:26",{"_index":604,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:35",{"_index":483,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:37",{"_index":610,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:41",{"_index":480,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:50",{"_index":208,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:51",{"_index":607,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:64",{"_index":199,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:73",{"_index":190,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:77",{"_index":205,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:86",{"_index":201,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.id",{"_index":133,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["admin.module.ts",{"_index":262,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.service",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin/admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin/admin/admin.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/auth",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["admin/grade/grade.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/jwt.guard",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["admin/jwt.guard.ts",{"_index":435,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"coverage.html":{}}}],["admin/jwt.strategy.ts",{"_index":438,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin/jwt.strategy.ts:19",{"_index":440,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/jwt.strategy.ts:28",{"_index":442,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/lesson",{"_index":471,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin/lesson/lesson",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/school",{"_index":557,"title":{},"body":{"controllers/SchoolController.html":{}}}],["admin/school/school.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/student",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":80,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["admins",{"_index":124,"title":{},"body":{"injectables/AdminService.html":{},"injectables/SchoolService.html":{}}}],["adminservice",{"_index":50,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["aliases",{"_index":778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":331,"title":{},"body":{"injectables/AuthSService.html":{}}}],["amazing",{"_index":749,"title":{},"body":{"index.html":{}}}],["app",{"_index":726,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":134,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":718,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":138,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assistant",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["auth",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthStudentModule.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["auth.controller",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthSService.html":{}}}],["auth.service",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/RegisterDTO.html":{}}}],["auth/auth.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt.guard",{"_index":527,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["authadmincontroller",{"_index":180,"title":{"controllers/AuthAdminController.html":{}},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["authadminmodule",{"_index":145,"title":{"modules/AuthAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["authcontroller",{"_index":275,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["authguard",{"_index":401,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtStudentGuard.html":{}}}],["authguard('jwtadminsecret",{"_index":437,"title":{},"body":{"injectables/JwtAdminGuard.html":{}}}],["authguard('jwtstudentsecret",{"_index":463,"title":{},"body":{"injectables/JwtStudentGuard.html":{}}}],["authheader",{"_index":215,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["authmodule",{"_index":146,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":759,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":46,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"classes/RegisterDTO.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"overview.html":{}}}],["authsservice",{"_index":283,"title":{"injectables/AuthSService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"classes/RegisterDTO.html":{},"coverage.html":{},"overview.html":{}}}],["authstudentcontroller",{"_index":357,"title":{"controllers/AuthStudentController.html":{}},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["authstudentmodule",{"_index":147,"title":{"modules/AuthStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["backers",{"_index":750,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":301,"title":{},"body":{"injectables/AuthSService.html":{}}}],["badrequestexception('passwords",{"_index":310,"title":{},"body":{"injectables/AuthSService.html":{}}}],["bcrypt",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcrypt.comparesync(password",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(body.password",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcryptjs",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"dependencies.html":{}}}],["body",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["body.password",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":767,"title":{},"body":{"modules.html":{}}}],["building",{"_index":713,"title":{},"body":{"index.html":{}}}],["catch",{"_index":226,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"controllers/AuthStudentController.html":{}}}],["class",{"_index":60,"title":{"classes/RegisterDTO.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":547,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["cluster_adminmodule",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authadminmodule",{"_index":259,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authadminmodule_providers",{"_index":260,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule",{"_index":376,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule_providers",{"_index":377,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_grademodule",{"_index":416,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_grademodule_providers",{"_index":417,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule",{"_index":497,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule_providers",{"_index":498,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonstudentmodule",{"_index":531,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_lessonstudentmodule_providers",{"_index":532,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_prismamodule",{"_index":533,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":535,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":534,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":580,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":581,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_studentadminmodule",{"_index":620,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentadminmodule_providers",{"_index":621,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentmodule",{"_index":633,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_providers",{"_index":634,"title":{},"body":{"modules/StudentModule.html":{}}}],["commun/grade",{"_index":384,"title":{},"body":{"controllers/GradeController.html":{}}}],["compodoc/compodoc",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":265,"title":{},"body":{"modules/AuthAdminModule.html":{},"injectables/AuthSService.html":{},"modules/AuthStudentModule.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["config.get('database_url",{"_index":546,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwtadminsecret",{"_index":269,"title":{},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{}}}],["config.get('jwtstudentsecret",{"_index":381,"title":{},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{}}}],["config.get('sessionlengthindays",{"_index":274,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["configmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":298,"title":{},"body":{"injectables/AuthSService.html":{},"injectables/PrismaService.html":{}}}],["connect",{"_index":489,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["console.log(admin",{"_index":221,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["console.log(error",{"_index":228,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"controllers/AuthStudentController.html":{}}}],["console.log(jwttoken",{"_index":225,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["console.log(payload",{"_index":461,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["console.log(student",{"_index":372,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(config",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":102,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["constructor(studentservice",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin/admin",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('admin/auth",{"_index":213,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["controller('admin/lesson",{"_index":486,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["controller('admin/school",{"_index":572,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('admin/student",{"_index":611,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["controller('auth",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["controller('commun/grade",{"_index":403,"title":{},"body":{"controllers/GradeController.html":{}}}],["controller('student/auth",{"_index":370,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["controller('student/lesson",{"_index":528,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["controller('student/student",{"_index":631,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["cookie",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["cookieextractor",{"_index":449,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":653,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createadmin",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["createadmin(@body",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(admin",{"_index":106,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(body",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmindto",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"miscellaneous/typealiases.html":{}}}],["created",{"_index":325,"title":{},"body":{"injectables/AuthSService.html":{}}}],["creategrade",{"_index":385,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["creategrade(@body",{"_index":410,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(body",{"_index":388,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(grade",{"_index":422,"title":{},"body":{"injectables/GradeService.html":{}}}],["createlesson",{"_index":472,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(@body",{"_index":488,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(body",{"_index":476,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(lesson",{"_index":502,"title":{},"body":{"injectables/LessonService.html":{}}}],["createschool",{"_index":558,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@body",{"_index":573,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(body",{"_index":561,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(school",{"_index":586,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":562,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"miscellaneous/typealiases.html":{}}}],["createstudent",{"_index":600,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["createstudent(@body",{"_index":613,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(body",{"_index":603,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(student",{"_index":639,"title":{},"body":{"injectables/StudentService.html":{}}}],["crypto",{"_index":306,"title":{},"body":{"injectables/AuthSService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":305,"title":{},"body":{"injectables/AuthSService.html":{}}}],["cryptojs.aes.encrypt(dto.password",{"_index":315,"title":{},"body":{"injectables/AuthSService.html":{}}}],["cryptojs.enc.utf8.parse(this.config.get('secret_pass",{"_index":313,"title":{},"body":{"injectables/AuthSService.html":{}}}],["data",{"_index":131,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["datasources",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["default",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["delete",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":719,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":727,"title":{},"body":{"index.html":{}}}],["director",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disable",{"_index":231,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["documentation",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":254,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["dto",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"classes/RegisterDTO.html":{}}}],["dto.email",{"_index":320,"title":{},"body":{"injectables/AuthSService.html":{}}}],["dto.name",{"_index":319,"title":{},"body":{"injectables/AuthSService.html":{}}}],["dto.password",{"_index":308,"title":{},"body":{"injectables/AuthSService.html":{}}}],["dto.repeatpassword",{"_index":309,"title":{},"body":{"injectables/AuthSService.html":{}}}],["e2e",{"_index":738,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":714,"title":{},"body":{"index.html":{}}}],["email",{"_index":114,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"classes/RegisterDTO.html":{},"injectables/StudentService.html":{}}}],["enumerations",{"_index":696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":311,"title":{},"body":{"injectables/AuthSService.html":{}}}],["error",{"_index":227,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"controllers/AuthStudentController.html":{}}}],["error('user",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('wrong",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":328,"title":{},"body":{"injectables/AuthSService.html":{}}}],["eslint",{"_index":230,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["eslint/no",{"_index":235,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["exp",{"_index":238,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["expiresin",{"_index":271,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["export",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":211,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":436,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":444,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["extractjwt.fromextractors([cookieextractor",{"_index":458,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["false",{"_index":251,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["forbiddenexception",{"_index":302,"title":{},"body":{"injectables/AuthSService.html":{}}}],["forbiddenexception('email",{"_index":330,"title":{},"body":{"injectables/AuthSService.html":{}}}],["found",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":712,"title":{},"body":{"index.html":{}}}],["function",{"_index":450,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":706,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':adminid",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{}}}],["get(':gradeid",{"_index":407,"title":{},"body":{"controllers/GradeController.html":{}}}],["get(':lessonid",{"_index":494,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["get(':schoolid",{"_index":577,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(':studentid",{"_index":617,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["get('user",{"_index":229,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getadmin",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadmin(@param('adminid",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{}}}],["getadmin(id",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadminfromemail",{"_index":100,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminfromemail(email",{"_index":111,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadmins",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{}}}],["getall",{"_index":101,"title":{},"body":{"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["getall(param",{"_index":504,"title":{},"body":{"injectables/LessonService.html":{}}}],["getgrade",{"_index":386,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["getgrade(@param('gradeid",{"_index":408,"title":{},"body":{"controllers/GradeController.html":{}}}],["getgrade(id",{"_index":393,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["gethello",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjwttoken",{"_index":183,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getjwttoken(user",{"_index":189,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getlesson",{"_index":473,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(@param('lessonid",{"_index":495,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(id",{"_index":478,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getschool",{"_index":559,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getschool(@param('schoolid",{"_index":578,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getschool(id",{"_index":564,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getstudent",{"_index":601,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudent(@param('studentid",{"_index":618,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudent(id",{"_index":605,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudentfromemail",{"_index":637,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentfromemail(email",{"_index":643,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudents",{"_index":474,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudents(@body",{"_index":529,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getstudents(body",{"_index":523,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getting",{"_index":708,"title":{"index.html":{}},"body":{}}],["global",{"_index":537,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grade",{"_index":424,"title":{},"body":{"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["grade.controller",{"_index":419,"title":{},"body":{"modules/GradeModule.html":{}}}],["grade.id",{"_index":434,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradecontroller",{"_index":382,"title":{"controllers/GradeController.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"coverage.html":{}}}],["grademodule",{"_index":148,"title":{"modules/GradeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GradeModule.html":{},"modules.html":{},"overview.html":{}}}],["grades",{"_index":429,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradeservice",{"_index":399,"title":{"injectables/GradeService.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":745,"title":{},"body":{"index.html":{}}}],["headers('authorization",{"_index":214,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["hello",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":756,"title":{},"body":{"index.html":{}}}],["httponly",{"_index":249,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["https://nestjs.com",{"_index":763,"title":{},"body":{"index.html":{}}}],["iat",{"_index":239,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["id",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["identifier",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":459,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["imports",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"overview.html":{}}}],["installation",{"_index":723,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":725,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":327,"title":{},"body":{"injectables/AuthSService.html":{}}}],["isadmin",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["isglobal",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["isnotempty()@isemail",{"_index":549,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["isnotempty()@isstring",{"_index":551,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["ispasswordvalid",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["iv",{"_index":316,"title":{},"body":{"injectables/AuthSService.html":{}}}],["join",{"_index":752,"title":{},"body":{"index.html":{}}}],["js",{"_index":307,"title":{},"body":{"injectables/AuthSService.html":{},"dependencies.html":{}}}],["jwt",{"_index":447,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":212,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["jwt.strategy",{"_index":266,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtadminguard",{"_index":55,"title":{"injectables/JwtAdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/JwtAdminGuard.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["jwtadminsecret",{"_index":455,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["jwtadminstrategy",{"_index":261,"title":{"injectables/JwtAdminStrategy.html":{}},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":457,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtmodule",{"_index":264,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtmodule.register",{"_index":267,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtservice",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["jwtstudentguard",{"_index":369,"title":{"injectables/JwtStudentGuard.html":{}},"body":{"controllers/AuthStudentController.html":{},"injectables/JwtStudentGuard.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["jwtstudentsecret",{"_index":405,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtstudentstrategy",{"_index":378,"title":{"injectables/JwtStudentStrategy.html":{}},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":222,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["kamil",{"_index":760,"title":{},"body":{"index.html":{}}}],["key",{"_index":312,"title":{},"body":{"injectables/AuthSService.html":{}}}],["lax",{"_index":253,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["lesson",{"_index":499,"title":{},"body":{"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"modules/LessonStudentModule.html":{}}}],["lesson.id",{"_index":515,"title":{},"body":{"injectables/LessonService.html":{}}}],["lessonadmincontroller",{"_index":469,"title":{"controllers/LessonAdminController.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["lessonadminmodule",{"_index":149,"title":{"modules/LessonAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["lessons",{"_index":510,"title":{},"body":{"injectables/LessonService.html":{}}}],["lessonservice",{"_index":484,"title":{"injectables/LessonService.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["lessonstudentcontroller",{"_index":516,"title":{"controllers/LessonStudentController.html":{}},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["lessonstudentmodule",{"_index":150,"title":{"modules/LessonStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["level",{"_index":411,"title":{},"body":{"controllers/GradeController.html":{}}}],["license",{"_index":766,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":742,"title":{},"body":{"index.html":{}}}],["line",{"_index":233,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["localhost",{"_index":255,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["login",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithpassword",{"_index":184,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["loginwithpassword(res",{"_index":191,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout",{"_index":185,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout(req",{"_index":197,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["matching",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":256,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["message",{"_index":324,"title":{},"body":{"injectables/AuthSService.html":{}}}],["metadata",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["miscellaneous",{"_index":695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":741,"title":{},"body":{"index.html":{}}}],["mode",{"_index":731,"title":{},"body":{"index.html":{}}}],["module",{"_index":79,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":755,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":761,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["nest",{"_index":720,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":765,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthSService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":402,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":128,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["newjwttoken",{"_index":242,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["next",{"_index":232,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["node.js",{"_index":711,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":118,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["npm",{"_index":724,"title":{},"body":{"index.html":{}}}],["null",{"_index":452,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"injectables/StudentService.html":{}}}],["open",{"_index":743,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["overview",{"_index":770,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":329,"title":{},"body":{"injectables/AuthSService.html":{}}}],["package",{"_index":669,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["parseint(body.grade",{"_index":490,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parseint(body.level",{"_index":412,"title":{},"body":{"controllers/GradeController.html":{}}}],["parser",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":446,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":448,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["passthrough",{"_index":216,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["password",{"_index":67,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"classes/RegisterDTO.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["passwordhash",{"_index":314,"title":{},"body":{"injectables/AuthSService.html":{}}}],["path",{"_index":258,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["payload",{"_index":443,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["please",{"_index":753,"title":{},"body":{"index.html":{}}}],["post",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["post('login",{"_index":194,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["post('logout",{"_index":244,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["post('register",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["prisma",{"_index":105,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["prisma.admincreateinput",{"_index":780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.schoolcreateinput",{"_index":782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.service",{"_index":538,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":119,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["prisma/client/runtime",{"_index":304,"title":{},"body":{"injectables/AuthSService.html":{}}}],["prisma/prisma.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientknownrequesterror",{"_index":303,"title":{},"body":{"injectables/AuthSService.html":{}}}],["prismamodule",{"_index":151,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":103,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["production",{"_index":733,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":710,"title":{},"body":{"index.html":{}}}],["project",{"_index":744,"title":{},"body":{"index.html":{}}}],["promise",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["properties",{"_index":548,"title":{"properties.html":{}},"body":{"classes/RegisterDTO.html":{},"properties.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["put",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["read",{"_index":754,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["reflect",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":241,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["register",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthSService.html":{}}}],["register(@body",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["register(dto",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthSService.html":{}}}],["registerdto",{"_index":279,"title":{"classes/RegisterDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["removetokencookie",{"_index":186,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["removetokencookie(res",{"_index":200,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["repeatpassword",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["repository",{"_index":722,"title":{},"body":{"index.html":{}}}],["req",{"_index":193,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.body.email",{"_index":219,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.body.password",{"_index":220,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.cookies",{"_index":453,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenadmin",{"_index":454,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenstudent",{"_index":468,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":240,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["request",{"_index":209,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":196,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["res.cookie('tokenadmin",{"_index":248,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["res.cookie('tokenstudent",{"_index":375,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["response",{"_index":192,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["result",{"_index":321,"title":{},"body":{"injectables/AuthSService.html":{}}}],["results",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["roleadmin",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":728,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":252,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["scalable",{"_index":715,"title":{},"body":{"index.html":{}}}],["school",{"_index":588,"title":{},"body":{"injectables/SchoolService.html":{}}}],["school.controller",{"_index":583,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.id",{"_index":597,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolcontroller",{"_index":555,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":152,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":569,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":268,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["secretary",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secretorkey",{"_index":460,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["secure",{"_index":250,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["server",{"_index":716,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":263,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["settokencookie",{"_index":187,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["settokencookie(res",{"_index":203,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["side",{"_index":717,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":270,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["sponsors",{"_index":747,"title":{},"body":{"index.html":{}}}],["src/.../admin.dto.ts",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../jwt.strategy.ts",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../school.dto.ts",{"_index":779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin/admin.controller.ts:27",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:33",{"_index":22,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:43",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:57",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.module.ts",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth",{"_index":181,"title":{},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/grade/grade.controller.ts",{"_index":383,"title":{},"body":{"controllers/GradeController.html":{},"coverage.html":{}}}],["src/admin/grade/grade.controller.ts:19",{"_index":392,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:25",{"_index":395,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:31",{"_index":390,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:41",{"_index":398,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.module.ts",{"_index":418,"title":{},"body":{"modules/GradeModule.html":{}}}],["src/admin/lesson/lesson",{"_index":470,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts",{"_index":556,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts:20",{"_index":563,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:26",{"_index":568,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:32",{"_index":566,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.module.ts",{"_index":582,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/admin/student",{"_index":599,"title":{},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":552,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":553,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":554,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:8",{"_index":550,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/auth.module.ts",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":297,"title":{},"body":{"injectables/AuthSService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":299,"title":{},"body":{"injectables/AuthSService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":300,"title":{},"body":{"injectables/AuthSService.html":{}}}],["src/dto/admin.dto",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{}}}],["src/dto/admin.dto.ts",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/dto/school.dto",{"_index":571,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["src/dto/school.dto.ts",{"_index":781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":536,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/admin.service",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["src/services/admin.service.ts",{"_index":99,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/services/admin.service.ts:10",{"_index":115,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:18",{"_index":113,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:22",{"_index":110,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:26",{"_index":107,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:30",{"_index":117,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:7",{"_index":104,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/auth.service",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["src/services/auth.service.ts",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth.service.ts:13",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:32",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:7",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/grade.service",{"_index":400,"title":{},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{}}}],["src/services/grade.service.ts",{"_index":420,"title":{},"body":{"injectables/GradeService.html":{},"coverage.html":{}}}],["src/services/grade.service.ts:11",{"_index":425,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:19",{"_index":426,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:23",{"_index":423,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:27",{"_index":428,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:8",{"_index":421,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/lesson.service",{"_index":485,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{}}}],["src/services/lesson.service.ts",{"_index":500,"title":{},"body":{"injectables/LessonService.html":{},"coverage.html":{}}}],["src/services/lesson.service.ts:17",{"_index":507,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:21",{"_index":503,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:25",{"_index":509,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:6",{"_index":501,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:9",{"_index":505,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/school.service",{"_index":570,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["src/services/school.service.ts",{"_index":584,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/services/school.service.ts:10",{"_index":589,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:18",{"_index":590,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:22",{"_index":587,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:26",{"_index":592,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:7",{"_index":585,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/student.service",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["src/services/student.service.ts",{"_index":636,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/services/student.service.ts:17",{"_index":644,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:21",{"_index":642,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:25",{"_index":640,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:29",{"_index":646,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:6",{"_index":638,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:9",{"_index":641,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/auth/auth",{"_index":358,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["src/student/auth/jwt.guard.ts",{"_index":462,"title":{},"body":{"injectables/JwtStudentGuard.html":{},"coverage.html":{}}}],["src/student/auth/jwt.strategy.ts",{"_index":464,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/student/auth/jwt.strategy.ts:19",{"_index":465,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/auth/jwt.strategy.ts:28",{"_index":466,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/lesson/lesson",{"_index":517,"title":{},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts",{"_index":623,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts:20",{"_index":629,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:26",{"_index":625,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:37",{"_index":630,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:51",{"_index":627,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.module.ts",{"_index":635,"title":{},"body":{"modules/StudentModule.html":{}}}],["start",{"_index":729,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":732,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":734,"title":{},"body":{"index.html":{}}}],["started",{"_index":709,"title":{"index.html":{}},"body":{}}],["starter",{"_index":721,"title":{},"body":{"index.html":{}}}],["statements",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":322,"title":{},"body":{"injectables/AuthSService.html":{}}}],["stay",{"_index":757,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":445,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["string",{"_index":112,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["student",{"_index":371,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/StudentAdminModule.html":{},"injectables/StudentService.html":{}}}],["student.controller",{"_index":380,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{},"modules/StudentModule.html":{}}}],["student.controller.ts",{"_index":359,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"coverage.html":{}}}],["student.controller.ts:19",{"_index":524,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:23",{"_index":362,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:25",{"_index":520,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:35",{"_index":526,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:41",{"_index":522,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:49",{"_index":368,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:63",{"_index":364,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:72",{"_index":361,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:76",{"_index":366,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:85",{"_index":365,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.id",{"_index":652,"title":{},"body":{"injectables/StudentService.html":{}}}],["student.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["student.module.ts",{"_index":379,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{}}}],["student.service",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["student/auth",{"_index":360,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student/auth/auth",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["student/lesson",{"_index":518,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student/lesson/lesson",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["student/student",{"_index":624,"title":{},"body":{"controllers/StudentController.html":{}}}],["student/student/student.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["studentadmincontroller",{"_index":598,"title":{"controllers/StudentAdminController.html":{}},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["studentadminmodule",{"_index":153,"title":{"modules/StudentAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["studentcontroller",{"_index":622,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentmodule",{"_index":154,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":647,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":90,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["successfully",{"_index":326,"title":{},"body":{"injectables/AuthSService.html":{}}}],["super",{"_index":456,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":748,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":768,"title":{},"body":{"modules.html":{}}}],["table",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["teacher",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":737,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":740,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":739,"title":{},"body":{"index.html":{}}}],["tests",{"_index":736,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":746,"title":{},"body":{"index.html":{}}}],["this.adminservice.createadmin(body",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadmin(id",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminfromemail(email.tolowercase",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.adminservice.getall",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updateadmin(body",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login",{"_index":218,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.authservice.logout(req.user",{"_index":245,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.authservice.register(dto",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{}}}],["this.getjwttoken(admin",{"_index":223,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["this.getjwttoken(student",{"_index":373,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["this.getjwttoken(user",{"_index":243,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.gradeservice.creategrade(body",{"_index":413,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getall",{"_index":406,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getgrade(parseint(id",{"_index":409,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.updategrade(body",{"_index":415,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.jwtservice.sign(user",{"_index":247,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.lessonservice.createlesson(body",{"_index":491,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getall",{"_index":487,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["this.lessonservice.getall(body",{"_index":530,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getlesson(id",{"_index":496,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.updatelesson(body",{"_index":493,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.prisma.admin.create",{"_index":130,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findmany",{"_index":126,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findunique",{"_index":129,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.update",{"_index":132,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.grade.create",{"_index":432,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findmany",{"_index":430,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findunique",{"_index":431,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.update",{"_index":433,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.lesson.create",{"_index":513,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findmany(param",{"_index":511,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findunique",{"_index":512,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.update",{"_index":514,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.school.create",{"_index":595,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findmany",{"_index":593,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findunique",{"_index":594,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":596,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.student.create",{"_index":650,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findmany",{"_index":648,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findunique",{"_index":649,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.update",{"_index":651,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.user.create",{"_index":318,"title":{},"body":{"injectables/AuthSService.html":{}}}],["this.removetokencookie(res",{"_index":246,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.schoolservice.createschool(body",{"_index":574,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.getschool(parseint(id",{"_index":579,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.updateschool(body",{"_index":576,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.settokencookie(res",{"_index":224,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.studentservice.createstudent(body",{"_index":614,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getall",{"_index":612,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getstudent(id",{"_index":619,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["this.studentservice.getstudent(parseint(id",{"_index":632,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.getstudentfromemail(email.tolowercase",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.studentservice.updatestudent(body",{"_index":616,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.validateuserpassword(password",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":127,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["token",{"_index":204,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["tokenadmin",{"_index":451,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["tokenstudent",{"_index":467,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["tostring",{"_index":317,"title":{},"body":{"injectables/AuthSService.html":{}}}],["touch",{"_index":758,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transformer",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["try",{"_index":217,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"controllers/AuthStudentController.html":{}}}],["twitter",{"_index":764,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":777,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":234,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":210,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["unit",{"_index":735,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":109,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthSService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["unlicensed",{"_index":776,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":236,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["updateadmin",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updateadmin(@body",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["updateadmin(admin",{"_index":116,"title":{},"body":{"injectables/AdminService.html":{}}}],["updateadmin(body",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{}}}],["updategrade",{"_index":387,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["updategrade(@body",{"_index":414,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(body",{"_index":396,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(grade",{"_index":427,"title":{},"body":{"injectables/GradeService.html":{}}}],["updatelesson",{"_index":475,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["updatelesson(@body",{"_index":492,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["updatelesson(body",{"_index":482,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["updatelesson(lesson",{"_index":508,"title":{},"body":{"injectables/LessonService.html":{}}}],["updateschool",{"_index":560,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateschool(@body",{"_index":575,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(body",{"_index":567,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(school",{"_index":591,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updatestudent",{"_index":602,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["updatestudent(@body",{"_index":615,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(body",{"_index":609,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(student",{"_index":645,"title":{},"body":{"injectables/StudentService.html":{}}}],["url",{"_index":545,"title":{},"body":{"injectables/PrismaService.html":{}}}],["used",{"_index":332,"title":{},"body":{"injectables/AuthSService.html":{}}}],["useguards",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["useguards(authguard(['jwtadminsecret",{"_index":404,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(jwtadminguard",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get(':adminid",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(jwtadminguard)@get(':lessonid",{"_index":479,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["useguards(jwtadminguard)@get(':schoolid",{"_index":565,"title":{},"body":{"controllers/SchoolController.html":{}}}],["useguards(jwtadminguard)@get(':studentid",{"_index":606,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get('user",{"_index":207,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@post",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@post('logout",{"_index":198,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@put",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtstudentguard",{"_index":374,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get",{"_index":628,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get(':lessonid",{"_index":521,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["useguards(jwtstudentguard)@get(':studentid",{"_index":626,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get('user",{"_index":367,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@post",{"_index":519,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@post('logout",{"_index":363,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@put",{"_index":525,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(undefined)@get",{"_index":391,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@get(':gradeid",{"_index":394,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@post",{"_index":389,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@put",{"_index":397,"title":{},"body":{"controllers/GradeController.html":{}}}],["user",{"_index":188,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthSService.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["user(req",{"_index":206,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["user.password",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":439,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validate(payload",{"_index":441,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validateuserpassword",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserpassword(password",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDTO.html":{},"dependencies.html":{}}}],["value",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":783,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":237,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["version",{"_index":774,"title":{},"body":{"properties.html":{}}}],["void",{"_index":202,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["watch",{"_index":730,"title":{},"body":{"index.html":{}}}],["website",{"_index":762,"title":{},"body":{"index.html":{}}}],["world",{"_index":179,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":506,"title":{},"body":{"injectables/LessonService.html":{}}}],["you'd",{"_index":751,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmins\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(body: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':adminId')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/admin')\nexport class AdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private adminService: AdminService,\n  ) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getAdmins(): Promise {\n    return this.adminService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createAdmin(@Body() body: CreateAdminDto): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n    };\n    return this.adminService.createAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateAdmin(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    return this.adminService.updateAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':adminId')\n  async getAdmin(@Param('adminId') id: number): Promise {\n    return this.adminService.getAdmin(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from 'src/services/admin.service';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  providers: [AdminService, AuthService, StudentService, JwtService],\n  controllers: [AdminController],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                getAdmin\n                            \n                            \n                                    Async\n                                getAdminFromEmail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/admin.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(admin: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(admin)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.admin.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getAdminFromEmail(email: string): Promise {\n    return this.prisma.admin.findUnique({ where: { email } });\n  }\n\n  async getAdmin(id: number): Promise> {\n    return this.prisma.admin.findUnique({ where: { id } });\n  }\n\n  async createAdmin(admin: CreateAdminDto) {\n    return this.prisma.admin.create({ data: admin });\n  }\n\n  async updateAdmin(admin) {\n    return this.prisma.admin.update({\n      data: admin,\n      where: {\n        id: admin.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthAdminModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuthStudentModule\n                        \n                        \n                            GradeModule\n                        \n                        \n                            LessonAdminModule\n                        \n                        \n                            LessonStudentModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            StudentAdminModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\n// import { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AdminModule } from './admin/admin/admin.module';\nimport { AuthAdminModule } from './admin/auth-admin/auth-admin.module';\nimport { SchoolModule } from './admin/school/school.module';\nimport { GradeModule } from './admin/grade/grade.module';\nimport { StudentAdminModule } from './admin/student-admin/student-admin.module';\nimport { LessonAdminModule } from './admin/lesson/lesson-admin.module';\nimport { LessonStudentModule } from './student/lesson/lesson-student.module';\nimport { StudentModule } from './student/student/student.module';\nimport { AuthStudentModule } from './student/auth/auth-student.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    AuthModule,\n    PrismaModule,\n    AdminModule,\n    AuthAdminModule,\n    AuthStudentModule,\n    SchoolModule,\n    GradeModule,\n    StudentAdminModule,\n    LessonAdminModule,\n    LessonStudentModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthAdminController.html":{"url":"controllers/AuthAdminController.html","title":"controller - AuthAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtAdminGuard } from './jwt.guard';\n\n@Controller('admin/auth')\nexport class AuthAdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const admin = await this.authService.login(\n        req.body.email,\n        req.body.password,\n        true,\n      );\n      console.log(admin);\n\n      const jwtToken = this.getJwtToken(admin);\n      this.setTokenCookie(res, jwtToken);\n\n      console.log(jwtToken);\n      // return true;\n      return { admin: admin, token: jwtToken };\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenAdmin', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenAdmin', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthAdminModule.html":{"url":"modules/AuthAdminModule.html","title":"module - AuthAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtAdminStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthAdminController } from './auth-admin.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtAdminStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtAdminSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtAdminStrategy],\n  controllers: [AuthAdminController],\n})\nexport class AuthAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: RegisterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthSService } from './auth.service';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterDTO {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  repeatPassword: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthSService) {}\n\n  @Post('register')\n  register(@Body() dto: RegisterDTO) {\n    return this.authService.register(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthSService\n\nAuthSService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthSService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthSService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthSService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  providers: [AuthSService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthSService.html":{"url":"injectables/AuthSService.html","title":"injectable - AuthSService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: RegisterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDTO } from './auth.controller';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable()\nexport class AuthSService {\n  constructor(private prisma: PrismaService, private config: ConfigService) {}\n\n  async register(dto: RegisterDTO) {\n    try {\n      if (dto.password !== dto.repeatPassword)\n        throw new BadRequestException('Passwords must be equal!');\n      const key = CryptoJS.enc.Utf8.parse(this.config.get('SECRET_PASS'));\n      const passwordHash = CryptoJS.AES.encrypt(dto.password, key, {\n        iv: key,\n      }).toString();\n      const user = await this.prisma.user.create({\n        data: {\n          name: dto.name,\n          email: dto.email,\n          password: passwordHash,\n        },\n      });\n      const { password, ...result } = user;\n      return {\n        statusCode: 201,\n        message: 'User created successfully.',\n        data: result,\n      };\n    } catch (error) {\n      console.log(error);\n      if (error instanceof PrismaClientKnownRequestError) {\n        if (error.code === 'P2002') {\n          throw new ForbiddenException('Email or name has already been used!');\n        }\n      }\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentService: StudentService, adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUserPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(password: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { AdminService } from './admin.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private studentService: StudentService,\n    private adminService: AdminService,\n  ) {}\n\n  async login(\n    email: string,\n    password: string,\n    isAdmin: boolean = false,\n  ): Promise {\n    const user = await (isAdmin\n      ? this.adminService.getAdminFromEmail(email.toLowerCase())\n      : this.studentService.getStudentFromEmail(email.toLowerCase()));\n    if (!user) {\n      throw new Error('User not found');\n    }\n    const isPasswordValid = await this.validateUserPassword(password, user);\n    if (!isPasswordValid) {\n      throw new Error('Wrong password');\n    }\n\n    return user;\n  }\n\n  async validateUserPassword(password: string, user: any): Promise {\n    if (user && bcrypt.compareSync(password, user.password)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthStudentController.html":{"url":"controllers/AuthStudentController.html","title":"controller - AuthStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/auth-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtStudentGuard } from './jwt.guard';\n\n@Controller('student/auth')\nexport class AuthStudentController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const student = await this.authService.login(\n        req.body.email,\n        req.body.password,\n      );\n      console.log(student);\n\n      const jwtToken = this.getJwtToken(student);\n      this.setTokenCookie(res, jwtToken);\n\n      console.log(jwtToken);\n      // return true;\n      return { student: student, token: jwtToken };\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenStudent', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenStudent', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthStudentModule.html":{"url":"modules/AuthStudentModule.html","title":"module - AuthStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/auth/auth-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStudentStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthStudentController } from './auth-student.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtStudentStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtStudentSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtStudentStrategy],\n  controllers: [AuthStudentController],\n})\nexport class AuthStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GradeController.html":{"url":"controllers/GradeController.html","title":"controller - GradeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GradeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/grade/grade.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                commun/grade\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get(':gradeId')\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { GradeService } from 'src/services/grade.service';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('commun/grade')\nexport class GradeController {\n  constructor(private gradeService: GradeService) {}\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get()\n  async getAll(): Promise {\n    return this.gradeService.getAll();\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get(':gradeId')\n  async getGrade(@Param('gradeId') id: string): Promise {\n    return this.gradeService.getGrade(parseInt(id));\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Post()\n  async createGrade(@Body() body: any): Promise {\n    body = {\n      ...body,\n      level: parseInt(body.level),\n    };\n    return this.gradeService.createGrade(body);\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Put()\n  async updateGrade(@Body() body): Promise {\n    return this.gradeService.updateGrade(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GradeModule.html":{"url":"modules/GradeModule.html","title":"module - GradeModule","body":"\n                   \n\n\n\n\n    Modules\n    GradeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\n\nGradeService\n\nGradeService\n\n\n\nGradeModule\n\nGradeModule\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/grade/grade.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GradeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GradeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GradeController } from './grade.controller';\nimport { GradeService } from 'src/services/grade.service';\n\n@Module({\n  providers: [GradeService],\n  controllers: [GradeController],\n})\nexport class GradeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GradeService.html":{"url":"injectables/GradeService.html","title":"injectable - GradeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GradeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/grade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGrade\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getGrade\n                            \n                            \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/grade.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(grade: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(grade)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class GradeService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const grades = await this.prisma.grade.findMany();\n    if (!grades) {\n      throw new NotFoundException();\n    }\n    return grades;\n  }\n\n  async getGrade(id: number): Promise> {\n    return this.prisma.grade.findUnique({ where: { id } });\n  }\n\n  async createGrade(grade: any) {\n    return this.prisma.grade.create({ data: grade });\n  }\n\n  async updateGrade(grade) {\n    return this.prisma.grade.update({\n      data: grade,\n      where: {\n        id: grade.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminGuard.html":{"url":"injectables/JwtAdminGuard.html","title":"injectable - JwtAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAdminGuard extends AuthGuard('jwtAdminSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminStrategy.html":{"url":"injectables/JwtAdminStrategy.html","title":"injectable - JwtAdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth-admin/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n};\n\n@Injectable()\nexport class JwtAdminStrategy extends PassportStrategy(\n  Strategy,\n  'jwtAdminSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtAdminSecret'),\n    });\n  }\n\n  async validate(payload) {\n    console.log(payload);\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentGuard.html":{"url":"injectables/JwtStudentGuard.html","title":"injectable - JwtStudentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtStudentGuard extends AuthGuard('jwtStudentSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentStrategy.html":{"url":"injectables/JwtStudentStrategy.html","title":"injectable - JwtStudentStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/student/auth/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n};\n\n@Injectable()\nexport class JwtStudentStrategy extends PassportStrategy(\n  Strategy,\n  'jwtStudentSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtStudentSecret'),\n    });\n  }\n\n  async validate(payload) {\n    console.log(payload);\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonAdminController.html":{"url":"controllers/LessonAdminController.html","title":"controller - LessonAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  UseGuards,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/lesson')\nexport class LessonAdminController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.lessonService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateLesson(@Body() body): Promise {\n    return this.lessonService.updateLesson(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonAdminModule.html":{"url":"modules/LessonAdminModule.html","title":"module - LessonAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonAdminController } from './lesson-admin.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonAdminController],\n  providers: [LessonService],\n})\nexport class LessonAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonService.html":{"url":"injectables/LessonService.html","title":"injectable - LessonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/lesson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLesson\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getLesson\n                            \n                            \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/lesson.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(lesson: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lesson\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(param?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(lesson)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lesson\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class LessonService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll(param?: any) {\n    const lessons = await this.prisma.lesson.findMany(param);\n    if (!lessons) {\n      throw new NotFoundException();\n    }\n    return lessons;\n  }\n\n  async getLesson(id: number): Promise> {\n    return this.prisma.lesson.findUnique({ where: { id } });\n  }\n\n  async createLesson(lesson: any) {\n    return this.prisma.lesson.create({ data: lesson });\n  }\n\n  async updateLesson(lesson) {\n    return this.prisma.lesson.update({\n      data: lesson,\n      where: {\n        id: lesson.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonStudentController.html":{"url":"controllers/LessonStudentController.html","title":"controller - LessonStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/lesson/lesson-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/lesson')\nexport class LessonStudentController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async getStudents(@Body() body: any): Promise {\n    return this.lessonService.getAll(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Put()\n  async updateLesson(@Body() body): Promise {\n    return this.lessonService.updateLesson(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonStudentModule.html":{"url":"modules/LessonStudentModule.html","title":"module - LessonStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonStudentModule\n\n\n\ncluster_LessonStudentModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/lesson/lesson-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonStudentController } from './lesson-student.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonStudentController],\n  providers: [LessonService],\n})\nexport class LessonStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDTO.html":{"url":"classes/RegisterDTO.html","title":"class - RegisterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                repeatPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        repeatPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.controller.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { AuthSService } from './auth.service';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class RegisterDTO {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  repeatPassword: string;\n}\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthSService) {}\n\n  @Post('register')\n  register(@Body() dto: RegisterDTO) {\n    return this.authService.register(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(body: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':schoolId')\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { SchoolService } from 'src/services/school.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/school')\nexport class SchoolController {\n  constructor(private schoolService: SchoolService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createSchool(@Body() body: CreateSchoolDto): Promise {\n    return this.schoolService.createSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateSchool(@Body() body): Promise {\n    return this.schoolService.updateSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':schoolId')\n  async getSchool(@Param('schoolId') id: string): Promise {\n    return this.schoolService.getSchool(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolService\n\nSchoolService\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolController } from './school.controller';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { SchoolService } from 'src/services/school.service';\n\n@Module({\n  providers: [SchoolService],\n  controllers: [SchoolController],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSchool\n                            \n                            \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(school: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(school)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.school.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getSchool(id: number): Promise> {\n    return this.prisma.school.findUnique({ where: { id: id } });\n  }\n\n  async createSchool(school: CreateSchoolDto) {\n    return this.prisma.school.create({ data: school });\n  }\n\n  async updateSchool(school) {\n    return this.prisma.school.update({\n      data: school,\n      where: {\n        id: school.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentAdminController.html":{"url":"controllers/StudentAdminController.html","title":"controller - StudentAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/student')\nexport class StudentAdminController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    return this.studentService.updateStudent(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: number): Promise {\n    return this.studentService.getStudent(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentAdminModule.html":{"url":"modules/StudentAdminModule.html","title":"module - StudentAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentAdminModule\n\n\n\ncluster_StudentAdminModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentAdminController } from './student-admin.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentAdminController],\n  providers: [StudentService],\n})\nexport class StudentAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/student')\nexport class StudentController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    return this.studentService.updateStudent(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: string): Promise {\n    return this.studentService.getStudent(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentController],\n  providers: [StudentService],\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStudent\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getStudent\n                            \n                            \n                                    Async\n                                getStudentFromEmail\n                            \n                            \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/student.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(student: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    student\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudentFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudentFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(student)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    student\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class StudentService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const students = await this.prisma.student.findMany();\n    if (!students) {\n      throw new NotFoundException();\n    }\n    return students;\n  }\n\n  async getStudentFromEmail(email: string): Promise {\n    return this.prisma.student.findUnique({ where: { email } });\n  }\n\n  async getStudent(id: number): Promise {\n    return this.prisma.student.findUnique({ where: { id } });\n  }\n\n  async createStudent(student: any) {\n    return this.prisma.student.create({ data: student });\n  }\n\n  async updateStudent(student) {\n    return this.prisma.student.update({\n      data: student,\n      where: {\n        id: student.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/auth-admin.controller.ts\n            \n            controller\n            AuthAdminController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.guard.ts\n            \n            injectable\n            JwtAdminGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            injectable\n            JwtAdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/grade/grade.controller.ts\n            \n            controller\n            GradeController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/lesson/lesson-admin.controller.ts\n            \n            controller\n            LessonAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/student-admin/student-admin.controller.ts\n            \n            controller\n            StudentAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            class\n            RegisterDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthSService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/grade.service.ts\n            \n            injectable\n            GradeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/lesson.service.ts\n            \n            injectable\n            LessonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/auth-student.controller.ts\n            \n            controller\n            AuthStudentController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.guard.ts\n            \n            injectable\n            JwtStudentGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStudentStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/lesson/lesson-student.controller.ts\n            \n            controller\n            LessonStudentController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/student/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.21\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @prisma/client : ^4.12.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            config : ^3.3.9\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.1.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleAdmin   (src/.../admin.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleAdmin\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                 SECRETARY\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                 ASSISTANT\n                            \n                        \n                        \n                            \n                                 TRAINER\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                 DIRECTOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GradeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nAuthSService\n\nAuthSService\n\nAuthModule -->\n\nAuthSService->AuthModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nGradeService\n\nGradeService\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\nLessonService\n\nLessonService\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateAdminDto   (src/.../admin.dto.ts)\n                        \n                        \n                            CreateSchoolDto   (src/.../school.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateAdminDto\n                \n            \n            \n                \n                        Prisma.AdminCreateInput\n\n                \n            \n        \n    \n    src/dto/school.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateSchoolDto\n                \n            \n            \n                \n                        Prisma.SchoolCreateInput\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth-admin/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n}\n                    \n                \n\n\n        \n    \n\n    src/student/auth/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

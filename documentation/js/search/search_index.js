var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,0.739,1,2.353]],["body/controllers/AdminController.html",[0,0.557,1,2.622,2,0.557,3,0.212,4,0.189,5,0.189,6,2.233,7,1.193,8,2.63,9,0.456,10,0.936,11,1.76,12,3.298,13,3.298,14,5.103,15,3.298,16,2.63,17,3.444,18,2.164,19,0.024,20,1.775,21,1.154,22,2.63,23,1.185,24,1.185,25,0.996,26,1.185,27,3.236,28,1.229,29,1.869,30,2.233,31,2.096,32,2.63,33,2.63,34,1.447,35,1.971,36,2.63,37,2.63,38,1.775,39,2.63,40,0.476,41,1.28,42,1.763,43,2.035,44,1.193,45,0.189,46,1.835,47,1.619,48,2.844,49,1.28,50,2.096,51,1.775,52,1.971,53,1.619,54,1.489,55,1.28,56,1.489,57,1.775,58,2.63,59,0.212,60,0.189,61,0.98,62,3.118,63,3.141,64,1.154,65,2.63,66,2.63,67,2.622,68,2.911,69,2.63,70,2.63,71,2.911,72,1.775,73,2.63,74,2.63,75,2.63,76,2.63,77,0.013,78,0.013]],["title/modules/AdminModule.html",[79,0.647,80,2.146]],["body/modules/AdminModule.html",[1,3.781,2,1.057,3,0.303,4,0.27,5,0.27,19,0.024,40,0.516,45,0.27,46,2.538,47,2.311,48,3.07,49,1.827,50,2.899,51,2.534,59,0.303,60,0.27,77,0.017,78,0.017,79,1.04,80,4.167,81,1.233,82,1.233,83,1.398,84,1.398,85,1.233,86,2.087,87,1.398,88,3.187,89,3.187,90,2.234,91,1.858,92,1.398,93,1.398,94,3.754,95,2.534,96,1.827]],["title/injectables/AdminService.html",[50,1.582,97,0.563]],["body/injectables/AdminService.html",[3,0.217,4,0.194,5,0.194,9,0.467,10,0.952,11,1.815,12,3.355,13,3.355,15,3.355,17,3.483,19,0.024,21,1.299,23,1.41,24,1.41,25,1.323,26,1.41,28,1.324,29,1.594,30,3.355,31,2.125,34,1.745,40,0.416,45,0.194,50,1.793,52,2.017,59,0.217,60,0.194,61,1.003,64,1.243,77,0.013,78,0.013,97,0.638,98,0.941,99,2.285,100,3.953,101,2.921,102,1.657,103,2.05,104,2.692,105,2.651,106,3.953,107,2.692,108,4.381,109,2.453,110,2.692,111,3.953,112,1.986,113,2.692,114,2.962,115,2.692,116,3.953,117,2.692,118,2.433,119,1.41,120,1.524,121,1.003,122,1.069,123,0.941,124,3.976,125,1.31,126,2.692,127,1.31,128,1.221,129,3.953,130,2.692,131,2.433,132,2.692,133,2.692]],["title/controllers/AppController.html",[0,0.739,134,2.353]],["body/controllers/AppController.html",[0,1.177,2,0.94,3,0.358,4,0.319,5,0.319,9,0.769,10,1.338,18,1.881,19,0.024,21,1.003,28,1.068,40,0.448,45,0.319,59,0.358,60,0.319,64,1.003,77,0.019,78,0.019,112,2.356,121,1.652,122,1.761,134,3.749,135,3.764,136,5.397,137,4.435,138,3.433,139,3.764,140,4.435]],["title/modules/AppModule.html",[79,0.647,141,2.353]],["body/modules/AppModule.html",[2,0.811,3,0.208,4,0.186,5,0.186,19,0.024,40,0.533,45,0.186,59,0.208,60,0.186,77,0.013,78,0.013,79,0.848,80,3.482,81,0.847,82,0.847,83,0.96,84,0.96,85,0.847,86,1.701,87,0.96,91,1.426,92,0.96,93,0.96,134,3.081,138,3.202,139,2.188,141,4.677,142,2.188,143,2.188,144,2.188,145,3.482,146,3.482,147,3.482,148,3.482,149,3.482,150,3.605,151,3.482,152,3.482,153,3.482,154,2.578,155,2.868,156,2.578,157,2.578,158,1.931,159,3.828,160,2.578,161,2.583,162,4.566,163,2.578,164,2.578,165,2.583,166,2.578,167,2.578,168,3.828,169,2.578,170,2.578,171,2.578,172,2.578,173,1.739]],["title/injectables/AppService.html",[97,0.563,138,1.973]],["body/injectables/AppService.html",[3,0.376,4,0.335,5,0.335,9,0.807,10,1.379,19,0.024,21,1.052,28,1.121,40,0.376,45,0.335,59,0.376,60,0.335,64,1.052,77,0.019,78,0.019,97,0.924,98,1.628,112,2.428,136,5.491,138,3.241,174,3.952,175,4.656,176,4.656,177,4.656]],["title/controllers/AuthAdminController.html",[0,0.739,178,2.353]],["body/controllers/AuthAdminController.html",[0,0.404,2,0.404,3,0.154,4,0.137,5,0.137,7,0.864,9,0.33,10,0.73,11,1.534,18,1.602,19,0.024,21,1.132,23,1.285,24,1.285,25,1.285,26,1.285,28,1.206,29,1.547,40,0.379,42,0.864,44,0.864,45,0.137,46,1.5,47,1.172,48,2.325,49,0.927,55,0.927,59,0.154,60,0.137,61,0.709,62,2.046,63,1.866,64,0.974,77,0.01,78,0.01,108,3.206,112,2.124,123,1.506,125,1.475,127,0.927,128,0.864,161,3.68,173,3.546,178,2.046,179,2.974,180,1.285,181,2.573,182,3.206,183,3.206,184,2.573,185,2.573,186,3.753,187,2.573,188,1.904,189,1.616,190,5.34,191,3.234,192,2.573,193,1.904,194,5.226,195,1.616,196,1.904,197,1.904,198,2.573,199,1.904,200,2.573,201,2.573,202,4.252,203,1.904,204,1.616,205,1.904,206,1.904,207,2.651,208,2.573,209,1.172,210,1.616,211,1.904,212,1.616,213,1.616,214,3.206,215,1.616,216,1.616,217,1.616,218,1.616,219,1.904,220,3.206,221,1.904,222,2.573,223,1.616,224,1.616,225,1.616,226,1.616,227,1.616,228,1.616,229,1.616,230,1.616,231,1.616,232,1.427,233,1.616,234,1.616,235,1.616,236,1.616,237,1.616,238,1.616,239,1.616,240,2.573,241,1.616,242,1.616,243,1.616,244,1.616,245,1.616,246,3.032,247,2.573,248,2.573,249,1.866,250,2.573,251,2.573,252,2.573,253,2.573,254,1.616,255,1.616,256,1.616]],["title/modules/AuthAdminModule.html",[79,0.647,145,2.146]],["body/modules/AuthAdminModule.html",[2,0.97,3,0.267,4,0.238,5,0.238,19,0.024,40,0.519,45,0.238,46,2.444,49,1.609,50,2.792,51,2.232,56,1.872,59,0.267,60,0.238,77,0.015,78,0.015,79,0.975,81,1.087,82,1.087,83,1.232,84,1.232,85,1.087,86,1.955,87,1.232,90,2.152,91,1.705,92,1.232,93,1.232,95,2.232,96,1.609,145,4.144,155,2.478,161,2.232,178,3.543,179,1.872,257,2.807,258,2.807,259,3.787,260,2.478,261,2.807,262,2.807,263,2.591,264,2.807,265,2.807,266,2.807,267,2.807,268,2.807,269,2.807,270,3.886,271,2.807,272,2.807]],["title/injectables/AuthService.html",[46,1.384,97,0.563]],["body/injectables/AuthService.html",[3,0.224,4,0.2,5,0.2,9,0.48,10,0.973,11,1.584,19,0.024,21,1.077,23,1.222,24,1.222,25,1.222,26,1.222,28,0.973,29,1.616,40,0.449,45,0.2,46,1.604,50,2.719,53,1.706,54,1.569,59,0.224,60,0.2,61,1.504,62,3.215,64,1.077,67,3.754,77,0.014,78,0.014,90,2.03,97,0.652,98,0.969,103,2.078,105,2.696,112,2.656,114,3.026,120,1.569,122,1.101,123,1.412,125,1.965,127,1.965,128,1.832,173,1.871,186,4.602,249,2.932,273,2.353,274,4.763,275,4.038,276,2.772,277,2.772,278,2.772,279,5.233,280,4.763,281,2.772,282,2.077,283,2.353,284,4.038,285,2.772,286,2.772,287,2.772,288,2.772,289,2.772,290,2.772,291,2.772,292,4.038,293,2.772,294,2.772,295,2.772,296,2.772]],["title/controllers/AuthStudentController.html",[0,0.739,297,2.353]],["body/controllers/AuthStudentController.html",[0,0.41,2,0.41,3,0.156,4,0.139,5,0.139,7,0.877,9,0.335,10,0.739,11,1.541,18,1.618,19,0.024,21,1.14,23,1.293,24,1.293,25,1.293,26,1.293,28,1.214,29,1.557,40,0.382,42,0.877,44,0.877,45,0.139,46,1.515,47,1.19,48,2.348,49,0.941,59,0.156,60,0.139,61,0.72,62,2.07,64,0.982,77,0.01,78,0.01,112,2.138,123,1.519,125,1.493,127,0.941,128,0.877,173,3.402,181,2.604,182,3.238,183,3.238,184,2.604,185,2.604,186,3.777,187,2.604,189,1.641,190,5.357,191,3.253,192,2.604,194,5.244,195,1.641,198,2.604,200,2.604,201,2.604,202,4.28,204,1.641,207,2.673,208,2.604,209,1.19,210,1.641,212,1.641,213,1.641,214,3.238,215,1.641,216,1.641,217,1.641,218,1.641,220,3.238,222,2.604,223,1.641,224,1.641,225,1.641,226,1.641,227,1.641,228,1.641,229,1.641,230,1.641,231,1.641,232,1.448,233,1.641,234,1.641,235,1.641,236,1.641,237,1.641,238,1.641,239,1.641,240,2.604,241,1.641,242,1.641,243,1.641,244,1.641,245,1.641,247,2.604,248,2.604,249,1.888,250,2.604,251,2.604,252,2.604,253,2.604,254,1.641,255,1.641,256,1.641,297,2.07,298,3.959,299,1.448,300,1.933,301,1.933,302,1.933,303,1.933,304,1.933,305,1.933,306,1.933,307,1.933,308,1.933,309,1.094,310,1.933,311,2.858,312,1.933,313,1.933,314,2.299,315,3.068]],["title/modules/AuthStudentModule.html",[79,0.647,146,2.146]],["body/modules/AuthStudentModule.html",[2,0.972,3,0.268,4,0.239,5,0.239,19,0.024,40,0.519,45,0.239,46,2.446,49,1.615,50,2.795,51,2.239,56,1.878,59,0.268,60,0.239,77,0.016,78,0.016,79,0.976,81,1.09,82,1.09,83,1.236,84,1.236,85,1.09,86,1.959,87,1.236,90,2.154,91,1.709,92,1.236,93,1.236,96,1.615,146,4.146,155,2.486,261,2.816,262,2.816,263,2.597,264,2.816,265,2.816,266,2.816,268,2.816,269,2.816,270,3.894,271,2.816,272,2.816,297,3.549,298,2.486,316,2.816,317,2.816,318,3.791,319,2.816,320,2.486,321,2.816]],["title/controllers/GradeController.html",[0,0.739,322,2.353]],["body/controllers/GradeController.html",[0,0.626,2,0.626,3,0.238,4,0.213,5,0.213,7,1.341,9,0.512,10,1.019,11,1.801,18,2.286,19,0.024,21,1.219,23,1.267,24,1.267,25,1.085,26,1.267,27,3.2,28,1.298,29,1.93,34,1.575,40,0.399,41,1.438,42,1.919,43,2.215,44,1.341,45,0.213,59,0.238,60,0.213,64,1.219,77,0.014,78,0.014,101,3.051,112,2.094,121,1.101,322,2.854,323,2.509,324,2.956,325,3.59,326,3.59,327,3.59,328,2.956,329,2.956,330,2.956,331,2.956,332,2.956,333,2.509,334,2.956,335,2.956,336,2.956,337,2.956,338,2.956,339,2.796,340,2.509,341,2.214,342,1.673,343,2.956,344,5.391,345,4.576,346,2.956,347,2.956,348,2.956,349,2.956,350,2.956,351,2.956,352,2.956,353,2.956,354,2.956,355,2.956]],["title/modules/GradeModule.html",[79,0.647,147,2.146]],["body/modules/GradeModule.html",[2,1.146,3,0.343,4,0.306,5,0.306,19,0.024,40,0.48,45,0.306,59,0.343,60,0.306,77,0.018,78,0.018,79,1.104,81,1.397,82,1.397,83,1.584,84,1.584,85,1.397,86,2.216,87,1.584,91,2.015,92,1.584,93,1.584,147,4.067,322,4.015,339,3.741,340,3.609,356,3.609,357,3.609,358,4.251,359,4.251]],["title/injectables/GradeService.html",[97,0.563,339,1.973]],["body/injectables/GradeService.html",[3,0.235,4,0.21,5,0.21,9,0.505,10,1.008,11,1.796,17,1.966,19,0.024,21,1.282,23,1.373,24,1.373,25,1.256,26,1.373,28,1.29,29,1.293,31,2.223,34,1.825,40,0.458,45,0.21,52,2.183,53,1.793,54,1.649,59,0.235,60,0.21,61,1.085,64,1.211,77,0.014,78,0.014,97,0.676,98,1.019,101,3.032,102,1.793,103,2.127,105,2.773,109,2.566,118,2.576,119,1.526,120,1.649,121,1.085,122,1.157,123,1.019,125,1.418,127,1.418,128,1.322,131,2.576,325,3.553,326,3.553,327,3.553,333,3.553,339,2.369,360,2.473,361,2.914,362,4.186,363,2.914,364,3.296,365,2.914,366,2.914,367,4.186,368,2.914,369,4.9,370,2.914,371,2.914,372,2.914,373,2.914,374,2.914]],["title/injectables/JwtAdminGuard.html",[55,1.696,97,0.563]],["body/injectables/JwtAdminGuard.html",[3,0.395,4,0.353,5,0.353,19,0.023,40,0.477,45,0.353,55,2.874,59,0.395,60,0.353,77,0.02,78,0.02,97,0.954,98,1.713,179,2.773,341,3.671,342,2.773,375,4.159,376,3.016,377,4.9]],["title/injectables/JwtAdminStrategy.html",[97,0.563,259,2.146]],["body/injectables/JwtAdminStrategy.html",[3,0.279,4,0.248,5,0.248,9,0.598,10,1.135,11,1.465,19,0.024,21,1.066,23,0.885,24,0.885,26,0.885,28,0.831,40,0.487,45,0.248,59,0.279,60,0.248,61,2,64,1.214,77,0.016,78,0.016,97,0.761,98,1.207,109,1.808,123,1.207,179,3.039,191,2.901,207,2.901,209,2.124,249,2.124,259,2.901,263,2.668,267,2.93,342,1.954,376,2.124,378,2.586,379,4.002,380,3.452,381,4.002,382,3.452,383,4.557,384,2.93,385,4.002,386,2.586,387,2.586,388,4.002,389,2.329,390,2.329,391,4.557,392,3.532,393,2.586,394,2.93,395,3.452,396,2.586,397,2.93,398,2.93,399,2.93,400,2.93,401,2.93]],["title/injectables/JwtStudentGuard.html",[97,0.563,309,1.973]],["body/injectables/JwtStudentGuard.html",[3,0.397,4,0.354,5,0.354,19,0.023,40,0.478,45,0.354,59,0.397,60,0.354,77,0.02,78,0.02,97,0.956,98,1.722,309,3.353,341,3.689,342,2.787,376,3.03,402,4.179,403,4.924]],["title/injectables/JwtStudentStrategy.html",[97,0.563,318,2.146]],["body/injectables/JwtStudentStrategy.html",[3,0.281,4,0.251,5,0.251,9,0.604,10,1.143,11,1.473,19,0.024,21,1.073,23,0.894,24,0.894,26,0.894,28,0.84,40,0.489,45,0.251,59,0.281,60,0.251,61,2.01,64,1.22,77,0.016,78,0.016,97,0.766,98,1.219,109,1.826,123,1.219,191,2.922,207,2.922,209,2.146,249,2.146,263,2.687,318,2.922,321,2.96,342,1.974,345,2.96,376,2.146,379,4.029,381,4.029,383,4.581,384,2.96,385,4.029,386,2.613,387,2.613,388,4.029,389,2.353,390,2.353,392,3.557,393,2.613,396,2.613,397,2.96,398,2.96,399,2.96,400,2.96,401,2.96,404,2.613,405,3.487,406,3.487,407,4.581,408,2.96]],["title/controllers/LessonAdminController.html",[0,0.739,409,2.353]],["body/controllers/LessonAdminController.html",[0,0.578,2,0.578,3,0.22,4,0.196,5,0.196,7,1.238,9,0.473,10,0.961,11,1.773,18,2.202,19,0.024,20,1.841,21,1.174,23,1.21,24,1.21,25,1.023,26,1.21,27,3.32,28,1.251,29,1.888,31,2.141,34,2.059,35,2.044,38,1.841,40,0.381,41,1.327,42,1.811,43,2.09,44,1.238,45,0.196,55,1.327,56,1.544,57,1.841,59,0.22,60,0.196,63,3.196,64,1.174,72,1.841,77,0.014,78,0.014,121,1.016,122,1.083,123,0.954,180,1.841,364,2.456,409,2.693,410,4.141,411,2.728,412,2.99,413,2.99,414,3.505,415,3.388,416,2.316,417,2.728,418,2.044,419,2.728,420,2.728,421,2.728,422,2.728,423,2.728,424,2.297,425,1.841,426,2.728,427,2.728,428,2.316,429,2.693,430,2.693,431,2.316,432,2.728,433,2.99,434,2.728,435,2.316,436,2.316,437,2.316]],["title/modules/LessonAdminModule.html",[79,0.647,148,2.146]],["body/modules/LessonAdminModule.html",[2,1.14,3,0.34,4,0.304,5,0.304,19,0.024,40,0.478,45,0.304,59,0.34,60,0.304,77,0.018,78,0.018,79,1.1,81,1.385,82,1.385,83,1.571,84,1.571,85,1.385,86,2.207,87,1.571,91,2.004,92,1.571,93,1.571,95,2.846,148,4.059,260,3.159,409,3.999,410,3.159,424,3.209,425,2.846,438,3.579,439,3.579,440,3.159]],["title/injectables/LessonService.html",[97,0.563,424,1.696]],["body/injectables/LessonService.html",[3,0.234,4,0.209,5,0.209,9,0.503,10,1.006,11,1.795,19,0.024,21,1.281,23,1.453,24,1.453,25,1.372,26,1.453,28,1.288,29,1.29,31,2.219,34,2.111,40,0.395,41,1.414,45,0.209,59,0.234,60,0.209,61,1.082,64,1.209,77,0.014,78,0.014,97,0.675,98,1.016,101,2.365,102,1.788,103,2.124,105,2.769,109,2.562,118,2.571,119,1.521,120,1.644,121,1.082,122,1.154,123,1.016,125,1.414,127,1.414,128,1.318,131,2.571,412,3.13,413,3.13,415,3.546,418,3.13,424,2.033,440,4.421,441,2.466,442,2.905,443,4.178,444,2.905,445,4.178,446,2.905,447,2.905,448,2.905,449,4.178,450,2.905,451,4.892,452,2.905,453,2.905,454,2.905,455,2.905]],["title/controllers/LessonStudentController.html",[0,0.739,456,2.353]],["body/controllers/LessonStudentController.html",[0,0.651,2,0.651,3,0.248,4,0.221,5,0.221,7,1.393,9,0.532,10,1.047,11,1.752,18,2.139,19,0.024,21,1.14,23,1.293,24,1.293,25,1.293,26,1.293,27,3.236,28,1.215,29,1.856,31,2.288,34,1.879,40,0.407,41,1.494,42,2.288,43,1.608,44,1.393,45,0.221,59,0.248,60,0.221,64,1.14,77,0.015,78,0.015,121,1.144,122,1.219,299,2.3,309,1.738,314,3.779,364,1.89,412,3.256,413,3.256,414,2.933,416,2.606,418,2.3,424,2.454,425,2.072,428,2.606,429,2.072,430,2.072,431,2.606,435,2.606,436,2.606,437,2.606,456,2.933,457,4.109,458,3.07,459,3.689,460,3.07,461,3.07,462,3.07,463,3.07,464,3.07,465,2.606,466,3.07,467,3.07,468,3.07]],["title/modules/LessonStudentModule.html",[79,0.647,149,2.146]],["body/modules/LessonStudentModule.html",[2,1.14,3,0.34,4,0.304,5,0.304,19,0.024,40,0.478,45,0.304,59,0.34,60,0.304,77,0.018,78,0.018,79,1.1,81,1.385,82,1.385,83,1.571,84,1.571,85,1.385,86,2.207,87,1.571,91,2.004,92,1.571,93,1.571,149,4.059,319,3.579,320,3.159,424,3.209,425,2.846,440,3.159,456,3.999,457,3.159,469,4.217,470,4.217]],["title/modules/PrismaModule.html",[79,0.647,150,2.146]],["body/modules/PrismaModule.html",[3,0.337,4,0.301,5,0.301,19,0.023,40,0.432,45,0.301,59,0.337,60,0.301,77,0.018,78,0.018,79,1.096,81,1.374,82,1.374,83,1.558,84,1.558,85,1.374,86,2.199,87,2.199,91,1.994,92,1.558,93,1.558,103,2.772,150,4.118,471,3.55,472,3.55,473,3.55,474,4.182,475,5.353,476,4.182]],["title/injectables/PrismaService.html",[97,0.563,103,1.384]],["body/injectables/PrismaService.html",[3,0.342,4,0.305,5,0.305,19,0.024,21,0.957,23,1.086,24,1.086,25,1.086,26,1.086,40,0.479,45,0.305,59,0.342,60,0.305,61,1.577,77,0.018,78,0.018,97,0.871,98,1.481,103,2.143,119,2.217,158,3.172,263,2.396,376,3.32,396,3.172,477,3.594,478,5.938,479,5.395,480,6.252,481,4.234,482,4.234,483,4.234,484,4.234,485,4.234]],["title/controllers/SchoolController.html",[0,0.739,486,2.353]],["body/controllers/SchoolController.html",[0,0.671,2,0.671,3,0.255,4,0.228,5,0.228,7,1.436,9,0.548,10,1.069,11,1.764,18,2.175,19,0.024,20,2.136,21,1.159,23,1.315,24,1.315,25,1.138,26,1.315,27,3.066,28,1.235,29,1.874,34,1.654,38,2.136,40,0.449,41,1.54,42,2.014,43,2.325,44,1.436,45,0.228,55,1.54,56,1.791,57,2.136,59,0.255,60,0.228,63,3.156,64,1.159,77,0.015,78,0.015,112,2.175,121,1.179,486,2.996,487,2.686,488,3.165,489,3.768,490,3.768,491,3.768,492,3.165,493,4.165,494,3.165,495,2.686,496,3.165,497,3.165,498,3.165,499,3.165,500,2.902,501,2.686,502,2.686,503,3.165,504,3.165,505,3.165,506,3.165,507,3.165,508,3.165,509,3.165,510,3.165]],["title/modules/SchoolModule.html",[79,0.647,151,2.146]],["body/modules/SchoolModule.html",[2,1.103,3,0.323,4,0.288,5,0.288,19,0.024,40,0.525,45,0.288,46,1.59,47,2.464,48,2.464,49,1.948,59,0.323,60,0.288,77,0.018,78,0.018,79,1.073,81,1.315,82,1.315,83,1.491,84,1.491,85,1.315,86,2.154,87,1.491,90,1.4,91,1.938,92,1.491,93,1.491,96,1.948,151,4.003,486,3.902,500,3.681,501,3.398,511,3.398,512,3.398,513,4.003,514,4.003]],["title/injectables/SchoolService.html",[97,0.563,500,1.973]],["body/injectables/SchoolService.html",[3,0.235,4,0.21,5,0.21,9,0.505,10,1.008,11,1.796,19,0.024,21,1.282,23,1.373,24,1.373,25,1.256,26,1.373,28,1.29,29,1.293,31,2.223,34,1.995,40,0.432,45,0.21,59,0.235,60,0.21,61,1.085,64,1.211,77,0.014,78,0.014,97,0.676,98,1.019,101,3.032,102,1.793,103,2.127,105,2.773,109,2.566,118,2.576,119,1.526,120,1.649,121,1.085,122,1.157,123,1.019,124,4.159,125,1.418,127,1.418,128,1.322,131,2.576,489,3.553,490,3.553,491,3.553,493,4.013,495,3.553,500,2.369,502,2.473,515,2.473,516,2.914,517,4.186,518,2.914,519,5.356,520,2.914,521,2.914,522,4.186,523,2.914,524,2.914,525,2.914,526,2.914,527,2.914,528,2.914]],["title/controllers/StudentAdminController.html",[0,0.739,529,2.353]],["body/controllers/StudentAdminController.html",[0,0.54,2,0.54,3,0.205,4,0.183,5,0.183,7,1.155,9,0.441,10,0.913,11,1.749,18,2.13,19,0.024,20,1.718,21,1.135,23,1.162,24,1.162,25,0.973,26,1.162,27,3.356,28,1.21,29,1.851,31,2.056,34,2,35,1.907,38,1.718,40,0.405,41,1.239,42,1.721,43,1.986,44,1.155,45,0.183,53,1.567,54,1.441,55,1.239,56,1.441,57,1.718,59,0.205,60,0.183,63,3.091,64,1.135,67,2.559,68,2.841,71,2.841,72,2.559,77,0.013,78,0.013,90,1.585,96,1.239,121,0.948,122,1.011,123,0.89,165,3.8,180,1.718,364,2.334,414,3.389,429,2.559,430,2.559,433,2.841,529,2.559,530,4.024,531,2.841,532,2.841,533,2.841,534,2.161,535,2.546,536,1.907,537,2.546,538,2.546,539,2.546,540,2.161,541,2.546,542,2.546,543,2.161,544,2.161,545,2.161,546,2.161,547,2.161,548,2.161,549,2.161,550,2.546]],["title/modules/StudentAdminModule.html",[79,0.647,152,2.146]],["body/modules/StudentAdminModule.html",[2,1.138,3,0.339,4,0.302,5,0.302,19,0.023,40,0.477,45,0.302,59,0.339,60,0.302,77,0.018,78,0.018,79,1.098,81,1.38,82,1.38,83,1.564,84,1.564,85,1.38,86,2.203,87,1.564,90,2.304,91,1.999,92,1.564,93,1.564,95,2.834,96,2.043,152,4.054,165,2.834,260,3.146,311,3.146,529,3.992,530,3.146,551,4.199,552,4.199]],["title/controllers/StudentController.html",[0,0.739,553,2.353]],["body/controllers/StudentController.html",[0,0.574,2,0.574,3,0.218,4,0.195,5,0.195,7,1.228,9,0.469,10,0.956,11,1.771,18,2.194,19,0.024,21,1.17,23,1.205,24,1.205,25,1.018,26,1.205,27,3.314,28,1.246,29,1.884,34,1.927,40,0.418,41,1.317,42,1.8,43,2.078,44,1.228,45,0.195,53,1.666,54,1.532,59,0.218,60,0.195,64,1.17,67,2.678,68,2.973,71,2.973,72,2.678,77,0.013,78,0.013,90,1.643,96,1.317,112,1.992,121,1.008,122,1.075,123,0.946,309,1.532,314,3.877,364,1.666,414,3.492,429,1.826,430,1.826,433,2.973,459,2.297,465,2.297,531,2.973,532,2.973,533,2.973,534,2.297,536,2.028,540,2.297,543,2.297,544,2.297,545,2.297,546,2.297,547,2.297,548,2.297,549,2.297,553,2.678,554,2.297,555,2.706,556,2.706,557,2.706,558,2.706,559,2.706,560,2.706,561,2.706,562,2.706,563,2.706,564,2.706]],["title/modules/StudentModule.html",[79,0.647,153,2.146]],["body/modules/StudentModule.html",[2,1.146,3,0.343,4,0.306,5,0.306,19,0.024,40,0.48,45,0.306,59,0.343,60,0.306,77,0.018,78,0.018,79,1.104,81,1.397,82,1.397,83,1.584,84,1.584,85,1.397,86,2.216,87,1.584,90,2.311,91,2.015,92,1.584,93,1.584,96,2.069,153,4.067,320,3.185,553,4.015,565,4.251,566,4.251,567,4.251]],["title/injectables/StudentService.html",[90,1.219,97,0.563]],["body/injectables/StudentService.html",[3,0.22,4,0.196,5,0.196,9,0.473,10,0.961,11,1.819,19,0.024,21,1.305,23,1.417,24,1.417,25,1.332,26,1.417,28,1.331,29,1.604,31,2.141,34,2.059,40,0.381,45,0.196,59,0.22,60,0.196,61,1.016,64,1.249,77,0.014,78,0.014,90,1.396,97,0.644,98,0.954,101,2.94,102,1.679,103,2.063,105,2.671,109,2.472,112,2.001,114,2.99,118,2.456,119,1.429,120,1.544,121,1.016,122,1.083,123,0.954,125,1.327,127,1.327,128,1.238,131,2.456,311,4.326,531,2.99,532,2.99,533,2.99,536,2.99,568,2.316,569,3.991,570,2.728,571,3.991,572,2.728,573,2.728,574,2.728,575,3.991,576,2.728,577,3.991,578,2.728,579,4.72,580,2.728,581,3.991,582,2.728,583,2.728]],["title/coverage.html",[584,3.556]],["body/coverage.html",[0,1.362,1,1.955,5,0.209,6,2.459,19,0.024,25,0.743,46,1.151,50,1.314,55,1.41,77,0.014,78,0.014,85,0.952,90,1.013,97,1.062,99,2.459,103,1.151,128,1.314,134,1.955,135,2.459,138,1.64,161,1.955,165,1.955,174,2.459,178,1.955,179,3.024,180,3.296,259,1.783,273,2.459,297,1.955,298,2.171,299,3.124,309,1.64,318,1.783,322,1.955,323,2.459,339,1.64,360,2.459,375,2.459,378,3.124,389,2.814,390,1.955,402,2.459,404,3.124,409,1.955,410,2.171,424,1.41,441,2.459,456,1.955,457,2.171,477,2.459,486,1.955,487,2.459,500,1.64,515,2.459,529,1.955,530,2.171,553,1.955,554,2.459,568,2.459,584,2.171,585,2.459,586,2.897,587,2.897,588,6.995,589,5.661,590,5.342,591,5.661,592,4.169,593,4.169,594,4.884,595,4.884,596,2.459,597,4.884,598,2.897,599,2.897]],["title/dependencies.html",[82,1.376,600,2.476]],["body/dependencies.html",[19,0.024,45,0.299,49,2.019,54,2.348,60,0.383,77,0.018,78,0.018,82,1.363,119,2.172,158,3.108,209,2.553,263,2.348,342,2.348,386,3.99,387,3.108,601,3.521,602,4.148,603,5.881,604,4.148,605,4.148,606,4.148,607,4.148,608,4.148,609,4.148,610,4.148,611,4.148,612,4.148,613,4.148,614,4.148,615,4.148,616,4.148,617,4.148,618,4.148,619,4.148,620,4.148,621,4.148,622,4.148,623,4.148,624,4.148,625,4.148,626,4.148,627,4.148,628,4.148]],["title/miscellaneous/enumerations.html",[629,1.419,630,3.556]],["body/miscellaneous/enumerations.html",[9,0.892,19,0.021,77,0.021,78,0.021,282,3.855,629,2.504,630,4.367,631,6.081,632,4.367,633,4.367,634,5.145,635,5.145,636,5.145,637,5.145,638,5.145,639,5.145]],["title/miscellaneous/functions.html",[629,1.419,640,3.556]],["body/miscellaneous/functions.html",[9,0.919,19,0.021,77,0.021,78,0.021,85,2.154,596,4.503,629,2.581,640,4.503,641,5.305]],["title/index.html",[9,0.505,642,2.917,643,2.917]],["body/index.html",[4,0.26,19,0.024,77,0.016,78,0.016,232,2.704,584,2.704,585,3.064,601,3.064,644,3.609,645,3.609,646,4.859,647,3.609,648,3.609,649,3.609,650,3.609,651,3.609,652,3.609,653,3.064,654,5.493,655,3.609,656,3.609,657,3.609,658,6.456,659,3.609,660,3.609,661,3.609,662,6.318,663,3.609,664,3.609,665,4.859,666,3.609,667,3.609,668,3.609,669,3.609,670,3.609,671,3.609,672,3.609,673,3.609,674,4.859,675,4.859,676,3.609,677,3.609,678,3.609,679,4.859,680,4.859,681,3.609,682,3.609,683,3.609,684,3.609,685,3.609,686,3.064,687,3.609,688,3.609,689,3.609,690,3.609,691,3.609,692,3.609,693,3.609,694,3.609,695,3.609,696,3.609,697,3.064,698,3.609,699,3.609,700,3.609,701,3.609,702,3.609,703,3.609,704,3.064]],["title/modules.html",[81,1.559]],["body/modules.html",[19,0.018,77,0.018,78,0.018,80,2.617,81,1.397,141,2.869,145,2.617,146,2.617,147,2.617,148,2.617,149,2.617,150,2.617,151,2.617,152,2.617,153,2.617,686,5.907,705,6.96,706,6.96,707,6.96]],["title/overview.html",[708,4.029]],["body/overview.html",[2,0.565,19,0.024,46,2.174,50,2.483,77,0.013,78,0.013,79,0.495,80,3.816,81,0.875,82,0.875,83,0.992,84,0.992,85,0.875,86,0.992,87,0.992,88,2.262,89,2.262,90,2.07,91,1.461,92,0.992,93,0.992,98,0.932,103,2.351,138,2.635,141,4.668,142,2.262,143,2.262,144,2.262,145,3.935,146,3.935,147,3.369,148,3.369,149,3.369,150,3.524,151,3.369,152,3.369,153,3.369,257,2.262,258,2.262,259,2.865,316,2.262,317,2.262,318,2.865,339,2.635,356,2.262,357,2.262,424,2.499,438,2.262,439,2.262,471,2.262,472,2.262,473,2.262,500,2.635,511,2.262,512,2.262,708,2.262,709,2.664,710,2.664,711,2.664]],["title/properties.html",[600,2.476,712,3.556]],["body/properties.html",[19,0.023,77,0.021,78,0.021,653,4.434,697,4.434,704,4.434,712,4.434,713,5.224,714,5.224,715,5.224]],["title/miscellaneous/typealiases.html",[629,1.419,716,4.19]],["body/miscellaneous/typealiases.html",[9,0.892,17,4.104,19,0.021,25,1.319,77,0.021,78,0.021,493,4.556,629,2.504,632,4.367,633,4.367,717,5.145,718,5.145,719,5.145,720,5.145,721,5.145]],["title/miscellaneous/variables.html",[629,1.419,722,3.556]],["body/miscellaneous/variables.html",[9,0.743,19,0.024,64,1.229,77,0.018,78,0.018,179,2.426,191,3.866,207,3.347,282,4.074,283,4.616,378,3.212,389,4.239,390,3.67,391,5.069,392,4.074,393,4.074,394,3.639,404,3.212,407,5.069,408,3.639,629,2.086,722,3.639,723,5.438]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":714,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":255,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["1.1.21",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":710,"title":{},"body":{"overview.html":{}}}],["10.0.3",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":709,"title":{},"body":{"overview.html":{}}}],["12",{"_index":711,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":271,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["3.3.9",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":270,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["7.2.0",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["accounting",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admin",{"_index":108,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{}}}],["admin.controller",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.controller.ts",{"_index":180,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:19",{"_index":421,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:20",{"_index":539,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:23",{"_index":193,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:25",{"_index":417,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:26",{"_index":535,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:35",{"_index":423,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:37",{"_index":541,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:47",{"_index":420,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:50",{"_index":206,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:57",{"_index":538,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:64",{"_index":197,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:73",{"_index":188,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:77",{"_index":203,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:86",{"_index":199,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.id",{"_index":133,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["admin.module.ts",{"_index":260,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.service",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin/admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin/admin/admin.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/auth",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["admin/grade/grade.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/jwt.guard",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["admin/jwt.guard.ts",{"_index":375,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"coverage.html":{}}}],["admin/jwt.strategy.ts",{"_index":378,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin/jwt.strategy.ts:19",{"_index":380,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/jwt.strategy.ts:28",{"_index":382,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/lesson",{"_index":411,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin/lesson/lesson",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/school",{"_index":488,"title":{},"body":{"controllers/SchoolController.html":{}}}],["admin/school/school.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/student",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":80,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["admins",{"_index":124,"title":{},"body":{"injectables/AdminService.html":{},"injectables/SchoolService.html":{}}}],["adminservice",{"_index":50,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["aliases",{"_index":717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":687,"title":{},"body":{"index.html":{}}}],["app",{"_index":660,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":134,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":652,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":138,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assistant",{"_index":636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["auth",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["auth/jwt.guard",{"_index":465,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["authadmincontroller",{"_index":178,"title":{"controllers/AuthAdminController.html":{}},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["authadminmodule",{"_index":145,"title":{"modules/AuthAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":341,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtStudentGuard.html":{}}}],["authguard('jwtadminsecret",{"_index":377,"title":{},"body":{"injectables/JwtAdminGuard.html":{}}}],["authguard('jwtstudentsecret",{"_index":403,"title":{},"body":{"injectables/JwtStudentGuard.html":{}}}],["authheader",{"_index":213,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["author",{"_index":697,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":46,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"overview.html":{}}}],["authstudentcontroller",{"_index":297,"title":{"controllers/AuthStudentController.html":{}},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["authstudentmodule",{"_index":146,"title":{"modules/AuthStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["backers",{"_index":688,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcrypt.comparesync(password",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(body.password",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcryptjs",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"dependencies.html":{}}}],["body",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["body.id",{"_index":433,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["body.password",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["boolean",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":705,"title":{},"body":{"modules.html":{}}}],["building",{"_index":647,"title":{},"body":{"index.html":{}}}],["catch",{"_index":224,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["class",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["cluster_adminmodule",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authadminmodule",{"_index":257,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authadminmodule_providers",{"_index":258,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule",{"_index":316,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule_providers",{"_index":317,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_grademodule",{"_index":356,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_grademodule_providers",{"_index":357,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule",{"_index":438,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule_providers",{"_index":439,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonstudentmodule",{"_index":469,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_lessonstudentmodule_providers",{"_index":470,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_prismamodule",{"_index":471,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":472,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":473,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":511,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":512,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_studentadminmodule",{"_index":551,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentadminmodule_providers",{"_index":552,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentmodule",{"_index":565,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_providers",{"_index":566,"title":{},"body":{"modules/StudentModule.html":{}}}],["commun/grade",{"_index":324,"title":{},"body":{"controllers/GradeController.html":{}}}],["compodoc/compodoc",{"_index":601,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["config",{"_index":263,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["config.get('database_url",{"_index":485,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwtadminsecret",{"_index":267,"title":{},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{}}}],["config.get('jwtstudentsecret",{"_index":321,"title":{},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{}}}],["config.get('sessionlengthindays",{"_index":272,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["configmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":480,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connect",{"_index":429,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["console.log(admin",{"_index":219,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["console.log(error",{"_index":226,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["console.log(jwttoken",{"_index":223,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["console.log(payload",{"_index":401,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["console.log(student",{"_index":312,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(config",{"_index":479,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":102,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["constructor(studentservice",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin/admin",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('admin/auth",{"_index":211,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["controller('admin/lesson",{"_index":426,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["controller('admin/school",{"_index":503,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('admin/student",{"_index":542,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["controller('commun/grade",{"_index":343,"title":{},"body":{"controllers/GradeController.html":{}}}],["controller('student/auth",{"_index":310,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["controller('student/lesson",{"_index":466,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["controller('student/student",{"_index":563,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["cookie",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["cookieextractor",{"_index":389,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":584,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createadmin",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["createadmin(@body",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(admin",{"_index":106,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(body",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmindto",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"miscellaneous/typealiases.html":{}}}],["creategrade",{"_index":325,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["creategrade(@body",{"_index":350,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(body",{"_index":328,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(grade",{"_index":362,"title":{},"body":{"injectables/GradeService.html":{}}}],["createlesson",{"_index":412,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(@body",{"_index":428,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(body",{"_index":416,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(lesson",{"_index":443,"title":{},"body":{"injectables/LessonService.html":{}}}],["createschool",{"_index":489,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@body",{"_index":504,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(body",{"_index":492,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(school",{"_index":517,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":493,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"miscellaneous/typealiases.html":{}}}],["createstudent",{"_index":531,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["createstudent(@body",{"_index":544,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(body",{"_index":534,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(student",{"_index":571,"title":{},"body":{"injectables/StudentService.html":{}}}],["crypto",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":131,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["datasources",{"_index":482,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":483,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["default",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["delete",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":653,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":661,"title":{},"body":{"index.html":{}}}],["director",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disable",{"_index":229,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["documentation",{"_index":585,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":252,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["e2e",{"_index":676,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":648,"title":{},"body":{"index.html":{}}}],["email",{"_index":114,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/StudentService.html":{}}}],["enumerations",{"_index":630,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":225,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["error('user",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('wrong",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint",{"_index":228,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["eslint/no",{"_index":233,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["exp",{"_index":236,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["expiresin",{"_index":269,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["export",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":209,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":376,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":384,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["extractjwt.fromextractors([cookieextractor",{"_index":398,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["false",{"_index":249,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["found",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":646,"title":{},"body":{"index.html":{}}}],["function",{"_index":390,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":640,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':adminid",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{}}}],["get(':gradeid",{"_index":347,"title":{},"body":{"controllers/GradeController.html":{}}}],["get(':lessonid",{"_index":435,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["get(':schoolid",{"_index":508,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(':studentid",{"_index":548,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["get('user",{"_index":227,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getadmin",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadmin(@param('adminid",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{}}}],["getadmin(id",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadminfromemail",{"_index":100,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminfromemail(email",{"_index":111,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadmins",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{}}}],["getall",{"_index":101,"title":{},"body":{"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["getall(param",{"_index":445,"title":{},"body":{"injectables/LessonService.html":{}}}],["getgrade",{"_index":326,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["getgrade(@param('gradeid",{"_index":348,"title":{},"body":{"controllers/GradeController.html":{}}}],["getgrade(id",{"_index":333,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["gethello",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjwttoken",{"_index":181,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getjwttoken(user",{"_index":187,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getlesson",{"_index":413,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(@param('lessonid",{"_index":436,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(id",{"_index":418,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getschool",{"_index":490,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getschool(@param('schoolid",{"_index":509,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getschool(id",{"_index":495,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getstudent",{"_index":532,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudent(@param('studentid",{"_index":549,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudent(id",{"_index":536,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudentfromemail",{"_index":569,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentfromemail(email",{"_index":575,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudents",{"_index":414,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudents(@body",{"_index":467,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getstudents(body",{"_index":463,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getting",{"_index":642,"title":{"index.html":{}},"body":{}}],["global",{"_index":475,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grade",{"_index":364,"title":{},"body":{"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["grade.controller",{"_index":359,"title":{},"body":{"modules/GradeModule.html":{}}}],["grade.id",{"_index":374,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradecontroller",{"_index":322,"title":{"controllers/GradeController.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"coverage.html":{}}}],["grademodule",{"_index":147,"title":{"modules/GradeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GradeModule.html":{},"modules.html":{},"overview.html":{}}}],["grades",{"_index":369,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradeservice",{"_index":339,"title":{"injectables/GradeService.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":683,"title":{},"body":{"index.html":{}}}],["headers('authorization",{"_index":212,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["hello",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":694,"title":{},"body":{"index.html":{}}}],["httponly",{"_index":247,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["https://nestjs.com",{"_index":701,"title":{},"body":{"index.html":{}}}],["iat",{"_index":237,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["id",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["identifier",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":399,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["imports",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"overview.html":{}}}],["installation",{"_index":657,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":659,"title":{},"body":{"index.html":{}}}],["isadmin",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["isglobal",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ispasswordvalid",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":690,"title":{},"body":{"index.html":{}}}],["js",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":387,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":210,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["jwt.strategy",{"_index":264,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtadminguard",{"_index":55,"title":{"injectables/JwtAdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/JwtAdminGuard.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["jwtadminsecret",{"_index":395,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["jwtadminstrategy",{"_index":259,"title":{"injectables/JwtAdminStrategy.html":{}},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":397,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtmodule",{"_index":262,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtmodule.register",{"_index":265,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtservice",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["jwtstudentguard",{"_index":309,"title":{"injectables/JwtStudentGuard.html":{}},"body":{"controllers/AuthStudentController.html":{},"injectables/JwtStudentGuard.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["jwtstudentsecret",{"_index":345,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtstudentstrategy",{"_index":318,"title":{"injectables/JwtStudentStrategy.html":{}},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":220,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["kamil",{"_index":698,"title":{},"body":{"index.html":{}}}],["lax",{"_index":251,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["lesson",{"_index":440,"title":{},"body":{"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"modules/LessonStudentModule.html":{}}}],["lessonadmincontroller",{"_index":409,"title":{"controllers/LessonAdminController.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["lessonadminmodule",{"_index":148,"title":{"modules/LessonAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["lessons",{"_index":451,"title":{},"body":{"injectables/LessonService.html":{}}}],["lessonservice",{"_index":424,"title":{"injectables/LessonService.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["lessonstudentcontroller",{"_index":456,"title":{"controllers/LessonStudentController.html":{}},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["lessonstudentmodule",{"_index":149,"title":{"modules/LessonStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["level",{"_index":351,"title":{},"body":{"controllers/GradeController.html":{}}}],["license",{"_index":704,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":680,"title":{},"body":{"index.html":{}}}],["line",{"_index":231,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["localhost",{"_index":253,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["login",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithpassword",{"_index":182,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["loginwithpassword(res",{"_index":189,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout",{"_index":183,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout(req",{"_index":195,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["matching",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":254,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["metadata",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["miscellaneous",{"_index":629,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":679,"title":{},"body":{"index.html":{}}}],["mode",{"_index":665,"title":{},"body":{"index.html":{}}}],["module",{"_index":79,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":693,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":699,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["nest",{"_index":654,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":703,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":342,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":128,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["newjwttoken",{"_index":240,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["next",{"_index":230,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["node.js",{"_index":645,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":118,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["npm",{"_index":658,"title":{},"body":{"index.html":{}}}],["npx",{"_index":669,"title":{},"body":{"index.html":{}}}],["null",{"_index":392,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"injectables/StudentService.html":{}}}],["open",{"_index":681,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["overview",{"_index":708,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":670,"title":{},"body":{"index.html":{}}}],["package",{"_index":600,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["parseint(body.grade",{"_index":430,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parseint(body.level",{"_index":352,"title":{},"body":{"controllers/GradeController.html":{}}}],["parser",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":386,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":388,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["passthrough",{"_index":214,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["password",{"_index":67,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["path",{"_index":256,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["payload",{"_index":383,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["please",{"_index":691,"title":{},"body":{"index.html":{}}}],["post",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["post('logout",{"_index":242,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["prisma",{"_index":105,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["prisma.admincreateinput",{"_index":719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.schoolcreateinput",{"_index":721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.service",{"_index":476,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":119,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":478,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":150,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":103,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["production",{"_index":667,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":644,"title":{},"body":{"index.html":{}}}],["project",{"_index":682,"title":{},"body":{"index.html":{}}}],["promise",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["properties",{"_index":712,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["put",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["read",{"_index":692,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["reflect",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":239,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["removetokencookie",{"_index":184,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["removetokencookie(res",{"_index":198,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["repository",{"_index":656,"title":{},"body":{"index.html":{}}}],["req",{"_index":191,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.body.email",{"_index":217,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.body.password",{"_index":218,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.cookies",{"_index":393,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenadmin",{"_index":394,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenstudent",{"_index":408,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":238,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["request",{"_index":207,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":194,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["res.cookie('tokenadmin",{"_index":246,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["res.cookie('tokenstudent",{"_index":315,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["response",{"_index":190,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["results",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["roleadmin",{"_index":631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":662,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":250,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["scalable",{"_index":649,"title":{},"body":{"index.html":{}}}],["school",{"_index":519,"title":{},"body":{"injectables/SchoolService.html":{}}}],["school.controller",{"_index":514,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.id",{"_index":528,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolcontroller",{"_index":486,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":151,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":500,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":266,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["secretary",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secretorkey",{"_index":400,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["secure",{"_index":248,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["server",{"_index":650,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":261,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["settokencookie",{"_index":185,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["settokencookie(res",{"_index":201,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["side",{"_index":651,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":268,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["sponsors",{"_index":685,"title":{},"body":{"index.html":{}}}],["src/.../admin.dto.ts",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../jwt.strategy.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../school.dto.ts",{"_index":718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin/admin.controller.ts:27",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:33",{"_index":22,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:43",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:57",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.module.ts",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth",{"_index":179,"title":{},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/grade/grade.controller.ts",{"_index":323,"title":{},"body":{"controllers/GradeController.html":{},"coverage.html":{}}}],["src/admin/grade/grade.controller.ts:19",{"_index":332,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:25",{"_index":335,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:31",{"_index":330,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:41",{"_index":338,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.module.ts",{"_index":358,"title":{},"body":{"modules/GradeModule.html":{}}}],["src/admin/lesson/lesson",{"_index":410,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts",{"_index":487,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts:20",{"_index":494,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:26",{"_index":499,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:32",{"_index":497,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.module.ts",{"_index":513,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/admin/student",{"_index":530,"title":{},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/dto/admin.dto",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{}}}],["src/dto/admin.dto.ts",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/dto/school.dto",{"_index":502,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["src/dto/school.dto.ts",{"_index":720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":474,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":477,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":481,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/admin.service",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["src/services/admin.service.ts",{"_index":99,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/services/admin.service.ts:10",{"_index":115,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:18",{"_index":113,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:22",{"_index":110,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:26",{"_index":107,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:30",{"_index":117,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:7",{"_index":104,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/auth.service",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["src/services/auth.service.ts",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth.service.ts:15",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:34",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:8",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/grade.service",{"_index":340,"title":{},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{}}}],["src/services/grade.service.ts",{"_index":360,"title":{},"body":{"injectables/GradeService.html":{},"coverage.html":{}}}],["src/services/grade.service.ts:11",{"_index":365,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:19",{"_index":366,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:23",{"_index":363,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:27",{"_index":368,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:8",{"_index":361,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/lesson.service",{"_index":425,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{}}}],["src/services/lesson.service.ts",{"_index":441,"title":{},"body":{"injectables/LessonService.html":{},"coverage.html":{}}}],["src/services/lesson.service.ts:17",{"_index":448,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:21",{"_index":444,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:25",{"_index":450,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:6",{"_index":442,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:9",{"_index":446,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/school.service",{"_index":501,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["src/services/school.service.ts",{"_index":515,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/services/school.service.ts:10",{"_index":520,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:18",{"_index":521,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:22",{"_index":518,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:26",{"_index":523,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:7",{"_index":516,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/student.service",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["src/services/student.service.ts",{"_index":568,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/services/student.service.ts:17",{"_index":576,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:21",{"_index":574,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:25",{"_index":572,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:29",{"_index":578,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:6",{"_index":570,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:9",{"_index":573,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/auth/auth",{"_index":298,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["src/student/auth/jwt.guard.ts",{"_index":402,"title":{},"body":{"injectables/JwtStudentGuard.html":{},"coverage.html":{}}}],["src/student/auth/jwt.strategy.ts",{"_index":404,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/student/auth/jwt.strategy.ts:19",{"_index":405,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/auth/jwt.strategy.ts:28",{"_index":406,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/lesson/lesson",{"_index":457,"title":{},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts",{"_index":554,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts:20",{"_index":560,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:26",{"_index":556,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:37",{"_index":562,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:53",{"_index":558,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.module.ts",{"_index":567,"title":{},"body":{"modules/StudentModule.html":{}}}],["start",{"_index":663,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":666,"title":{},"body":{"index.html":{}}}],["start:prodget",{"_index":668,"title":{},"body":{"index.html":{}}}],["started",{"_index":643,"title":{"index.html":{}},"body":{}}],["starter",{"_index":655,"title":{},"body":{"index.html":{}}}],["statements",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":695,"title":{},"body":{"index.html":{}}}],["stest",{"_index":672,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":385,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["string",{"_index":112,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/SchoolController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["student",{"_index":311,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/StudentAdminModule.html":{},"injectables/StudentService.html":{}}}],["student.controller",{"_index":320,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{},"modules/StudentModule.html":{}}}],["student.controller.ts",{"_index":299,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"coverage.html":{}}}],["student.controller.ts:19",{"_index":464,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:23",{"_index":302,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:25",{"_index":460,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:35",{"_index":462,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:49",{"_index":308,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:63",{"_index":304,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:72",{"_index":301,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:76",{"_index":306,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:85",{"_index":305,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["student.module.ts",{"_index":319,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{}}}],["student.service",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["student/auth",{"_index":300,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student/auth/auth",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["student/lesson",{"_index":458,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student/lesson/lesson",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["student/student",{"_index":555,"title":{},"body":{"controllers/StudentController.html":{}}}],["student/student/student.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["studentadmincontroller",{"_index":529,"title":{"controllers/StudentAdminController.html":{}},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["studentadminmodule",{"_index":152,"title":{"modules/StudentAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["studentcontroller",{"_index":553,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentmodule",{"_index":153,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":579,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":90,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["super",{"_index":396,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":686,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":706,"title":{},"body":{"modules.html":{}}}],["table",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["teacher",{"_index":638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":675,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":678,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":677,"title":{},"body":{"index.html":{}}}],["tests",{"_index":674,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":684,"title":{},"body":{"index.html":{}}}],["this.adminservice.createadmin(body",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadmin(id",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminfromemail(email.tolowercase",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.adminservice.getall",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updateadmin(body",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login",{"_index":216,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.authservice.logout(req.user",{"_index":243,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.getjwttoken(admin",{"_index":221,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["this.getjwttoken(student",{"_index":313,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["this.getjwttoken(user",{"_index":241,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.gradeservice.creategrade(body",{"_index":353,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getall",{"_index":346,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getgrade(parseint(id",{"_index":349,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.updategrade(body",{"_index":355,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.jwtservice.sign(user",{"_index":245,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.lessonservice.createlesson(body",{"_index":431,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getall",{"_index":427,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["this.lessonservice.getall(body",{"_index":468,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getlesson(id",{"_index":437,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.updatelesson(id",{"_index":434,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["this.prisma.admin.create",{"_index":130,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findmany",{"_index":126,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findunique",{"_index":129,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.update",{"_index":132,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.grade.create",{"_index":372,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findmany",{"_index":370,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findunique",{"_index":371,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.update",{"_index":373,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.lesson.create",{"_index":454,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findmany(param",{"_index":452,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findunique",{"_index":453,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.update",{"_index":455,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.school.create",{"_index":526,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findmany",{"_index":524,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findunique",{"_index":525,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":527,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.student.create",{"_index":582,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findmany",{"_index":580,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findunique",{"_index":581,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.update",{"_index":583,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.removetokencookie(res",{"_index":244,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.schoolservice.createschool(body",{"_index":505,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.getschool(parseint(id",{"_index":510,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.updateschool(body",{"_index":507,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.settokencookie(res",{"_index":222,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.studentservice.createstudent(body",{"_index":545,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getall",{"_index":543,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getstudent(id",{"_index":550,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["this.studentservice.getstudent(parseint(id",{"_index":564,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.getstudentfromemail(email.tolowercase",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.studentservice.updatestudent(id",{"_index":547,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.validateuserpassword(password",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":127,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["token",{"_index":202,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["tokenadmin",{"_index":391,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["tokenstudent",{"_index":407,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":696,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transformer",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["try",{"_index":215,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["tsconfig.json",{"_index":671,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":702,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":716,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":232,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"index.html":{}}}],["unauthorizedexception",{"_index":208,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["unit",{"_index":673,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":109,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["unlicensed",{"_index":715,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":234,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["updateadmin",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updateadmin(@body",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["updateadmin(admin",{"_index":116,"title":{},"body":{"injectables/AdminService.html":{}}}],["updateadmin(body",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{}}}],["updategrade",{"_index":327,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["updategrade(@body",{"_index":354,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(body",{"_index":336,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(grade",{"_index":367,"title":{},"body":{"injectables/GradeService.html":{}}}],["updatelesson",{"_index":415,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{}}}],["updatelesson(@body",{"_index":432,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["updatelesson(body",{"_index":422,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["updatelesson(id",{"_index":449,"title":{},"body":{"injectables/LessonService.html":{}}}],["updateschool",{"_index":491,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateschool(@body",{"_index":506,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(body",{"_index":498,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(school",{"_index":522,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updatestudent",{"_index":533,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["updatestudent(@body",{"_index":546,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(body",{"_index":540,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(id",{"_index":577,"title":{},"body":{"injectables/StudentService.html":{}}}],["url",{"_index":484,"title":{},"body":{"injectables/PrismaService.html":{}}}],["useguards",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["useguards(authguard(['jwtadminsecret",{"_index":344,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(jwtadminguard",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get(':adminid",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(jwtadminguard)@get(':lessonid",{"_index":419,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["useguards(jwtadminguard)@get(':schoolid",{"_index":496,"title":{},"body":{"controllers/SchoolController.html":{}}}],["useguards(jwtadminguard)@get(':studentid",{"_index":537,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get('user",{"_index":205,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@post",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@post('logout",{"_index":196,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@put",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtstudentguard",{"_index":314,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get",{"_index":559,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get(':lessonid",{"_index":461,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["useguards(jwtstudentguard)@get(':studentid",{"_index":557,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get('user",{"_index":307,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@post",{"_index":459,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@post('logout",{"_index":303,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@put",{"_index":561,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(undefined)@get",{"_index":331,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@get(':gradeid",{"_index":334,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@post",{"_index":329,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@put",{"_index":337,"title":{},"body":{"controllers/GradeController.html":{}}}],["user",{"_index":186,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["user(req",{"_index":204,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["user.password",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":379,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validate(payload",{"_index":381,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validateuserpassword",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserpassword(password",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":722,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":235,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["version",{"_index":713,"title":{},"body":{"properties.html":{}}}],["void",{"_index":200,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["watch",{"_index":664,"title":{},"body":{"index.html":{}}}],["website",{"_index":700,"title":{},"body":{"index.html":{}}}],["world",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":447,"title":{},"body":{"injectables/LessonService.html":{}}}],["you'd",{"_index":689,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmins\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(body: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':adminId')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/admin')\nexport class AdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private adminService: AdminService,\n  ) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getAdmins(): Promise {\n    return this.adminService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createAdmin(@Body() body: CreateAdminDto): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n    };\n    return this.adminService.createAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateAdmin(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    return this.adminService.updateAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':adminId')\n  async getAdmin(@Param('adminId') id: number): Promise {\n    return this.adminService.getAdmin(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from 'src/services/admin.service';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  providers: [AdminService, AuthService, StudentService, JwtService],\n  controllers: [AdminController],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                getAdmin\n                            \n                            \n                                    Async\n                                getAdminFromEmail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/admin.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(admin: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(admin)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.admin.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getAdminFromEmail(email: string): Promise {\n    return this.prisma.admin.findUnique({ where: { email } });\n  }\n\n  async getAdmin(id: number): Promise> {\n    return this.prisma.admin.findUnique({ where: { id } });\n  }\n\n  async createAdmin(admin: CreateAdminDto) {\n    return this.prisma.admin.create({ data: admin });\n  }\n\n  async updateAdmin(admin) {\n    return this.prisma.admin.update({\n      data: admin,\n      where: {\n        id: admin.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthAdminModule\n                        \n                        \n                            AuthStudentModule\n                        \n                        \n                            GradeModule\n                        \n                        \n                            LessonAdminModule\n                        \n                        \n                            LessonStudentModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            StudentAdminModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\n// import { PrismaModule } from './prisma/prisma.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AdminModule } from './admin/admin/admin.module';\nimport { AuthAdminModule } from './admin/auth-admin/auth-admin.module';\nimport { SchoolModule } from './admin/school/school.module';\nimport { GradeModule } from './admin/grade/grade.module';\nimport { StudentAdminModule } from './admin/student-admin/student-admin.module';\nimport { LessonAdminModule } from './admin/lesson/lesson-admin.module';\nimport { LessonStudentModule } from './student/lesson/lesson-student.module';\nimport { StudentModule } from './student/student/student.module';\nimport { AuthStudentModule } from './student/auth/auth-student.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PrismaModule,\n    AdminModule,\n    AuthAdminModule,\n    AuthStudentModule,\n    SchoolModule,\n    GradeModule,\n    StudentAdminModule,\n    LessonAdminModule,\n    LessonStudentModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthAdminController.html":{"url":"controllers/AuthAdminController.html","title":"controller - AuthAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtAdminGuard } from './jwt.guard';\n\n@Controller('admin/auth')\nexport class AuthAdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const admin = await this.authService.login(\n        req.body.email,\n        req.body.password,\n        true,\n      );\n      console.log(admin);\n\n      const jwtToken = this.getJwtToken(admin);\n      this.setTokenCookie(res, jwtToken);\n\n      console.log(jwtToken);\n      // return true;\n      return { admin: admin, token: jwtToken };\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenAdmin', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenAdmin', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthAdminModule.html":{"url":"modules/AuthAdminModule.html","title":"module - AuthAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtAdminStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthAdminController } from './auth-admin.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtAdminStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtAdminSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtAdminStrategy],\n  controllers: [AuthAdminController],\n})\nexport class AuthAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentService: StudentService, adminService: AdminService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUserPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(password: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { AdminService } from './admin.service';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private studentService: StudentService,\n    private adminService: AdminService,\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async login(\n    email: string,\n    password: string,\n    isAdmin: boolean = false,\n  ): Promise {\n    const user = await (isAdmin\n      ? this.adminService.getAdminFromEmail(email.toLowerCase())\n      : this.studentService.getStudentFromEmail(email.toLowerCase()));\n    if (!user) {\n      throw new Error('User not found');\n    }\n    const isPasswordValid = await this.validateUserPassword(password, user);\n    if (!isPasswordValid) {\n      throw new Error('Wrong password');\n    }\n\n    return user;\n  }\n\n  async validateUserPassword(password: string, user: any): Promise {\n    if (user && bcrypt.compareSync(password, user.password)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthStudentController.html":{"url":"controllers/AuthStudentController.html","title":"controller - AuthStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/auth-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtStudentGuard } from './jwt.guard';\n\n@Controller('student/auth')\nexport class AuthStudentController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const student = await this.authService.login(\n        req.body.email,\n        req.body.password,\n      );\n      console.log(student);\n\n      const jwtToken = this.getJwtToken(student);\n      this.setTokenCookie(res, jwtToken);\n\n      console.log(jwtToken);\n      // return true;\n      return { student: student, token: jwtToken };\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenStudent', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenStudent', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthStudentModule.html":{"url":"modules/AuthStudentModule.html","title":"module - AuthStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/auth/auth-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStudentStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthStudentController } from './auth-student.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtStudentStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtStudentSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtStudentStrategy],\n  controllers: [AuthStudentController],\n})\nexport class AuthStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GradeController.html":{"url":"controllers/GradeController.html","title":"controller - GradeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GradeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/grade/grade.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                commun/grade\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get(':gradeId')\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { GradeService } from 'src/services/grade.service';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('commun/grade')\nexport class GradeController {\n  constructor(private gradeService: GradeService) {}\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get()\n  async getAll(): Promise {\n    return this.gradeService.getAll();\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get(':gradeId')\n  async getGrade(@Param('gradeId') id: string): Promise {\n    return this.gradeService.getGrade(parseInt(id));\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Post()\n  async createGrade(@Body() body: any): Promise {\n    body = {\n      ...body,\n      level: parseInt(body.level),\n    };\n    return this.gradeService.createGrade(body);\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Put()\n  async updateGrade(@Body() body): Promise {\n    return this.gradeService.updateGrade(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GradeModule.html":{"url":"modules/GradeModule.html","title":"module - GradeModule","body":"\n                   \n\n\n\n\n    Modules\n    GradeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\n\nGradeService\n\nGradeService\n\n\n\nGradeModule\n\nGradeModule\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/grade/grade.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GradeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GradeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GradeController } from './grade.controller';\nimport { GradeService } from 'src/services/grade.service';\n\n@Module({\n  providers: [GradeService],\n  controllers: [GradeController],\n})\nexport class GradeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GradeService.html":{"url":"injectables/GradeService.html","title":"injectable - GradeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GradeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/grade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGrade\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getGrade\n                            \n                            \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/grade.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(grade: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(grade)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class GradeService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const grades = await this.prisma.grade.findMany();\n    if (!grades) {\n      throw new NotFoundException();\n    }\n    return grades;\n  }\n\n  async getGrade(id: number): Promise> {\n    return this.prisma.grade.findUnique({ where: { id } });\n  }\n\n  async createGrade(grade: any) {\n    return this.prisma.grade.create({ data: grade });\n  }\n\n  async updateGrade(grade) {\n    return this.prisma.grade.update({\n      data: grade,\n      where: {\n        id: grade.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminGuard.html":{"url":"injectables/JwtAdminGuard.html","title":"injectable - JwtAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAdminGuard extends AuthGuard('jwtAdminSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminStrategy.html":{"url":"injectables/JwtAdminStrategy.html","title":"injectable - JwtAdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth-admin/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n};\n\n@Injectable()\nexport class JwtAdminStrategy extends PassportStrategy(\n  Strategy,\n  'jwtAdminSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtAdminSecret'),\n    });\n  }\n\n  async validate(payload) {\n    console.log(payload);\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentGuard.html":{"url":"injectables/JwtStudentGuard.html","title":"injectable - JwtStudentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtStudentGuard extends AuthGuard('jwtStudentSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentStrategy.html":{"url":"injectables/JwtStudentStrategy.html","title":"injectable - JwtStudentStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/student/auth/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n};\n\n@Injectable()\nexport class JwtStudentStrategy extends PassportStrategy(\n  Strategy,\n  'jwtStudentSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtStudentSecret'),\n    });\n  }\n\n  async validate(payload) {\n    console.log(payload);\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonAdminController.html":{"url":"controllers/LessonAdminController.html","title":"controller - LessonAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  UseGuards,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/lesson')\nexport class LessonAdminController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.lessonService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateLesson(@Body() body): Promise {\n    const id = body.id;\n    delete body.id;\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.updateLesson(id, body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonAdminModule.html":{"url":"modules/LessonAdminModule.html","title":"module - LessonAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonAdminController } from './lesson-admin.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonAdminController],\n  providers: [LessonService],\n})\nexport class LessonAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonService.html":{"url":"injectables/LessonService.html","title":"injectable - LessonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/lesson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLesson\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getLesson\n                            \n                            \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/lesson.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(lesson: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lesson\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(param?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(id, lesson)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lesson\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class LessonService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll(param?: any) {\n    const lessons = await this.prisma.lesson.findMany(param);\n    if (!lessons) {\n      throw new NotFoundException();\n    }\n    return lessons;\n  }\n\n  async getLesson(id: number): Promise> {\n    return this.prisma.lesson.findUnique({ where: { id } });\n  }\n\n  async createLesson(lesson: any) {\n    return this.prisma.lesson.create({ data: lesson });\n  }\n\n  async updateLesson(id, lesson) {\n    return this.prisma.lesson.update({\n      data: lesson,\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonStudentController.html":{"url":"controllers/LessonStudentController.html","title":"controller - LessonStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/lesson/lesson-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/lesson')\nexport class LessonStudentController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async getStudents(@Body() body: any): Promise {\n    return this.lessonService.getAll(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonStudentModule.html":{"url":"modules/LessonStudentModule.html","title":"module - LessonStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonStudentModule\n\n\n\ncluster_LessonStudentModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/lesson/lesson-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonStudentController } from './lesson-student.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonStudentController],\n  providers: [LessonService],\n})\nexport class LessonStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(body: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':schoolId')\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { SchoolService } from 'src/services/school.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/school')\nexport class SchoolController {\n  constructor(private schoolService: SchoolService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createSchool(@Body() body: CreateSchoolDto): Promise {\n    return this.schoolService.createSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateSchool(@Body() body): Promise {\n    return this.schoolService.updateSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':schoolId')\n  async getSchool(@Param('schoolId') id: string): Promise {\n    return this.schoolService.getSchool(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolService\n\nSchoolService\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolController } from './school.controller';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { SchoolService } from 'src/services/school.service';\n\n@Module({\n  providers: [SchoolService],\n  controllers: [SchoolController],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSchool\n                            \n                            \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(school: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(school)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.school.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getSchool(id: number): Promise> {\n    return this.prisma.school.findUnique({ where: { id: id } });\n  }\n\n  async createSchool(school: CreateSchoolDto) {\n    return this.prisma.school.create({ data: school });\n  }\n\n  async updateSchool(school) {\n    return this.prisma.school.update({\n      data: school,\n      where: {\n        id: school.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentAdminController.html":{"url":"controllers/StudentAdminController.html","title":"controller - StudentAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/student')\nexport class StudentAdminController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    const id = body.id;\n    delete body.id;\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.updateStudent(id, body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: number): Promise {\n    return this.studentService.getStudent(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentAdminModule.html":{"url":"modules/StudentAdminModule.html","title":"module - StudentAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentAdminModule\n\n\n\ncluster_StudentAdminModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentAdminController } from './student-admin.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentAdminController],\n  providers: [StudentService],\n})\nexport class StudentAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/student')\nexport class StudentController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    const id = body.id;\n    delete body.id;\n    return this.studentService.updateStudent(id, body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: string): Promise {\n    return this.studentService.getStudent(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentController],\n  providers: [StudentService],\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStudent\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getStudent\n                            \n                            \n                                    Async\n                                getStudentFromEmail\n                            \n                            \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/student.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(student: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    student\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudentFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudentFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(id, student)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    student\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class StudentService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const students = await this.prisma.student.findMany();\n    if (!students) {\n      throw new NotFoundException();\n    }\n    return students;\n  }\n\n  async getStudentFromEmail(email: string): Promise {\n    return this.prisma.student.findUnique({ where: { email } });\n  }\n\n  async getStudent(id: number): Promise {\n    return this.prisma.student.findUnique({ where: { id } });\n  }\n\n  async createStudent(student: any) {\n    return this.prisma.student.create({ data: student });\n  }\n\n  async updateStudent(id, student) {\n    return this.prisma.student.update({\n      data: student,\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/auth-admin.controller.ts\n            \n            controller\n            AuthAdminController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.guard.ts\n            \n            injectable\n            JwtAdminGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            injectable\n            JwtAdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/grade/grade.controller.ts\n            \n            controller\n            GradeController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/lesson/lesson-admin.controller.ts\n            \n            controller\n            LessonAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/student-admin/student-admin.controller.ts\n            \n            controller\n            StudentAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/grade.service.ts\n            \n            injectable\n            GradeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/lesson.service.ts\n            \n            injectable\n            LessonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/auth-student.controller.ts\n            \n            controller\n            AuthStudentController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.guard.ts\n            \n            injectable\n            JwtStudentGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStudentStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/lesson/lesson-student.controller.ts\n            \n            controller\n            LessonStudentController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/student/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.21\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @prisma/client : ^4.12.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            config : ^3.3.9\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.1.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleAdmin   (src/.../admin.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleAdmin\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                 SECRETARY\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                 ASSISTANT\n                            \n                        \n                        \n                            \n                                 TRAINER\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                 DIRECTOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodGet documentation\n$ npx @compodoc/compodoc -p tsconfig.json -sTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GradeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nGradeService\n\nGradeService\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\nLessonService\n\nLessonService\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateAdminDto   (src/.../admin.dto.ts)\n                        \n                        \n                            CreateSchoolDto   (src/.../school.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateAdminDto\n                \n            \n            \n                \n                        Prisma.AdminCreateInput\n\n                \n            \n        \n    \n    src/dto/school.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateSchoolDto\n                \n            \n            \n                \n                        Prisma.SchoolCreateInput\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth-admin/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n}\n                    \n                \n\n\n        \n    \n\n    src/student/auth/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

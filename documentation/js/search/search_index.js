var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AdminController.html",[0,0.739,1,2.353]],["body/controllers/AdminController.html",[0,0.556,1,2.618,2,0.556,3,0.212,4,0.189,5,0.189,6,2.228,7,1.191,8,2.625,9,0.455,10,0.934,11,1.76,12,3.293,13,3.293,14,5.098,15,3.293,16,2.625,17,3.44,18,2.162,19,0.024,20,1.771,21,1.152,22,2.625,23,1.183,24,1.183,25,0.995,26,1.183,27,3.234,28,1.228,29,1.868,30,2.228,31,2.094,32,2.625,33,2.625,34,1.445,35,1.966,36,2.625,37,2.625,38,1.771,39,2.625,40,0.475,41,1.277,42,1.76,43,2.032,44,1.191,45,0.189,46,1.833,47,1.615,48,2.84,49,1.277,50,2.094,51,1.771,52,1.966,53,1.615,54,1.486,55,1.277,56,1.486,57,1.771,58,2.625,59,0.212,60,0.189,61,0.978,62,3.114,63,3.138,64,1.152,65,2.625,66,2.625,67,2.618,68,2.907,69,2.625,70,2.625,71,2.907,72,1.771,73,2.625,74,2.625,75,2.625,76,2.625,77,0.013,78,0.013]],["title/modules/AdminModule.html",[79,0.647,80,2.146]],["body/modules/AdminModule.html",[1,3.779,2,1.056,3,0.303,4,0.27,5,0.27,19,0.024,40,0.515,45,0.27,46,2.537,47,2.308,48,3.068,49,1.824,50,2.898,51,2.53,59,0.303,60,0.27,77,0.017,78,0.017,79,1.039,80,4.166,81,1.232,82,1.232,83,1.397,84,1.397,85,1.232,86,2.086,87,1.397,88,3.183,89,3.183,90,2.234,91,1.857,92,1.397,93,1.397,94,3.749,95,2.53,96,1.824]],["title/injectables/AdminService.html",[50,1.582,97,0.563]],["body/injectables/AdminService.html",[3,0.217,4,0.193,5,0.193,9,0.466,10,0.951,11,1.815,12,3.35,13,3.35,15,3.35,17,3.479,19,0.024,21,1.298,23,1.408,24,1.408,25,1.322,26,1.408,28,1.323,29,1.592,30,3.35,31,2.122,34,1.742,40,0.416,45,0.193,50,1.791,52,2.013,59,0.217,60,0.193,61,1.001,64,1.242,77,0.013,78,0.013,97,0.637,98,0.94,99,2.28,100,3.947,101,2.918,102,1.654,103,2.186,104,2.687,105,2.879,106,3.947,107,2.687,108,4.376,109,2.45,110,2.687,111,3.947,112,1.984,113,2.687,114,2.957,115,2.687,116,3.947,117,2.687,118,2.429,119,1.521,120,1.654,121,1.001,122,1.139,123,0.94,124,3.971,125,1.307,126,2.687,127,1.307,128,1.219,129,3.947,130,2.687,131,2.429,132,2.687,133,2.687]],["title/controllers/AppController.html",[0,0.739,134,2.353]],["body/controllers/AppController.html",[0,1.177,2,0.939,3,0.358,4,0.319,5,0.319,9,0.768,10,1.337,18,1.879,19,0.024,21,1.002,28,1.067,40,0.448,45,0.319,59,0.358,60,0.319,64,1.002,77,0.019,78,0.019,112,2.355,121,1.65,122,1.879,134,3.747,135,3.761,136,5.395,137,4.431,138,3.432,139,3.761,140,4.431]],["title/modules/AppModule.html",[79,0.647,141,2.353]],["body/modules/AppModule.html",[2,0.81,3,0.208,4,0.185,5,0.185,19,0.024,40,0.533,45,0.185,59,0.208,60,0.185,77,0.013,78,0.013,79,0.846,80,3.479,81,0.845,82,0.845,83,0.958,84,0.958,85,0.845,86,1.698,87,0.958,91,1.423,92,0.958,93,0.958,134,3.077,138,3.199,139,2.183,141,4.676,142,2.183,143,2.183,144,2.183,145,3.479,146,3.479,147,3.479,148,3.479,149,3.479,150,3.602,151,3.479,152,3.479,153,3.479,154,2.572,155,2.863,156,2.572,157,2.572,158,1.927,159,3.822,160,2.572,161,2.579,162,4.56,163,2.572,164,2.572,165,2.579,166,2.572,167,2.572,168,3.822,169,2.572,170,2.572,171,2.572,172,2.572,173,1.736]],["title/injectables/AppService.html",[97,0.563,138,1.973]],["body/injectables/AppService.html",[3,0.375,4,0.335,5,0.335,9,0.806,10,1.378,19,0.024,21,1.052,28,1.121,40,0.375,45,0.335,59,0.375,60,0.335,64,1.052,77,0.019,78,0.019,97,0.924,98,1.627,112,2.427,136,5.489,138,3.239,174,3.949,175,4.652,176,4.652,177,4.652]],["title/controllers/AuthAdminController.html",[0,0.739,178,2.353]],["body/controllers/AuthAdminController.html",[0,0.404,2,0.404,3,0.154,4,0.137,5,0.137,7,0.865,9,0.33,10,0.731,11,1.534,18,1.603,19,0.024,21,1.133,23,1.285,24,1.285,25,1.285,26,1.285,28,1.207,29,1.548,40,0.38,42,0.865,44,0.865,45,0.137,46,1.501,47,1.173,48,2.326,49,0.928,55,0.928,59,0.154,60,0.137,61,0.71,62,2.048,63,1.867,64,0.974,77,0.01,78,0.01,108,3.209,112,2.125,123,1.507,125,1.477,127,0.928,128,0.865,161,3.682,173,3.547,178,2.048,179,2.975,180,1.286,181,2.576,182,3.209,183,3.209,184,2.576,185,2.576,186,3.755,187,2.576,188,1.906,189,1.618,190,5.341,191,3.235,192,2.576,193,1.906,194,5.227,195,1.618,196,1.906,197,1.906,198,2.576,199,1.906,200,2.576,201,2.576,202,4.254,203,1.906,204,1.618,205,1.906,206,1.906,207,2.652,208,2.576,209,1.173,210,1.618,211,1.906,212,1.618,213,1.618,214,3.209,215,1.618,216,1.618,217,1.618,218,1.618,219,3.209,220,1.906,221,2.576,222,1.618,223,1.618,224,1.906,225,1.618,226,1.618,227,1.618,228,1.618,229,1.618,230,1.618,231,1.618,232,1.618,233,1.618,234,1.618,235,1.618,236,1.618,237,1.618,238,2.576,239,1.618,240,1.618,241,1.618,242,1.618,243,1.618,244,3.034,245,2.576,246,2.576,247,1.867,248,2.576,249,2.576,250,2.576,251,2.576,252,1.618,253,1.618,254,1.618]],["title/modules/AuthAdminModule.html",[79,0.647,145,2.146]],["body/modules/AuthAdminModule.html",[2,0.969,3,0.266,4,0.238,5,0.238,19,0.024,40,0.519,45,0.238,46,2.443,49,1.607,50,2.79,51,2.228,56,1.869,59,0.266,60,0.238,77,0.015,78,0.015,79,0.974,81,1.085,82,1.085,83,1.23,84,1.23,85,1.085,86,1.954,87,1.23,90,2.151,91,1.703,92,1.23,93,1.23,95,2.228,96,1.607,145,4.143,155,2.474,161,2.228,178,3.54,179,1.869,255,2.803,256,2.803,257,3.785,258,2.474,259,2.803,260,2.803,261,2.588,262,2.803,263,2.803,264,2.803,265,2.803,266,2.803,267,2.803,268,3.881,269,2.803,270,2.803]],["title/injectables/AuthService.html",[46,1.384,97,0.563]],["body/injectables/AuthService.html",[3,0.231,4,0.206,5,0.206,9,0.497,10,0.997,11,1.603,19,0.024,21,1.098,23,1.245,24,1.245,25,1.245,26,1.245,28,0.997,29,1.642,40,0.429,45,0.206,46,1.643,50,2.747,53,1.765,54,1.623,59,0.231,60,0.206,61,1.541,62,2.793,64,1.098,67,3.805,77,0.014,78,0.014,90,2.054,97,0.668,98,1.003,112,2.678,114,3.1,123,1.447,125,2.014,127,2.014,128,1.877,173,1.935,186,4.645,247,2.988,271,2.434,272,4.856,273,4.138,274,2.867,275,2.867,276,2.867,277,5.317,278,4.856,279,2.867,280,2.148,281,2.434,282,4.138,283,2.867,284,2.867,285,2.867,286,2.867,287,2.867,288,2.867,289,2.867,290,4.138,291,2.867,292,2.867,293,2.867,294,2.867]],["title/controllers/AuthStudentController.html",[0,0.739,295,2.353]],["body/controllers/AuthStudentController.html",[0,0.413,2,0.413,3,0.157,4,0.14,5,0.14,7,0.885,9,0.338,10,0.744,11,1.545,18,1.627,19,0.024,21,1.144,23,1.298,24,1.298,25,1.298,26,1.298,28,1.219,29,1.563,40,0.384,42,0.885,44,0.885,45,0.14,46,1.524,47,1.2,48,2.361,49,0.949,59,0.157,60,0.14,61,0.726,62,2.085,64,0.867,77,0.01,78,0.01,112,2.146,123,1.526,125,1.503,127,0.949,128,0.885,173,3.211,181,2.622,182,3.257,183,3.257,184,2.622,185,2.622,186,3.792,187,2.622,189,1.655,190,5.366,191,3.264,192,2.622,194,5.254,195,1.655,198,2.622,200,2.622,201,2.622,202,4.296,204,1.655,207,2.686,208,2.622,209,1.2,210,1.655,212,1.655,213,1.655,214,3.257,215,1.655,216,1.655,217,1.655,218,1.655,219,3.257,221,2.622,222,1.655,223,1.655,225,1.655,226,1.655,227,1.655,228,1.655,229,1.655,230,1.655,231,1.655,232,1.655,233,1.655,234,1.655,235,1.655,236,1.655,237,1.655,238,2.622,239,1.655,240,1.655,241,1.655,242,1.655,243,1.655,245,2.622,246,2.622,247,1.901,248,2.622,249,2.622,250,2.622,251,2.622,252,1.655,253,1.655,254,1.655,295,2.085,296,3.973,297,1.461,298,1.95,299,1.95,300,1.95,301,1.95,302,1.95,303,1.95,304,1.95,305,1.95,306,1.95,307,1.104,308,1.95,309,2.875,310,1.95,311,2.315,312,3.089]],["title/modules/AuthStudentModule.html",[79,0.647,146,2.146]],["body/modules/AuthStudentModule.html",[2,0.971,3,0.267,4,0.238,5,0.238,19,0.024,40,0.519,45,0.238,46,2.445,49,1.612,50,2.793,51,2.236,56,1.875,59,0.267,60,0.238,77,0.016,78,0.016,79,0.975,81,1.088,82,1.088,83,1.234,84,1.234,85,1.088,86,1.957,87,1.234,90,2.153,91,1.707,92,1.234,93,1.234,96,1.612,146,4.145,155,2.482,259,2.812,260,2.812,261,2.594,262,2.812,263,2.812,264,2.812,266,2.812,267,2.812,268,3.89,269,2.812,270,2.812,295,3.546,296,2.482,313,2.812,314,2.812,315,3.789,316,2.812,317,2.482,318,2.812]],["title/controllers/GradeController.html",[0,0.739,319,2.353]],["body/controllers/GradeController.html",[0,0.625,2,0.625,3,0.238,4,0.212,5,0.212,7,1.338,9,0.511,10,1.017,11,1.8,18,2.284,19,0.024,21,1.218,23,1.265,24,1.265,25,1.083,26,1.265,27,3.198,28,1.297,29,1.929,34,1.573,40,0.398,41,1.435,42,1.916,43,2.212,44,1.338,45,0.212,59,0.238,60,0.212,64,1.218,77,0.014,78,0.014,101,3.049,112,2.092,121,1.099,319,2.85,320,2.504,321,2.95,322,3.585,323,3.585,324,3.585,325,2.95,326,2.95,327,2.95,328,2.95,329,2.95,330,2.504,331,2.95,332,2.95,333,2.95,334,2.95,335,2.95,336,2.793,337,2.504,338,2.21,339,1.67,340,2.95,341,5.387,342,4.572,343,2.95,344,2.95,345,2.95,346,2.95,347,2.95,348,2.95,349,2.95,350,2.95,351,2.95,352,2.95]],["title/modules/GradeModule.html",[79,0.647,147,2.146]],["body/modules/GradeModule.html",[2,1.146,3,0.343,4,0.306,5,0.306,19,0.024,40,0.48,45,0.306,59,0.343,60,0.306,77,0.018,78,0.018,79,1.104,81,1.395,82,1.395,83,1.582,84,1.582,85,1.395,86,2.215,87,1.582,91,2.013,92,1.582,93,1.582,147,4.066,319,4.013,336,3.74,337,3.605,353,3.605,354,3.605,355,4.247,356,4.247]],["title/injectables/GradeService.html",[97,0.563,336,1.973]],["body/injectables/GradeService.html",[3,0.235,4,0.209,5,0.209,9,0.504,10,1.007,11,1.796,17,1.962,19,0.024,21,1.281,23,1.372,24,1.372,25,1.255,26,1.372,28,1.289,29,1.291,31,2.221,34,1.823,40,0.457,45,0.209,52,2.179,53,1.79,54,1.646,59,0.235,60,0.209,61,1.083,64,1.21,77,0.014,78,0.014,97,0.675,98,1.017,101,3.029,102,1.79,103,2.269,105,3.012,109,2.563,118,2.573,119,1.646,120,1.79,121,1.083,122,1.233,123,1.017,125,1.415,127,1.415,128,1.319,131,2.573,322,3.548,323,3.548,324,3.548,330,3.548,336,2.366,357,2.468,358,2.908,359,4.181,360,2.908,361,3.294,362,2.908,363,2.908,364,4.181,365,2.908,366,4.894,367,2.908,368,2.908,369,2.908,370,2.908,371,2.908]],["title/injectables/JwtAdminGuard.html",[55,1.696,97,0.563]],["body/injectables/JwtAdminGuard.html",[3,0.395,4,0.353,5,0.353,19,0.023,40,0.476,45,0.353,55,2.873,59,0.395,60,0.353,77,0.02,78,0.02,97,0.953,98,1.713,179,2.772,338,3.669,339,2.772,372,4.157,373,3.014,374,4.897]],["title/injectables/JwtAdminStrategy.html",[97,0.563,257,2.146]],["body/injectables/JwtAdminStrategy.html",[3,0.279,4,0.249,5,0.249,9,0.599,10,1.137,11,1.466,19,0.024,21,1.067,23,0.887,24,0.887,26,0.887,28,0.833,40,0.488,45,0.249,59,0.279,60,0.249,61,2.002,64,1.215,77,0.016,78,0.016,97,0.762,98,1.209,109,1.811,123,1.209,179,3.042,191,2.905,207,2.905,209,2.128,247,2.128,257,2.905,261,2.672,265,2.935,339,1.957,373,2.128,375,2.591,376,4.007,377,3.458,378,4.007,379,3.458,380,4.562,381,2.935,382,4.007,383,2.591,384,2.591,385,4.007,386,2.334,387,2.334,388,4.562,389,3.537,390,2.591,391,2.935,392,3.458,393,2.591,394,2.935,395,2.935,396,2.935,397,2.935]],["title/injectables/JwtStudentGuard.html",[97,0.563,307,1.973]],["body/injectables/JwtStudentGuard.html",[3,0.397,4,0.354,5,0.354,19,0.023,40,0.478,45,0.354,59,0.397,60,0.354,77,0.02,78,0.02,97,0.956,98,1.721,307,3.352,338,3.687,339,2.785,373,3.029,398,4.177,399,4.921]],["title/injectables/JwtStudentStrategy.html",[97,0.563,315,2.146]],["body/injectables/JwtStudentStrategy.html",[3,0.282,4,0.251,5,0.251,9,0.605,10,1.145,11,1.474,19,0.024,21,1.074,23,0.896,24,0.896,26,0.896,28,0.841,40,0.489,45,0.251,59,0.282,60,0.251,61,2.012,64,1.221,77,0.016,78,0.016,97,0.767,98,1.222,109,1.829,123,1.222,191,2.925,207,2.925,209,2.15,247,2.15,261,2.69,315,2.925,318,2.965,339,1.977,342,2.965,373,2.15,376,4.034,378,4.034,380,4.586,381,2.965,382,4.034,383,2.617,384,2.617,385,4.034,386,2.358,387,2.358,389,3.561,390,2.617,393,2.617,394,2.965,395,2.965,396,2.965,397,2.965,400,2.617,401,3.493,402,3.493,403,4.586,404,2.965]],["title/controllers/LessonAdminController.html",[0,0.739,405,2.353]],["body/controllers/LessonAdminController.html",[0,0.577,2,0.577,3,0.22,4,0.196,5,0.196,7,1.235,9,0.472,10,0.96,11,1.773,18,2.2,19,0.024,20,1.837,21,1.173,23,1.209,24,1.209,25,1.022,26,1.209,27,3.318,28,1.25,29,1.887,31,2.139,34,2.057,35,2.04,38,1.837,40,0.38,41,1.325,42,1.808,43,2.087,44,1.235,45,0.196,55,1.325,56,1.541,57,1.837,59,0.22,60,0.196,63,3.193,64,1.173,72,1.837,77,0.013,78,0.013,121,1.014,122,1.154,123,0.952,180,1.837,361,2.453,405,2.689,406,4.137,407,2.722,408,2.986,409,2.986,410,3.502,411,3.383,412,2.311,413,2.722,414,2.04,415,2.722,416,2.722,417,2.722,418,2.722,419,2.722,420,2.294,421,1.837,422,2.722,423,2.722,424,2.311,425,2.689,426,2.689,427,2.311,428,2.722,429,2.986,430,2.722,431,2.311,432,2.311,433,2.311]],["title/modules/LessonAdminModule.html",[79,0.647,148,2.146]],["body/modules/LessonAdminModule.html",[2,1.14,3,0.34,4,0.303,5,0.303,19,0.024,40,0.478,45,0.303,59,0.34,60,0.303,77,0.018,78,0.018,79,1.1,81,1.384,82,1.384,83,1.569,84,1.569,85,1.384,86,2.206,87,1.569,91,2.003,92,1.569,93,1.569,95,2.843,148,4.058,258,3.156,405,3.997,406,3.156,420,3.208,421,2.843,434,3.575,435,3.575,436,3.156]],["title/injectables/LessonService.html",[97,0.563,420,1.696]],["body/injectables/LessonService.html",[3,0.234,4,0.209,5,0.209,9,0.503,10,1.005,11,1.795,19,0.024,21,1.28,23,1.452,24,1.452,25,1.37,26,1.452,28,1.287,29,1.288,31,2.217,34,2.109,40,0.394,41,1.411,45,0.209,59,0.234,60,0.209,61,1.08,64,1.208,77,0.014,78,0.014,97,0.674,98,1.014,101,2.361,102,1.785,103,2.266,105,3.007,109,2.559,118,2.568,119,1.641,120,1.785,121,1.08,122,1.23,123,1.014,125,1.411,127,1.411,128,1.316,131,2.568,408,3.126,409,3.126,411,3.541,414,3.126,420,2.03,436,4.418,437,2.461,438,2.9,439,4.172,440,2.9,441,4.172,442,2.9,443,2.9,444,2.9,445,4.172,446,2.9,447,4.887,448,2.9,449,2.9,450,2.9,451,2.9]],["title/controllers/LessonStudentController.html",[0,0.739,452,2.353]],["body/controllers/LessonStudentController.html",[0,0.65,2,0.65,3,0.247,4,0.221,5,0.221,7,1.39,9,0.531,10,1.045,11,1.751,18,2.137,19,0.024,21,1.139,23,1.292,24,1.292,25,1.292,26,1.292,27,3.234,28,1.214,29,1.855,31,2.286,34,1.877,40,0.407,41,1.491,42,2.286,43,1.605,44,1.39,45,0.221,59,0.247,60,0.221,64,1.139,77,0.015,78,0.015,121,1.141,122,1.3,297,2.296,307,1.735,311,3.775,361,1.886,408,3.252,409,3.252,410,2.929,412,2.601,414,2.296,420,2.452,421,2.068,424,2.601,425,2.068,426,2.068,427,2.601,431,2.601,432,2.601,433,2.601,452,2.929,453,4.106,454,3.065,455,3.684,456,3.065,457,3.065,458,3.065,459,3.065,460,3.065,461,2.601,462,3.065,463,3.065,464,3.065]],["title/modules/LessonStudentModule.html",[79,0.647,149,2.146]],["body/modules/LessonStudentModule.html",[2,1.14,3,0.34,4,0.303,5,0.303,19,0.024,40,0.478,45,0.303,59,0.34,60,0.303,77,0.018,78,0.018,79,1.1,81,1.384,82,1.384,83,1.569,84,1.569,85,1.384,86,2.206,87,1.569,91,2.003,92,1.569,93,1.569,149,4.058,316,3.575,317,3.156,420,3.208,421,2.843,436,3.156,452,3.997,453,3.156,465,4.212,466,4.212]],["title/modules/PrismaModule.html",[79,0.647,150,2.146]],["body/modules/PrismaModule.html",[3,0.337,4,0.301,5,0.301,19,0.023,40,0.432,45,0.301,59,0.337,60,0.301,77,0.018,78,0.018,79,1.095,81,1.373,82,1.373,83,1.556,84,1.556,85,1.373,86,2.198,87,2.198,91,1.992,92,1.556,93,1.556,103,2.96,150,4.117,467,3.546,468,3.546,469,3.546,470,4.178,471,5.349,472,4.178]],["title/injectables/PrismaService.html",[97,0.563,103,1.478]],["body/injectables/PrismaService.html",[3,0.341,4,0.304,5,0.304,19,0.024,21,0.956,23,1.085,24,1.085,25,1.085,26,1.085,40,0.479,45,0.304,59,0.341,60,0.304,61,1.575,77,0.018,78,0.018,97,0.87,98,1.479,103,2.286,119,2.394,158,3.169,261,2.394,373,3.318,393,3.169,473,3.59,474,5.935,475,5.391,476,6.25,477,4.23,478,4.23,479,4.23,480,4.23,481,4.23]],["title/controllers/SchoolController.html",[0,0.739,482,2.353]],["body/controllers/SchoolController.html",[0,0.67,2,0.67,3,0.255,4,0.227,5,0.227,7,1.433,9,0.547,10,1.068,11,1.763,18,2.173,19,0.024,20,2.132,21,1.158,23,1.314,24,1.314,25,1.137,26,1.314,27,3.064,28,1.234,29,1.873,34,1.652,38,2.132,40,0.448,41,1.537,42,2.012,43,2.322,44,1.433,45,0.227,55,1.537,56,1.788,57,2.132,59,0.255,60,0.227,63,3.153,64,1.158,77,0.015,78,0.015,112,2.173,121,1.177,482,2.992,483,2.682,484,3.159,485,3.764,486,3.764,487,3.764,488,3.159,489,4.162,490,3.159,491,2.682,492,3.159,493,3.159,494,3.159,495,3.159,496,2.9,497,2.682,498,2.682,499,3.159,500,3.159,501,3.159,502,3.159,503,3.159,504,3.159,505,3.159,506,3.159]],["title/modules/SchoolModule.html",[79,0.647,151,2.146]],["body/modules/SchoolModule.html",[2,1.102,3,0.323,4,0.288,5,0.288,19,0.024,40,0.525,45,0.288,46,1.588,47,2.461,48,2.461,49,1.946,59,0.323,60,0.288,77,0.018,78,0.018,79,1.073,81,1.314,82,1.314,83,1.489,84,1.489,85,1.314,86,2.152,87,1.489,90,1.398,91,1.937,92,1.489,93,1.489,96,1.946,151,4.002,482,3.9,496,3.68,497,3.394,507,3.394,508,3.394,509,3.998,510,3.998]],["title/injectables/SchoolService.html",[97,0.563,496,1.973]],["body/injectables/SchoolService.html",[3,0.235,4,0.209,5,0.209,9,0.504,10,1.007,11,1.796,19,0.024,21,1.281,23,1.372,24,1.372,25,1.255,26,1.372,28,1.289,29,1.291,31,2.221,34,1.993,40,0.432,45,0.209,59,0.235,60,0.209,61,1.083,64,1.21,77,0.014,78,0.014,97,0.675,98,1.017,101,3.029,102,1.79,103,2.269,105,3.012,109,2.563,118,2.573,119,1.646,120,1.79,121,1.083,122,1.233,123,1.017,124,4.154,125,1.415,127,1.415,128,1.319,131,2.573,485,3.548,486,3.548,487,3.548,489,4.009,491,3.548,496,2.366,498,2.468,511,2.468,512,2.908,513,4.181,514,2.908,515,5.351,516,2.908,517,2.908,518,4.181,519,2.908,520,2.908,521,2.908,522,2.908,523,2.908,524,2.908]],["title/controllers/StudentAdminController.html",[0,0.739,525,2.353]],["body/controllers/StudentAdminController.html",[0,0.538,2,0.538,3,0.205,4,0.183,5,0.183,7,1.152,9,0.44,10,0.912,11,1.748,18,2.128,19,0.024,20,1.714,21,1.134,23,1.161,24,1.161,25,0.971,26,1.161,27,3.354,28,1.208,29,1.85,31,2.054,34,1.999,35,1.903,38,1.714,40,0.405,41,1.236,42,1.718,43,1.983,44,1.152,45,0.183,53,1.563,54,1.438,55,1.236,56,1.438,57,1.714,59,0.205,60,0.183,63,3.088,64,1.134,67,2.555,68,2.837,71,2.837,72,2.555,77,0.013,78,0.013,90,1.583,96,1.236,121,0.946,122,1.077,123,0.888,165,3.797,180,1.714,361,2.33,410,3.386,425,2.555,426,2.555,429,2.837,525,2.555,526,4.02,527,2.837,528,2.837,529,2.837,530,2.156,531,2.54,532,1.903,533,2.54,534,2.54,535,2.54,536,2.156,537,2.54,538,2.54,539,2.156,540,2.156,541,2.156,542,2.156,543,2.156,544,2.156,545,2.156,546,2.54]],["title/modules/StudentAdminModule.html",[79,0.647,152,2.146]],["body/modules/StudentAdminModule.html",[2,1.137,3,0.339,4,0.302,5,0.302,19,0.023,40,0.477,45,0.302,59,0.339,60,0.302,77,0.018,78,0.018,79,1.097,81,1.378,82,1.378,83,1.562,84,1.562,85,1.378,86,2.202,87,1.562,90,2.303,91,1.998,92,1.562,93,1.562,95,2.831,96,2.041,152,4.053,165,2.831,258,3.143,309,3.143,525,3.99,526,3.143,547,4.195,548,4.195]],["title/controllers/StudentController.html",[0,0.739,549,2.353]],["body/controllers/StudentController.html",[0,0.572,2,0.572,3,0.218,4,0.194,5,0.194,7,1.225,9,0.468,10,0.954,11,1.77,18,2.192,19,0.024,21,1.168,23,1.203,24,1.203,25,1.016,26,1.203,27,3.312,28,1.245,29,1.883,34,1.925,40,0.417,41,1.314,42,1.798,43,2.075,44,1.225,45,0.194,53,1.662,54,1.529,59,0.218,60,0.194,64,1.168,67,2.674,68,2.968,71,2.968,72,2.674,77,0.013,78,0.013,90,1.641,96,1.314,112,1.99,121,1.006,122,1.145,123,0.944,307,1.529,311,3.873,361,1.662,410,3.488,425,1.823,426,1.823,429,2.968,455,2.293,461,2.293,527,2.968,528,2.968,529,2.968,530,2.293,532,2.024,536,2.293,539,2.293,540,2.293,541,2.293,542,2.293,543,2.293,544,2.293,545,2.293,549,2.674,550,2.293,551,2.701,552,2.701,553,2.701,554,2.701,555,2.701,556,2.701,557,2.701,558,2.701,559,2.701,560,2.701]],["title/modules/StudentModule.html",[79,0.647,153,2.146]],["body/modules/StudentModule.html",[2,1.146,3,0.343,4,0.306,5,0.306,19,0.024,40,0.48,45,0.306,59,0.343,60,0.306,77,0.018,78,0.018,79,1.104,81,1.395,82,1.395,83,1.582,84,1.582,85,1.395,86,2.215,87,1.582,90,2.31,91,2.013,92,1.582,93,1.582,96,2.067,153,4.066,317,3.182,549,4.013,561,4.247,562,4.247,563,4.247]],["title/injectables/StudentService.html",[90,1.219,97,0.563]],["body/injectables/StudentService.html",[3,0.223,4,0.199,5,0.199,9,0.478,10,0.969,11,1.823,19,0.024,21,1.31,23,1.424,24,1.424,25,1.339,26,1.424,28,1.337,29,1.612,31,2.155,34,2.068,40,0.325,45,0.199,59,0.223,60,0.199,61,1.028,64,1.255,77,0.014,78,0.014,90,1.407,97,0.65,98,0.965,101,2.956,102,1.698,103,2.214,105,2.477,109,2.488,112,2.015,114,3.015,118,2.477,120,1.698,121,1.028,122,1.17,123,0.965,125,1.343,127,1.343,128,1.252,131,2.477,309,4.343,527,3.015,528,3.015,529,3.015,532,3.015,564,2.342,565,4.024,566,2.759,567,4.024,568,2.759,569,2.759,570,2.759,571,4.024,572,2.759,573,4.024,574,2.759,575,4.751,576,2.759,577,4.024,578,2.759,579,2.759]],["title/coverage.html",[580,3.556]],["body/coverage.html",[0,1.362,1,1.951,5,0.208,6,2.454,19,0.024,25,0.741,46,1.148,50,1.312,55,1.407,77,0.014,78,0.014,85,0.95,90,1.011,97,1.061,99,2.454,103,1.226,128,1.312,134,1.951,135,2.454,138,1.637,161,1.951,165,1.951,174,2.454,178,1.951,179,3.021,180,3.292,257,1.78,271,2.454,295,1.951,296,2.166,297,3.119,307,1.637,315,1.78,319,1.951,320,2.454,336,1.637,357,2.454,372,2.454,375,3.119,386,2.81,387,1.951,398,2.454,400,3.119,405,1.951,406,2.166,420,1.407,437,2.454,452,1.951,453,2.166,473,2.454,482,1.951,483,2.454,496,1.637,511,2.454,525,1.951,526,2.166,549,1.951,550,2.454,564,2.454,580,2.166,581,2.454,582,2.892,583,2.892,584,6.994,585,5.656,586,5.337,587,5.656,588,4.164,589,4.164,590,4.879,591,4.879,592,2.454,593,4.879,594,2.892,595,2.892]],["title/dependencies.html",[82,1.376,596,2.476]],["body/dependencies.html",[19,0.024,45,0.298,49,2.017,54,2.346,60,0.383,77,0.018,78,0.018,82,1.361,119,2.346,158,3.105,209,2.55,261,2.346,339,2.346,383,3.987,384,3.105,597,3.517,598,4.144,599,5.878,600,4.144,601,4.144,602,4.144,603,4.144,604,4.144,605,4.144,606,4.144,607,4.144,608,4.144,609,4.144,610,4.144,611,4.144,612,4.144,613,4.144,614,4.144,615,4.144,616,4.144,617,4.144,618,4.144,619,4.144,620,4.144,621,4.144,622,4.144,623,4.144,624,4.144]],["title/miscellaneous/enumerations.html",[625,1.419,626,3.556]],["body/miscellaneous/enumerations.html",[9,0.891,19,0.021,77,0.021,78,0.021,280,3.853,625,2.503,626,4.366,627,6.08,628,4.366,629,4.366,630,5.143,631,5.143,632,5.143,633,5.143,634,5.143,635,5.143]],["title/miscellaneous/functions.html",[625,1.419,636,3.556]],["body/miscellaneous/functions.html",[9,0.919,19,0.021,77,0.021,78,0.021,85,2.154,592,4.501,625,2.581,636,4.501,637,5.303]],["title/index.html",[9,0.505,638,2.917,639,2.917]],["body/index.html",[4,0.253,19,0.024,77,0.016,78,0.016,580,2.635,581,2.986,597,2.986,640,3.517,641,3.517,642,3.517,643,3.517,644,3.517,645,3.517,646,3.517,647,3.517,648,3.517,649,2.986,650,3.517,651,3.517,652,4.775,653,3.517,654,3.517,655,3.517,656,3.517,657,3.517,658,3.517,659,3.517,660,3.517,661,4.775,662,3.517,663,6.413,664,3.517,665,3.517,666,6.27,667,3.517,668,3.517,669,4.775,670,3.517,671,3.517,672,3.517,673,3.517,674,3.517,675,3.517,676,3.517,677,3.517,678,4.775,679,4.775,680,3.517,681,3.517,682,3.517,683,4.775,684,4.775,685,4.775,686,3.517,687,3.517,688,3.517,689,3.517,690,2.986,691,3.517,692,3.517,693,3.517,694,3.517,695,3.517,696,3.517,697,3.517,698,3.517,699,3.517,700,3.517,701,2.986,702,3.517,703,3.517,704,3.517,705,3.517,706,3.517,707,3.517,708,2.986]],["title/modules.html",[81,1.559]],["body/modules.html",[19,0.018,77,0.018,78,0.018,80,2.614,81,1.395,141,2.866,145,2.614,146,2.614,147,2.614,148,2.614,149,2.614,150,2.614,151,2.614,152,2.614,153,2.614,690,5.907,709,6.959,710,6.959,711,6.959]],["title/overview.html",[712,4.029]],["body/overview.html",[2,0.564,19,0.024,46,2.172,50,2.481,77,0.013,78,0.013,79,0.494,80,3.814,81,0.874,82,0.874,83,0.99,84,0.99,85,0.874,86,0.99,87,0.99,88,2.257,89,2.257,90,2.069,91,1.459,92,0.99,93,0.99,98,0.93,103,2.509,138,2.632,141,4.667,142,2.257,143,2.257,144,2.257,145,3.933,146,3.933,147,3.366,148,3.366,149,3.366,150,3.521,151,3.366,152,3.366,153,3.366,255,2.257,256,2.257,257,2.862,313,2.257,314,2.257,315,2.862,336,2.632,353,2.257,354,2.257,420,2.496,434,2.257,435,2.257,467,2.257,468,2.257,469,2.257,496,2.632,507,2.257,508,2.257,712,2.257,713,2.659,714,2.659,715,2.659]],["title/properties.html",[596,2.476,716,3.556]],["body/properties.html",[19,0.023,77,0.021,78,0.021,649,4.433,701,4.433,708,4.433,716,4.433,717,5.222,718,5.222,719,5.222]],["title/miscellaneous/typealiases.html",[625,1.419,720,4.19]],["body/miscellaneous/typealiases.html",[9,0.891,17,4.103,19,0.021,25,1.319,77,0.021,78,0.021,489,4.555,625,2.503,628,4.366,629,4.366,721,5.143,722,5.143,723,5.143,724,5.143,725,5.143]],["title/miscellaneous/variables.html",[625,1.419,726,3.556]],["body/miscellaneous/variables.html",[9,0.742,19,0.024,64,1.228,77,0.018,78,0.018,179,2.424,191,3.864,207,3.345,280,4.072,281,4.613,375,3.209,386,4.237,387,3.667,388,5.067,389,4.072,390,4.072,391,3.635,400,3.209,403,5.067,404,3.635,625,2.084,726,3.635,727,5.434]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":718,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":253,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["1.1.21",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":714,"title":{},"body":{"overview.html":{}}}],["10.0.3",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":713,"title":{},"body":{"overview.html":{}}}],["12",{"_index":715,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":269,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["3.3.9",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["4.12.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":268,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["7.2.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["accounting",{"_index":631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["admin",{"_index":108,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{}}}],["admin.controller",{"_index":95,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.controller.ts",{"_index":180,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["admin.controller.ts:19",{"_index":417,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:20",{"_index":535,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:23",{"_index":193,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:25",{"_index":413,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:26",{"_index":531,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:35",{"_index":419,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:37",{"_index":537,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:47",{"_index":416,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin.controller.ts:48",{"_index":206,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:57",{"_index":534,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["admin.controller.ts:62",{"_index":197,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:71",{"_index":188,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:75",{"_index":203,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.controller.ts:84",{"_index":199,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["admin.id",{"_index":133,"title":{},"body":{"injectables/AdminService.html":{}}}],["admin.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["admin.module.ts",{"_index":258,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/LessonAdminModule.html":{},"modules/StudentAdminModule.html":{}}}],["admin.service",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin/admin",{"_index":8,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin/admin/admin.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/auth",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["admin/grade/grade.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/jwt.guard",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["admin/jwt.guard.ts",{"_index":372,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"coverage.html":{}}}],["admin/jwt.strategy.ts",{"_index":375,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin/jwt.strategy.ts:19",{"_index":377,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/jwt.strategy.ts:28",{"_index":379,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["admin/lesson",{"_index":407,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["admin/lesson/lesson",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/school",{"_index":484,"title":{},"body":{"controllers/SchoolController.html":{}}}],["admin/school/school.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/student",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["admincontroller",{"_index":1,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":80,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["admins",{"_index":124,"title":{},"body":{"injectables/AdminService.html":{},"injectables/SchoolService.html":{}}}],["adminservice",{"_index":50,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["aliases",{"_index":721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":691,"title":{},"body":{"index.html":{}}}],["app",{"_index":661,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":134,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":648,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":138,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assistant",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["auth",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["auth/jwt.guard",{"_index":461,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["authadmincontroller",{"_index":178,"title":{"controllers/AuthAdminController.html":{}},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"coverage.html":{}}}],["authadminmodule",{"_index":145,"title":{"modules/AuthAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["authguard",{"_index":338,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtStudentGuard.html":{}}}],["authguard('jwtadminsecret",{"_index":374,"title":{},"body":{"injectables/JwtAdminGuard.html":{}}}],["authguard('jwtstudentsecret",{"_index":399,"title":{},"body":{"injectables/JwtStudentGuard.html":{}}}],["authheader",{"_index":213,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["author",{"_index":701,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":46,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"overview.html":{}}}],["authstudentcontroller",{"_index":295,"title":{"controllers/AuthStudentController.html":{}},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["authstudentmodule",{"_index":146,"title":{"modules/AuthStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["await",{"_index":125,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["backend",{"_index":656,"title":{},"body":{"index.html":{}}}],["backers",{"_index":692,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcrypt.comparesync(password",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hashsync(body.password",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["bcryptjs",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"dependencies.html":{}}}],["body",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["body.id",{"_index":429,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["body.password",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["boolean",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":711,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":709,"title":{},"body":{"modules.html":{}}}],["building",{"_index":643,"title":{},"body":{"index.html":{}}}],["catch",{"_index":222,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["class",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["cluster_adminmodule",{"_index":88,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":89,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authadminmodule",{"_index":255,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authadminmodule_providers",{"_index":256,"title":{},"body":{"modules/AuthAdminModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule",{"_index":313,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_authstudentmodule_providers",{"_index":314,"title":{},"body":{"modules/AuthStudentModule.html":{},"overview.html":{}}}],["cluster_grademodule",{"_index":353,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_grademodule_providers",{"_index":354,"title":{},"body":{"modules/GradeModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule",{"_index":434,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonadminmodule_providers",{"_index":435,"title":{},"body":{"modules/LessonAdminModule.html":{},"overview.html":{}}}],["cluster_lessonstudentmodule",{"_index":465,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_lessonstudentmodule_providers",{"_index":466,"title":{},"body":{"modules/LessonStudentModule.html":{}}}],["cluster_prismamodule",{"_index":467,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":469,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":468,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":507,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":508,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_studentadminmodule",{"_index":547,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentadminmodule_providers",{"_index":548,"title":{},"body":{"modules/StudentAdminModule.html":{}}}],["cluster_studentmodule",{"_index":561,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_providers",{"_index":562,"title":{},"body":{"modules/StudentModule.html":{}}}],["commun/grade",{"_index":321,"title":{},"body":{"controllers/GradeController.html":{}}}],["compodoc/compodoc",{"_index":597,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["config",{"_index":261,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["config.get('database_url",{"_index":481,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwtadminsecret",{"_index":265,"title":{},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{}}}],["config.get('jwtstudentsecret",{"_index":318,"title":{},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{}}}],["config.get('sessionlengthindays",{"_index":270,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["configmodule",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":476,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connect",{"_index":425,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["console.log(error",{"_index":224,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["const",{"_index":123,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(config",{"_index":475,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(prisma",{"_index":102,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["constructor(studentservice",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["controller('admin/admin",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('admin/auth",{"_index":211,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["controller('admin/lesson",{"_index":422,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["controller('admin/school",{"_index":499,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('admin/student",{"_index":538,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["controller('commun/grade",{"_index":340,"title":{},"body":{"controllers/GradeController.html":{}}}],["controller('student/auth",{"_index":308,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["controller('student/lesson",{"_index":462,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["controller('student/student",{"_index":559,"title":{},"body":{"controllers/StudentController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["cookie",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["cookieextractor",{"_index":386,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":580,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createadmin",{"_index":12,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["createadmin(@body",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin(admin",{"_index":106,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(body",{"_index":16,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmindto",{"_index":17,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"miscellaneous/typealiases.html":{}}}],["creategrade",{"_index":322,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["creategrade(@body",{"_index":347,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(body",{"_index":325,"title":{},"body":{"controllers/GradeController.html":{}}}],["creategrade(grade",{"_index":359,"title":{},"body":{"injectables/GradeService.html":{}}}],["createlesson",{"_index":408,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(@body",{"_index":424,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(body",{"_index":412,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["createlesson(lesson",{"_index":439,"title":{},"body":{"injectables/LessonService.html":{}}}],["createschool",{"_index":485,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@body",{"_index":500,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(body",{"_index":488,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(school",{"_index":513,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":489,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"miscellaneous/typealiases.html":{}}}],["createstudent",{"_index":527,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["createstudent(@body",{"_index":540,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(body",{"_index":530,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["createstudent(student",{"_index":567,"title":{},"body":{"injectables/StudentService.html":{}}}],["crypto",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":131,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["datasources",{"_index":478,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":479,"title":{},"body":{"injectables/PrismaService.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["default",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["default:4350",{"_index":659,"title":{},"body":{"index.html":{}}}],["default:8700",{"_index":657,"title":{},"body":{"index.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["delete",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":649,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":665,"title":{},"body":{"index.html":{}}}],["director",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disable",{"_index":227,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["documentation",{"_index":581,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":250,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["e2e",{"_index":680,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":644,"title":{},"body":{"index.html":{}}}],["email",{"_index":114,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthService.html":{},"injectables/StudentService.html":{}}}],["end",{"_index":650,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":626,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":223,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["error('user",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('wrong",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["eslint",{"_index":226,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["eslint/no",{"_index":231,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["exp",{"_index":234,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["expiresin",{"_index":267,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["export",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["express",{"_index":209,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":373,"title":{},"body":{"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":381,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["extractjwt.fromextractors([cookieextractor",{"_index":395,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["false",{"_index":247,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["found",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":642,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":658,"title":{},"body":{"index.html":{}}}],["function",{"_index":387,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":636,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':adminid",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{}}}],["get(':gradeid",{"_index":344,"title":{},"body":{"controllers/GradeController.html":{}}}],["get(':lessonid",{"_index":431,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["get(':schoolid",{"_index":504,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(':studentid",{"_index":544,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["get('user",{"_index":225,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getadmin",{"_index":13,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadmin(@param('adminid",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{}}}],["getadmin(id",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getadminfromemail",{"_index":100,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminfromemail(email",{"_index":111,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadmins",{"_index":14,"title":{},"body":{"controllers/AdminController.html":{}}}],["getall",{"_index":101,"title":{},"body":{"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["getall(param",{"_index":441,"title":{},"body":{"injectables/LessonService.html":{}}}],["getgrade",{"_index":323,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["getgrade(@param('gradeid",{"_index":345,"title":{},"body":{"controllers/GradeController.html":{}}}],["getgrade(id",{"_index":330,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["gethello",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getjwttoken",{"_index":181,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getjwttoken(user",{"_index":187,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["getlesson",{"_index":409,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(@param('lessonid",{"_index":432,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["getlesson(id",{"_index":414,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{}}}],["getschool",{"_index":486,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getschool(@param('schoolid",{"_index":505,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getschool(id",{"_index":491,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getstudent",{"_index":528,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudent(@param('studentid",{"_index":545,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudent(id",{"_index":532,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["getstudentfromemail",{"_index":565,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentfromemail(email",{"_index":571,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudents",{"_index":410,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["getstudents(@body",{"_index":463,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getstudents(body",{"_index":459,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["getting",{"_index":638,"title":{"index.html":{}},"body":{}}],["global",{"_index":471,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grade",{"_index":361,"title":{},"body":{"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["grade.controller",{"_index":356,"title":{},"body":{"modules/GradeModule.html":{}}}],["grade.id",{"_index":371,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradecontroller",{"_index":319,"title":{"controllers/GradeController.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"coverage.html":{}}}],["grademodule",{"_index":147,"title":{"modules/GradeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GradeModule.html":{},"modules.html":{},"overview.html":{}}}],["grades",{"_index":366,"title":{},"body":{"injectables/GradeService.html":{}}}],["gradeservice",{"_index":336,"title":{"injectables/GradeService.html":{}},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":687,"title":{},"body":{"index.html":{}}}],["headers('authorization",{"_index":212,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["hello",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":698,"title":{},"body":{"index.html":{}}}],["httponly",{"_index":245,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["https://nestjs.com",{"_index":705,"title":{},"body":{"index.html":{}}}],["iat",{"_index":235,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["id",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["identifier",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":396,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["imports",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["injectables",{"_index":98,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"overview.html":{}}}],["installation",{"_index":662,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":664,"title":{},"body":{"index.html":{}}}],["isadmin",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["isglobal",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ispasswordvalid",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":694,"title":{},"body":{"index.html":{}}}],["js",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":384,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":210,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["jwt.strategy",{"_index":262,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtadminguard",{"_index":55,"title":{"injectables/JwtAdminGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/JwtAdminGuard.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"coverage.html":{}}}],["jwtadminsecret",{"_index":392,"title":{},"body":{"injectables/JwtAdminStrategy.html":{}}}],["jwtadminstrategy",{"_index":257,"title":{"injectables/JwtAdminStrategy.html":{}},"body":{"modules/AuthAdminModule.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":394,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtmodule",{"_index":260,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtmodule.register",{"_index":263,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["jwtservice",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["jwtstudentguard",{"_index":307,"title":{"injectables/JwtStudentGuard.html":{}},"body":{"controllers/AuthStudentController.html":{},"injectables/JwtStudentGuard.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{},"coverage.html":{}}}],["jwtstudentsecret",{"_index":342,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtStudentStrategy.html":{}}}],["jwtstudentstrategy",{"_index":315,"title":{"injectables/JwtStudentStrategy.html":{}},"body":{"modules/AuthStudentModule.html":{},"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":219,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["kamil",{"_index":702,"title":{},"body":{"index.html":{}}}],["lax",{"_index":249,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["lesson",{"_index":436,"title":{},"body":{"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"modules/LessonStudentModule.html":{}}}],["lessonadmincontroller",{"_index":405,"title":{"controllers/LessonAdminController.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["lessonadminmodule",{"_index":148,"title":{"modules/LessonAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["lessons",{"_index":447,"title":{},"body":{"injectables/LessonService.html":{}}}],["lessonservice",{"_index":420,"title":{"injectables/LessonService.html":{}},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["lessonstudentcontroller",{"_index":452,"title":{"controllers/LessonStudentController.html":{}},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["lessonstudentmodule",{"_index":149,"title":{"modules/LessonStudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LessonStudentModule.html":{},"modules.html":{},"overview.html":{}}}],["level",{"_index":348,"title":{},"body":{"controllers/GradeController.html":{}}}],["license",{"_index":708,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":685,"title":{},"body":{"index.html":{}}}],["line",{"_index":229,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["localhost",{"_index":251,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["login",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithpassword",{"_index":182,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["loginwithpassword(res",{"_index":189,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout",{"_index":183,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["logout(req",{"_index":195,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["matching",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":252,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["metadata",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["miscellaneous",{"_index":625,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":684,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":660,"title":{},"body":{"index.html":{}}}],["mode",{"_index":669,"title":{},"body":{"index.html":{}}}],["module",{"_index":79,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":697,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":703,"title":{},"body":{"index.html":{}}}],["n4",{"_index":654,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["nest",{"_index":683,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":707,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":339,"title":{},"body":{"controllers/GradeController.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":128,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["newjwttoken",{"_index":238,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["next",{"_index":228,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["node.js",{"_index":641,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":118,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["npm",{"_index":663,"title":{},"body":{"index.html":{}}}],["npx",{"_index":673,"title":{},"body":{"index.html":{}}}],["null",{"_index":389,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"injectables/StudentService.html":{}}}],["open",{"_index":686,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["overview",{"_index":712,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":674,"title":{},"body":{"index.html":{}}}],["package",{"_index":596,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":41,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["parseint(body.grade",{"_index":426,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["parseint(body.level",{"_index":349,"title":{},"body":{"controllers/GradeController.html":{}}}],["parser",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":383,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":385,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["passthrough",{"_index":214,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["password",{"_index":67,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["path",{"_index":254,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["payload",{"_index":380,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["please",{"_index":695,"title":{},"body":{"index.html":{}}}],["post",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["post('login",{"_index":192,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["post('logout",{"_index":240,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["prisma",{"_index":105,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["prisma.admincreateinput",{"_index":723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.schoolcreateinput",{"_index":725,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.service",{"_index":472,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":119,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":120,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["prismaclient",{"_index":474,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":150,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":103,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["production",{"_index":671,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":640,"title":{},"body":{"index.html":{}}}],["project",{"_index":652,"title":{},"body":{"index.html":{}}}],["promise",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["properties",{"_index":716,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["put",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["read",{"_index":696,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":122,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["reflect",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":237,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["removetokencookie",{"_index":184,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["removetokencookie(res",{"_index":198,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req",{"_index":191,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.body.email",{"_index":217,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.body.password",{"_index":218,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["req.cookies",{"_index":390,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenadmin",{"_index":391,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.cookies['tokenstudent",{"_index":404,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["req.user",{"_index":236,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["request",{"_index":207,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":194,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["res.cookie('tokenadmin",{"_index":244,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["res.cookie('tokenstudent",{"_index":312,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["response",{"_index":190,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["results",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["roleadmin",{"_index":627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":666,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["samesite",{"_index":248,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["scalable",{"_index":645,"title":{},"body":{"index.html":{}}}],["school",{"_index":515,"title":{},"body":{"injectables/SchoolService.html":{}}}],["school.controller",{"_index":510,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.id",{"_index":524,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolcontroller",{"_index":482,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":151,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":496,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":264,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["secretary",{"_index":630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["secretorkey",{"_index":397,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["secure",{"_index":246,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["server",{"_index":646,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":259,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["services/grade.service",{"_index":337,"title":{},"body":{"controllers/GradeController.html":{},"modules/GradeModule.html":{}}}],["settokencookie",{"_index":185,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["settokencookie(res",{"_index":201,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["side",{"_index":647,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":266,"title":{},"body":{"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"controllers/GradeController.html":{},"modules/GradeModule.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentGuard.html":{},"injectables/JwtStudentStrategy.html":{},"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["sponsors",{"_index":689,"title":{},"body":{"index.html":{}}}],["src/.../admin.dto.ts",{"_index":628,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../jwt.strategy.ts",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../school.dto.ts",{"_index":722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin/admin/admin.controller.ts",{"_index":6,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin/admin.controller.ts:27",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:33",{"_index":22,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:43",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.controller.ts:57",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin/admin.module.ts",{"_index":94,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/auth",{"_index":179,"title":{},"body":{"controllers/AuthAdminController.html":{},"modules/AuthAdminModule.html":{},"injectables/JwtAdminGuard.html":{},"injectables/JwtAdminStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/grade/grade.controller.ts",{"_index":320,"title":{},"body":{"controllers/GradeController.html":{},"coverage.html":{}}}],["src/admin/grade/grade.controller.ts:19",{"_index":329,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:25",{"_index":332,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:31",{"_index":327,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.controller.ts:41",{"_index":335,"title":{},"body":{"controllers/GradeController.html":{}}}],["src/admin/grade/grade.module.ts",{"_index":355,"title":{},"body":{"modules/GradeModule.html":{}}}],["src/admin/lesson/lesson",{"_index":406,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts",{"_index":483,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/admin/school/school.controller.ts:20",{"_index":490,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:26",{"_index":495,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.controller.ts:32",{"_index":493,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/admin/school/school.module.ts",{"_index":509,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/admin/student",{"_index":526,"title":{},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/dto/admin.dto",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/GradeService.html":{}}}],["src/dto/admin.dto.ts",{"_index":629,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/dto/school.dto",{"_index":498,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["src/dto/school.dto.ts",{"_index":724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":470,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":473,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":477,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/services/admin.service",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{}}}],["src/services/admin.service.ts",{"_index":99,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/services/admin.service.ts:10",{"_index":115,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:18",{"_index":113,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:22",{"_index":110,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:26",{"_index":107,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:30",{"_index":117,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/admin.service.ts:7",{"_index":104,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/services/auth.service",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"modules/SchoolModule.html":{}}}],["src/services/auth.service.ts",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/services/auth.service.ts:13",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:32",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/auth.service.ts:7",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/services/grade.service.ts",{"_index":357,"title":{},"body":{"injectables/GradeService.html":{},"coverage.html":{}}}],["src/services/grade.service.ts:11",{"_index":362,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:19",{"_index":363,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:23",{"_index":360,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:27",{"_index":365,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/grade.service.ts:8",{"_index":358,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/services/lesson.service",{"_index":421,"title":{},"body":{"controllers/LessonAdminController.html":{},"modules/LessonAdminModule.html":{},"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{}}}],["src/services/lesson.service.ts",{"_index":437,"title":{},"body":{"injectables/LessonService.html":{},"coverage.html":{}}}],["src/services/lesson.service.ts:17",{"_index":444,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:21",{"_index":440,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:25",{"_index":446,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:6",{"_index":438,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/lesson.service.ts:9",{"_index":442,"title":{},"body":{"injectables/LessonService.html":{}}}],["src/services/school.service",{"_index":497,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["src/services/school.service.ts",{"_index":511,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/services/school.service.ts:10",{"_index":516,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:18",{"_index":517,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:22",{"_index":514,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:26",{"_index":519,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/school.service.ts:7",{"_index":512,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/services/student.service",{"_index":96,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{}}}],["src/services/student.service.ts",{"_index":564,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/services/student.service.ts:16",{"_index":572,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:20",{"_index":570,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:24",{"_index":568,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:28",{"_index":574,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:5",{"_index":566,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/services/student.service.ts:8",{"_index":569,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/student/auth/auth",{"_index":296,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/AuthStudentModule.html":{},"coverage.html":{}}}],["src/student/auth/jwt.guard.ts",{"_index":398,"title":{},"body":{"injectables/JwtStudentGuard.html":{},"coverage.html":{}}}],["src/student/auth/jwt.strategy.ts",{"_index":400,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/student/auth/jwt.strategy.ts:19",{"_index":401,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/auth/jwt.strategy.ts:28",{"_index":402,"title":{},"body":{"injectables/JwtStudentStrategy.html":{}}}],["src/student/lesson/lesson",{"_index":453,"title":{},"body":{"controllers/LessonStudentController.html":{},"modules/LessonStudentModule.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts",{"_index":550,"title":{},"body":{"controllers/StudentController.html":{},"coverage.html":{}}}],["src/student/student/student.controller.ts:20",{"_index":556,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:26",{"_index":552,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:37",{"_index":558,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.controller.ts:53",{"_index":554,"title":{},"body":{"controllers/StudentController.html":{}}}],["src/student/student/student.module.ts",{"_index":563,"title":{},"body":{"modules/StudentModule.html":{}}}],["start",{"_index":667,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":670,"title":{},"body":{"index.html":{}}}],["start:prodget",{"_index":672,"title":{},"body":{"index.html":{}}}],["started",{"_index":639,"title":{"index.html":{}},"body":{}}],["statements",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":699,"title":{},"body":{"index.html":{}}}],["stest",{"_index":676,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":382,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["string",{"_index":112,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/SchoolController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["student",{"_index":309,"title":{},"body":{"controllers/AuthStudentController.html":{},"modules/StudentAdminModule.html":{},"injectables/StudentService.html":{}}}],["student.controller",{"_index":317,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{},"modules/StudentModule.html":{}}}],["student.controller.ts",{"_index":297,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"coverage.html":{}}}],["student.controller.ts:19",{"_index":460,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:23",{"_index":300,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:25",{"_index":456,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:35",{"_index":458,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student.controller.ts:45",{"_index":306,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:59",{"_index":302,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:68",{"_index":299,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:72",{"_index":304,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.controller.ts:81",{"_index":303,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["student.module.ts",{"_index":316,"title":{},"body":{"modules/AuthStudentModule.html":{},"modules/LessonStudentModule.html":{}}}],["student.service",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["student/auth",{"_index":298,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["student/auth/auth",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["student/lesson",{"_index":454,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["student/lesson/lesson",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["student/student",{"_index":551,"title":{},"body":{"controllers/StudentController.html":{}}}],["student/student/student.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["studentadmincontroller",{"_index":525,"title":{"controllers/StudentAdminController.html":{}},"body":{"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"coverage.html":{}}}],["studentadminmodule",{"_index":152,"title":{"modules/StudentAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["studentcontroller",{"_index":549,"title":{"controllers/StudentController.html":{}},"body":{"controllers/StudentController.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["studentmodule",{"_index":153,"title":{"modules/StudentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["students",{"_index":575,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":90,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthAdminModule.html":{},"injectables/AuthService.html":{},"modules/AuthStudentModule.html":{},"modules/SchoolModule.html":{},"controllers/StudentAdminController.html":{},"modules/StudentAdminModule.html":{},"controllers/StudentController.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["super",{"_index":393,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":690,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":710,"title":{},"body":{"modules.html":{}}}],["table",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["teacher",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":679,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":682,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":681,"title":{},"body":{"index.html":{}}}],["tests",{"_index":678,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":688,"title":{},"body":{"index.html":{}}}],["this.adminservice.createadmin(body",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadmin(id",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminfromemail(email.tolowercase",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.adminservice.getall",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updateadmin(body",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login",{"_index":216,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.authservice.logout(req.user",{"_index":241,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.getjwttoken(admin",{"_index":220,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["this.getjwttoken(student",{"_index":310,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["this.getjwttoken(user",{"_index":239,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.gradeservice.creategrade(body",{"_index":350,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getall",{"_index":343,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.getgrade(parseint(id",{"_index":346,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.gradeservice.updategrade(body",{"_index":352,"title":{},"body":{"controllers/GradeController.html":{}}}],["this.jwtservice.sign(user",{"_index":243,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.lessonservice.createlesson(body",{"_index":427,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getall",{"_index":423,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["this.lessonservice.getall(body",{"_index":464,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["this.lessonservice.getlesson(id",{"_index":433,"title":{},"body":{"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{}}}],["this.lessonservice.updatelesson(id",{"_index":430,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["this.prisma.admin.create",{"_index":130,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findmany",{"_index":126,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.findunique",{"_index":129,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.admin.update",{"_index":132,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.prisma.grade.create",{"_index":369,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findmany",{"_index":367,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.findunique",{"_index":368,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.grade.update",{"_index":370,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.prisma.lesson.create",{"_index":450,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findmany(param",{"_index":448,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.findunique",{"_index":449,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.lesson.update",{"_index":451,"title":{},"body":{"injectables/LessonService.html":{}}}],["this.prisma.school.create",{"_index":522,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findmany",{"_index":520,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findunique",{"_index":521,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":523,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.student.create",{"_index":578,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findmany",{"_index":576,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.findunique",{"_index":577,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.prisma.student.update",{"_index":579,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.removetokencookie(res",{"_index":242,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.schoolservice.createschool(body",{"_index":501,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.getschool(parseint(id",{"_index":506,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.updateschool(body",{"_index":503,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.settokencookie(res",{"_index":221,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["this.studentservice.createstudent(body",{"_index":541,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getall",{"_index":539,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.studentservice.getstudent(id",{"_index":546,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["this.studentservice.getstudent(parseint(id",{"_index":560,"title":{},"body":{"controllers/StudentController.html":{}}}],["this.studentservice.getstudentfromemail(email.tolowercase",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.studentservice.updatestudent(id",{"_index":543,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["this.validateuserpassword(password",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":127,"title":{},"body":{"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"injectables/GradeService.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["token",{"_index":202,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["tokenadmin",{"_index":388,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"miscellaneous/variables.html":{}}}],["tokenstudent",{"_index":403,"title":{},"body":{"injectables/JwtStudentStrategy.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":700,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transformer",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["try",{"_index":215,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["tsconfig.json",{"_index":675,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":706,"title":{},"body":{"index.html":{}}}],["type",{"_index":25,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"injectables/GradeService.html":{},"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{},"controllers/LessonStudentController.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":720,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":230,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["unauthorizedexception",{"_index":208,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["unit",{"_index":677,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":109,"title":{},"body":{"injectables/AdminService.html":{},"injectables/GradeService.html":{},"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{},"injectables/LessonService.html":{},"injectables/SchoolService.html":{},"injectables/StudentService.html":{}}}],["unlicensed",{"_index":719,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":232,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["updateadmin",{"_index":15,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updateadmin(@body",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["updateadmin(admin",{"_index":116,"title":{},"body":{"injectables/AdminService.html":{}}}],["updateadmin(body",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{}}}],["updategrade",{"_index":324,"title":{},"body":{"controllers/GradeController.html":{},"injectables/GradeService.html":{}}}],["updategrade(@body",{"_index":351,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(body",{"_index":333,"title":{},"body":{"controllers/GradeController.html":{}}}],["updategrade(grade",{"_index":364,"title":{},"body":{"injectables/GradeService.html":{}}}],["updatelesson",{"_index":411,"title":{},"body":{"controllers/LessonAdminController.html":{},"injectables/LessonService.html":{}}}],["updatelesson(@body",{"_index":428,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["updatelesson(body",{"_index":418,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["updatelesson(id",{"_index":445,"title":{},"body":{"injectables/LessonService.html":{}}}],["updateschool",{"_index":487,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateschool(@body",{"_index":502,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(body",{"_index":494,"title":{},"body":{"controllers/SchoolController.html":{}}}],["updateschool(school",{"_index":518,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updatestudent",{"_index":529,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{},"injectables/StudentService.html":{}}}],["updatestudent(@body",{"_index":542,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(body",{"_index":536,"title":{},"body":{"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["updatestudent(id",{"_index":573,"title":{},"body":{"injectables/StudentService.html":{}}}],["url",{"_index":480,"title":{},"body":{"injectables/PrismaService.html":{}}}],["useguards",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{},"controllers/GradeController.html":{},"controllers/LessonAdminController.html":{},"controllers/LessonStudentController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{},"controllers/StudentController.html":{}}}],["useguards(authguard(['jwtadminsecret",{"_index":341,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(jwtadminguard",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthAdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get(':adminid",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{}}}],["useguards(jwtadminguard)@get(':lessonid",{"_index":415,"title":{},"body":{"controllers/LessonAdminController.html":{}}}],["useguards(jwtadminguard)@get(':schoolid",{"_index":492,"title":{},"body":{"controllers/SchoolController.html":{}}}],["useguards(jwtadminguard)@get(':studentid",{"_index":533,"title":{},"body":{"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@get('user",{"_index":205,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@post",{"_index":20,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtadminguard)@post('logout",{"_index":196,"title":{},"body":{"controllers/AuthAdminController.html":{}}}],["useguards(jwtadminguard)@put",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LessonAdminController.html":{},"controllers/SchoolController.html":{},"controllers/StudentAdminController.html":{}}}],["useguards(jwtstudentguard",{"_index":311,"title":{},"body":{"controllers/AuthStudentController.html":{},"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get",{"_index":555,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get(':lessonid",{"_index":457,"title":{},"body":{"controllers/LessonStudentController.html":{}}}],["useguards(jwtstudentguard)@get(':studentid",{"_index":553,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@get('user",{"_index":305,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@post",{"_index":455,"title":{},"body":{"controllers/LessonStudentController.html":{},"controllers/StudentController.html":{}}}],["useguards(jwtstudentguard)@post('logout",{"_index":301,"title":{},"body":{"controllers/AuthStudentController.html":{}}}],["useguards(jwtstudentguard)@put",{"_index":557,"title":{},"body":{"controllers/StudentController.html":{}}}],["useguards(undefined)@get",{"_index":328,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@get(':gradeid",{"_index":331,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@post",{"_index":326,"title":{},"body":{"controllers/GradeController.html":{}}}],["useguards(undefined)@put",{"_index":334,"title":{},"body":{"controllers/GradeController.html":{}}}],["user",{"_index":186,"title":{},"body":{"controllers/AuthAdminController.html":{},"injectables/AuthService.html":{},"controllers/AuthStudentController.html":{}}}],["user(req",{"_index":204,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["user.password",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":376,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validate(payload",{"_index":378,"title":{},"body":{"injectables/JwtAdminStrategy.html":{},"injectables/JwtStudentStrategy.html":{}}}],["validateuserpassword",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserpassword(password",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":726,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":233,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["version",{"_index":717,"title":{},"body":{"properties.html":{}}}],["void",{"_index":200,"title":{},"body":{"controllers/AuthAdminController.html":{},"controllers/AuthStudentController.html":{}}}],["watch",{"_index":668,"title":{},"body":{"index.html":{}}}],["website",{"_index":704,"title":{},"body":{"index.html":{}}}],["webtech",{"_index":653,"title":{},"body":{"index.html":{}}}],["works",{"_index":655,"title":{},"body":{"index.html":{}}}],["world",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["year",{"_index":651,"title":{},"body":{"index.html":{}}}],["yes",{"_index":443,"title":{},"body":{"injectables/LessonService.html":{}}}],["you'd",{"_index":693,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthAdminModule.html":{},"modules/AuthStudentModule.html":{},"modules/GradeModule.html":{},"modules/LessonAdminModule.html":{},"modules/LessonStudentModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/StudentAdminModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAdmins\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(body: CreateAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':adminId')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAdmins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin/admin.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/admin')\nexport class AdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private adminService: AdminService,\n  ) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getAdmins(): Promise {\n    return this.adminService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createAdmin(@Body() body: CreateAdminDto): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n    };\n    return this.adminService.createAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateAdmin(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    return this.adminService.updateAdmin(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':adminId')\n  async getAdmin(@Param('adminId') id: number): Promise {\n    return this.adminService.getAdmin(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from 'src/services/admin.service';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  providers: [AdminService, AuthService, StudentService, JwtService],\n  controllers: [AdminController],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                getAdmin\n                            \n                            \n                                    Async\n                                getAdminFromEmail\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                updateAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/admin.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(admin: CreateAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n                                    \n                                                CreateAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdmin(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAdminFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAdmin(admin)\n                \n            \n\n\n            \n                \n                    Defined in src/services/admin.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    admin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class AdminService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.admin.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getAdminFromEmail(email: string): Promise {\n    return this.prisma.admin.findUnique({ where: { email } });\n  }\n\n  async getAdmin(id: number): Promise> {\n    return this.prisma.admin.findUnique({ where: { id } });\n  }\n\n  async createAdmin(admin: CreateAdminDto) {\n    return this.prisma.admin.create({ data: admin });\n  }\n\n  async updateAdmin(admin) {\n    return this.prisma.admin.update({\n      data: admin,\n      where: {\n        id: admin.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthAdminModule\n                        \n                        \n                            AuthStudentModule\n                        \n                        \n                            GradeModule\n                        \n                        \n                            LessonAdminModule\n                        \n                        \n                            LessonStudentModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            StudentAdminModule\n                        \n                        \n                            StudentModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\n// import { PrismaModule } from './prisma/prisma.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AdminModule } from './admin/admin/admin.module';\nimport { AuthAdminModule } from './admin/auth-admin/auth-admin.module';\nimport { SchoolModule } from './admin/school/school.module';\nimport { GradeModule } from './admin/grade/grade.module';\nimport { StudentAdminModule } from './admin/student-admin/student-admin.module';\nimport { LessonAdminModule } from './admin/lesson/lesson-admin.module';\nimport { LessonStudentModule } from './student/lesson/lesson-student.module';\nimport { StudentModule } from './student/student/student.module';\nimport { AuthStudentModule } from './student/auth/auth-student.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    PrismaModule,\n    AdminModule,\n    AuthAdminModule,\n    AuthStudentModule,\n    SchoolModule,\n    GradeModule,\n    StudentAdminModule,\n    LessonAdminModule,\n    LessonStudentModule,\n    StudentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthAdminController.html":{"url":"controllers/AuthAdminController.html","title":"controller - AuthAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/admin/auth-admin/auth-admin.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtAdminGuard } from './jwt.guard';\n\n@Controller('admin/auth')\nexport class AuthAdminController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const admin = await this.authService.login(\n        req.body.email,\n        req.body.password,\n        true,\n      );\n\n      const jwtToken = this.getJwtToken(admin);\n      this.setTokenCookie(res, jwtToken);\n\n      // return true;\n      return { admin: admin, token: jwtToken };\n    } catch (error) {\n      console.log(error);\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenAdmin', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenAdmin', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthAdminModule.html":{"url":"modules/AuthAdminModule.html","title":"module - AuthAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/auth-admin/auth-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtAdminStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthAdminController } from './auth-admin.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtAdminStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtAdminSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtAdminStrategy],\n  controllers: [AuthAdminController],\n})\nexport class AuthAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(studentService: StudentService, adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/services/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string, isAdmin: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isAdmin\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUserPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(password: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StudentService } from './student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { AdminService } from './admin.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private studentService: StudentService,\n    private adminService: AdminService,\n  ) {}\n\n  async login(\n    email: string,\n    password: string,\n    isAdmin: boolean = false,\n  ): Promise {\n    const user = await (isAdmin\n      ? this.adminService.getAdminFromEmail(email.toLowerCase())\n      : this.studentService.getStudentFromEmail(email.toLowerCase()));\n    if (!user) {\n      throw new Error('User not found');\n    }\n    const isPasswordValid = await this.validateUserPassword(password, user);\n    if (!isPasswordValid) {\n      throw new Error('Wrong password');\n    }\n\n    return user;\n  }\n\n  async validateUserPassword(password: string, user: any): Promise {\n    if (user && bcrypt.compareSync(password, user.password)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthStudentController.html":{"url":"controllers/AuthStudentController.html","title":"controller - AuthStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/auth-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJwtToken\n                            \n                            \n                                    \n                                    Async\n                                loginWithPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                removeTokenCookie\n                            \n                            \n                                setTokenCookie\n                            \n                            \n                                    \n                                    \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtToken\n                        \n                    \n                \n            \n            \n                \ngetJwtToken(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        loginWithPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPassword(res: Response, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTokenCookie\n                        \n                    \n                \n            \n            \n                \nremoveTokenCookie(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenCookie\n                        \n                    \n                \n            \n            \n                \nsetTokenCookie(res: Response, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get('user')\n                \n            \n\n            \n                \n                    Defined in src/student/auth/auth-student.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Request,\n  Res,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from 'src/services/auth.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { JwtStudentGuard } from './jwt.guard';\n\n@Controller('student/auth')\nexport class AuthStudentController {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post('login')\n  async loginWithPassword(\n    // @Headers('Authorization') authHeader: string,\n    @Res({ passthrough: true }) res: Response,\n    @Request() req,\n  ): Promise {\n    try {\n      const student = await this.authService.login(\n        req.body.email,\n        req.body.password,\n      );\n\n      const jwtToken = this.getJwtToken(student);\n      this.setTokenCookie(res, jwtToken);\n\n      return { student: student, token: jwtToken };\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get('user')\n  async user(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { exp, iat, ...user } = req.user;\n    // refresh token\n    const newJwtToken = this.getJwtToken(user);\n    this.setTokenCookie(res, newJwtToken);\n    return user;\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post('logout')\n  async logout(\n    @Request() req,\n    @Res({ passthrough: true }) res: Response,\n  ): Promise {\n    // await this.authService.logout(req.user);\n\n    this.removeTokenCookie(res);\n  }\n\n  getJwtToken(user: any): string {\n    return this.jwtService.sign(user);\n  }\n\n  setTokenCookie(res: Response, token: string) {\n    res.cookie('tokenStudent', token, {\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n\n  removeTokenCookie(res: Response) {\n    res.cookie('tokenStudent', '', {\n      maxAge: -1,\n      path: '/',\n      httpOnly: true,\n      secure: false,\n      sameSite: 'lax',\n      domain: 'localhost',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthStudentModule.html":{"url":"modules/AuthStudentModule.html","title":"module - AuthStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/auth/auth-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStudentStrategy\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthStudentController } from './auth-student.controller';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AdminService } from 'src/services/admin.service';\nimport * as config from 'config';\nimport { JwtStudentStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: config.get('jwtStudentSecret'),\n      signOptions: {\n        expiresIn: 60 * 60 * 24 * config.get('sessionLengthInDays'),\n      },\n    }),\n  ],\n  providers: [AuthService, StudentService, AdminService, JwtStudentStrategy],\n  controllers: [AuthStudentController],\n})\nexport class AuthStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GradeController.html":{"url":"controllers/GradeController.html","title":"controller - GradeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GradeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/grade/grade.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                commun/grade\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getGrade\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get(':gradeId')\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/grade/grade.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { GradeService } from '../../services/grade.service';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('commun/grade')\nexport class GradeController {\n  constructor(private gradeService: GradeService) {}\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get()\n  async getAll(): Promise {\n    return this.gradeService.getAll();\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Get(':gradeId')\n  async getGrade(@Param('gradeId') id: string): Promise {\n    return this.gradeService.getGrade(parseInt(id));\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Post()\n  async createGrade(@Body() body: any): Promise {\n    body = {\n      ...body,\n      level: parseInt(body.level),\n    };\n    return this.gradeService.createGrade(body);\n  }\n\n  @UseGuards(AuthGuard(['jwtAdminSecret', 'jwtStudentSecret']))\n  @Put()\n  async updateGrade(@Body() body): Promise {\n    return this.gradeService.updateGrade(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GradeModule.html":{"url":"modules/GradeModule.html","title":"module - GradeModule","body":"\n                   \n\n\n\n\n    Modules\n    GradeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\n\nGradeService\n\nGradeService\n\n\n\nGradeModule\n\nGradeModule\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/grade/grade.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GradeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GradeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GradeController } from './grade.controller';\nimport { GradeService } from '../../services/grade.service';\n\n@Module({\n  providers: [GradeService],\n  controllers: [GradeController],\n})\nexport class GradeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GradeService.html":{"url":"injectables/GradeService.html","title":"injectable - GradeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GradeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/grade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGrade\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getGrade\n                            \n                            \n                                    Async\n                                updateGrade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/grade.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGrade(grade: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGrade(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateGrade\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGrade(grade)\n                \n            \n\n\n            \n                \n                    Defined in src/services/grade.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grade\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { CreateAdminDto } from 'src/dto/admin.dto';\nimport * as bcrypt from 'bcryptjs';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class GradeService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const grades = await this.prisma.grade.findMany();\n    if (!grades) {\n      throw new NotFoundException();\n    }\n    return grades;\n  }\n\n  async getGrade(id: number): Promise> {\n    return this.prisma.grade.findUnique({ where: { id } });\n  }\n\n  async createGrade(grade: any) {\n    return this.prisma.grade.create({ data: grade });\n  }\n\n  async updateGrade(grade) {\n    return this.prisma.grade.update({\n      data: grade,\n      where: {\n        id: grade.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminGuard.html":{"url":"injectables/JwtAdminGuard.html","title":"injectable - JwtAdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAdminGuard extends AuthGuard('jwtAdminSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAdminStrategy.html":{"url":"injectables/JwtAdminStrategy.html","title":"injectable - JwtAdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/auth-admin/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/admin/auth-admin/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/auth-admin/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n};\n\n@Injectable()\nexport class JwtAdminStrategy extends PassportStrategy(\n  Strategy,\n  'jwtAdminSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtAdminSecret'),\n    });\n  }\n\n  async validate(payload) {\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentGuard.html":{"url":"injectables/JwtStudentGuard.html","title":"injectable - JwtStudentGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtStudentGuard extends AuthGuard('jwtStudentSecret') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStudentStrategy.html":{"url":"injectables/JwtStudentStrategy.html","title":"injectable - JwtStudentStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStudentStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/student/auth/jwt.strategy.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/student/auth/jwt.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\nimport * as config from 'config';\n\nconst cookieExtractor = function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n};\n\n@Injectable()\nexport class JwtStudentStrategy extends PassportStrategy(\n  Strategy,\n  'jwtStudentSecret',\n) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([cookieExtractor]),\n      ignoreExpiration: false,\n      secretOrKey: config.get('jwtStudentSecret'),\n    });\n  }\n\n  async validate(payload) {\n    if (payload) {\n      return payload;\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonAdminController.html":{"url":"controllers/LessonAdminController.html","title":"controller - LessonAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/lesson/lesson-admin.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  UseGuards,\n  Param,\n  Post,\n  Put,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/lesson')\nexport class LessonAdminController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.lessonService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateLesson(@Body() body): Promise {\n    const id = body.id;\n    delete body.id;\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.updateLesson(id, body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonAdminModule.html":{"url":"modules/LessonAdminModule.html","title":"module - LessonAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/lesson/lesson-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonAdminController } from './lesson-admin.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonAdminController],\n  providers: [LessonService],\n})\nexport class LessonAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonService.html":{"url":"injectables/LessonService.html","title":"injectable - LessonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/lesson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLesson\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getLesson\n                            \n                            \n                                    Async\n                                updateLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/lesson.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(lesson: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lesson\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(param?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLesson(id, lesson)\n                \n            \n\n\n            \n                \n                    Defined in src/services/lesson.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lesson\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class LessonService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll(param?: any) {\n    const lessons = await this.prisma.lesson.findMany(param);\n    if (!lessons) {\n      throw new NotFoundException();\n    }\n    return lessons;\n  }\n\n  async getLesson(id: number): Promise> {\n    return this.prisma.lesson.findUnique({ where: { id } });\n  }\n\n  async createLesson(lesson: any) {\n    return this.prisma.lesson.create({ data: lesson });\n  }\n\n  async updateLesson(id, lesson) {\n    return this.prisma.lesson.update({\n      data: lesson,\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LessonStudentController.html":{"url":"controllers/LessonStudentController.html","title":"controller - LessonStudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LessonStudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/lesson/lesson-student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/lesson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getLesson\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLesson(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getLesson\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLesson(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':lessonId')\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/lesson/lesson-student.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { LessonService } from 'src/services/lesson.service';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/lesson')\nexport class LessonStudentController {\n  constructor(private readonly lessonService: LessonService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async getStudents(@Body() body: any): Promise {\n    return this.lessonService.getAll(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createLesson(@Body() body: any): Promise {\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.lessonService.createLesson(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':lessonId')\n  async getLesson(@Param('lessonId') id: number): Promise {\n    return this.lessonService.getLesson(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LessonStudentModule.html":{"url":"modules/LessonStudentModule.html","title":"module - LessonStudentModule","body":"\n                   \n\n\n\n\n    Modules\n    LessonStudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LessonStudentModule\n\n\n\ncluster_LessonStudentModule_providers\n\n\n\n\nLessonService\n\nLessonService\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/lesson/lesson-student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LessonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LessonStudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LessonStudentController } from './lesson-student.controller';\nimport { LessonService } from 'src/services/lesson.service';\n\n@Module({\n  controllers: [LessonStudentController],\n  providers: [LessonService],\n})\nexport class LessonStudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSchool\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(body: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':schoolId')\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/school/school.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { SchoolService } from 'src/services/school.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/school')\nexport class SchoolController {\n  constructor(private schoolService: SchoolService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createSchool(@Body() body: CreateSchoolDto): Promise {\n    return this.schoolService.createSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateSchool(@Body() body): Promise {\n    return this.schoolService.updateSchool(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':schoolId')\n  async getSchool(@Param('schoolId') id: string): Promise {\n    return this.schoolService.getSchool(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolService\n\nSchoolService\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolController } from './school.controller';\nimport { AuthService } from 'src/services/auth.service';\nimport { StudentService } from 'src/services/student.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { SchoolService } from 'src/services/school.service';\n\n@Module({\n  providers: [SchoolService],\n  controllers: [SchoolController],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getSchool\n                            \n                            \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(school: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchool(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(school)\n                \n            \n\n\n            \n                \n                    Defined in src/services/school.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateSchoolDto } from 'src/dto/school.dto';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const admins = await this.prisma.school.findMany();\n    if (!admins) {\n      throw new NotFoundException();\n    }\n    return admins;\n  }\n\n  async getSchool(id: number): Promise> {\n    return this.prisma.school.findUnique({ where: { id: id } });\n  }\n\n  async createSchool(school: CreateSchoolDto) {\n    return this.prisma.school.create({ data: school });\n  }\n\n  async updateSchool(school) {\n    return this.prisma.school.update({\n      data: school,\n      where: {\n        id: school.id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentAdminController.html":{"url":"controllers/StudentAdminController.html","title":"controller - StudentAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAdminGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/admin/student-admin/student-admin.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtAdminGuard } from '../auth-admin/jwt.guard';\n\n@Controller('admin/student')\nexport class StudentAdminController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtAdminGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    const id = body.id;\n    delete body.id;\n    body = {\n      ...body,\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.updateStudent(id, body);\n  }\n\n  @UseGuards(JwtAdminGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: number): Promise {\n    return this.studentService.getStudent(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentAdminModule.html":{"url":"modules/StudentAdminModule.html","title":"module - StudentAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentAdminModule\n\n\n\ncluster_StudentAdminModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/student-admin/student-admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentAdminController } from './student-admin.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentAdminController],\n  providers: [StudentService],\n})\nexport class StudentAdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StudentController.html":{"url":"controllers/StudentController.html","title":"controller - StudentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StudentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/student/student/student.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                student/student\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudent\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStudents\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(body: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get(':studentId')\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getStudents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudents()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtStudentGuard)@Put()\n                \n            \n\n            \n                \n                    Defined in src/student/student/student.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { StudentService } from 'src/services/student.service';\nimport * as bcrypt from 'bcryptjs';\nimport { JwtStudentGuard } from '../auth/jwt.guard';\n\n@Controller('student/student')\nexport class StudentController {\n  constructor(private readonly studentService: StudentService) {}\n\n  @UseGuards(JwtStudentGuard)\n  @Get()\n  async getStudents(): Promise {\n    return this.studentService.getAll();\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Post()\n  async createStudent(@Body() body: any): Promise {\n    body = {\n      ...body,\n      password: bcrypt.hashSync(body.password),\n      grade: { connect: { id: parseInt(body.grade) } },\n    };\n    return this.studentService.createStudent(body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Put()\n  async updateStudent(@Body() body): Promise {\n    if (body.password === '') {\n      delete body.password;\n    } else {\n      body = {\n        ...body,\n        password: bcrypt.hashSync(body.password),\n      };\n    }\n    const id = body.id;\n    delete body.id;\n    return this.studentService.updateStudent(id, body);\n  }\n\n  @UseGuards(JwtStudentGuard)\n  @Get(':studentId')\n  async getStudent(@Param('studentId') id: string): Promise {\n    return this.studentService.getStudent(parseInt(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n    Modules\n    StudentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nStudentService\n\nStudentService\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/student/student/student.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StudentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StudentController } from './student.controller';\nimport { StudentService } from 'src/services/student.service';\n\n@Module({\n  controllers: [StudentController],\n  providers: [StudentService],\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/student.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStudent\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getStudent\n                            \n                            \n                                    Async\n                                getStudentFromEmail\n                            \n                            \n                                    Async\n                                updateStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/services/student.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStudent(student: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    student\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudent(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStudentFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStudentFromEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStudent(id, student)\n                \n            \n\n\n            \n                \n                    Defined in src/services/student.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    student\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class StudentService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async getAll() {\n    const students = await this.prisma.student.findMany();\n    if (!students) {\n      throw new NotFoundException();\n    }\n    return students;\n  }\n\n  async getStudentFromEmail(email: string): Promise {\n    return this.prisma.student.findUnique({ where: { email } });\n  }\n\n  async getStudent(id: number): Promise {\n    return this.prisma.student.findUnique({ where: { id } });\n  }\n\n  async createStudent(student: any) {\n    return this.prisma.student.create({ data: student });\n  }\n\n  async updateStudent(id, student) {\n    return this.prisma.student.update({\n      data: student,\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/auth-admin.controller.ts\n            \n            controller\n            AuthAdminController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.guard.ts\n            \n            injectable\n            JwtAdminGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            injectable\n            JwtAdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/auth-admin/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/grade/grade.controller.ts\n            \n            controller\n            GradeController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/lesson/lesson-admin.controller.ts\n            \n            controller\n            LessonAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/admin/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/admin/student-admin/student-admin.controller.ts\n            \n            controller\n            StudentAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/grade.service.ts\n            \n            injectable\n            GradeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/lesson.service.ts\n            \n            injectable\n            LessonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/auth-student.controller.ts\n            \n            controller\n            AuthStudentController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.guard.ts\n            \n            injectable\n            JwtStudentGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStudentStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/student/auth/jwt.strategy.ts\n            \n            variable\n            cookieExtractor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/student/lesson/lesson-student.controller.ts\n            \n            controller\n            LessonStudentController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/student/student/student.controller.ts\n            \n            controller\n            StudentController\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.21\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @prisma/client : ^4.12.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            config : ^3.3.9\n        \n            cookie-parser : ^1.4.6\n        \n            crypto-js : ^4.1.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleAdmin   (src/.../admin.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleAdmin\n                    \n                \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                 SECRETARY\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                 ASSISTANT\n                            \n                        \n                        \n                            \n                                 TRAINER\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                 DIRECTOR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nEnd of year project (Webtech n4). Works with backend (default:8700), frontend (default:4350) and mobile app\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodGet documentation\n$ npx @compodoc/compodoc -p tsconfig.json -sTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GradeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LessonStudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthAdminModule\n\n\n\ncluster_AuthAdminModule_providers\n\n\n\ncluster_AuthStudentModule\n\n\n\ncluster_AuthStudentModule_providers\n\n\n\ncluster_GradeModule\n\n\n\ncluster_GradeModule_providers\n\n\n\ncluster_LessonAdminModule\n\n\n\ncluster_LessonAdminModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nAdminService\n\nAdminService\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthAdminModule\n\nAuthAdminModule\n\nAuthAdminModule -->\n\nAdminService->AuthAdminModule\n\n\n\n\n\nAuthStudentModule\n\nAuthStudentModule\n\nAuthStudentModule -->\n\nAdminService->AuthStudentModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAdminModule -->\n\nAuthService->AdminModule\n\n\n\nAuthAdminModule -->\n\nAuthService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nAuthService->AuthStudentModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\nAuthAdminModule -->\n\nStudentService->AuthAdminModule\n\n\n\nAuthStudentModule -->\n\nStudentService->AuthStudentModule\n\n\n\n\n\nStudentAdminModule\n\nStudentAdminModule\n\nStudentAdminModule -->\n\nStudentService->StudentAdminModule\n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nStudentService->StudentModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\nAppModule -->\n\nAuthAdminModule->AppModule\n\n\n\nAppModule -->\n\nAuthStudentModule->AppModule\n\n\n\n\n\nGradeModule\n\nGradeModule\n\nAppModule -->\n\nGradeModule->AppModule\n\n\n\n\n\nLessonAdminModule\n\nLessonAdminModule\n\nAppModule -->\n\nLessonAdminModule->AppModule\n\n\n\n\n\nLessonStudentModule\n\nLessonStudentModule\n\nAppModule -->\n\nLessonStudentModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nStudentAdminModule->AppModule\n\n\n\nAppModule -->\n\nStudentModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtAdminStrategy\n\nJwtAdminStrategy\n\nAuthAdminModule -->\n\nJwtAdminStrategy->AuthAdminModule\n\n\n\n\n\nJwtStudentStrategy\n\nJwtStudentStrategy\n\nAuthStudentModule -->\n\nJwtStudentStrategy->AuthStudentModule\n\n\n\n\n\nGradeService\n\nGradeService\n\nGradeModule -->\n\nGradeService->GradeModule\n\n\n\n\n\nLessonService\n\nLessonService\n\nLessonAdminModule -->\n\nLessonService->LessonAdminModule\n\n\n\nLessonStudentModule -->\n\nLessonService->LessonStudentModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateAdminDto   (src/.../admin.dto.ts)\n                        \n                        \n                            CreateSchoolDto   (src/.../school.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/admin.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateAdminDto\n                \n            \n            \n                \n                        Prisma.AdminCreateInput\n\n                \n            \n        \n    \n    src/dto/school.dto.ts\n    \n    \n        \n            \n                \n                    \n                    CreateSchoolDto\n                \n            \n            \n                \n                        Prisma.SchoolCreateInput\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                        \n                            cookieExtractor   (src/.../jwt.strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/auth-admin/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenAdmin = null;\n  if (req && req.cookies) {\n    tokenAdmin = req.cookies['tokenAdmin'];\n  }\n  return tokenAdmin;\n}\n                    \n                \n\n\n        \n    \n\n    src/student/auth/jwt.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cookieExtractor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : function (req: Request) {\n  let tokenStudent = null;\n  if (req && req.cookies) {\n    tokenStudent = req.cookies['tokenStudent'];\n  }\n  return tokenStudent;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  @@map("users")
}

model Grade {
  id       Int       @id @default(autoincrement())
  name     String
  email    String
  level    Int
  students Student[]
  lessons  Lesson[]

  @@map("grades")
}

model Student {
  id       Int     @id @default(autoincrement())
  fistName String
  lastName String
  email    String  @unique
  name     String
  password String
  grade    Grade?  @relation(fields: [gradeId], references: [id])
  gradeId  Int
  scores   Score[]

  @@map("students")
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String
  grade     Grade?   @relation(fields: [gradeId], references: [id])
  gradeId   Int
  scores    Score[]
  dateStart DateTime
  dateEnd   DateTime

  @@map("lessons")
}

model Score {
  id        Int      @id @default(autoincrement())
  score     Int
  maxScore  Int
  comment   String
  lesson    Lesson?  @relation(fields: [lessonId], references: [id])
  lessonId  Int
  student   Student? @relation(fields: [studentId], references: [id])
  studentId Int

  @@map("scores")
}

model School {
  id             Int    @id @default(autoincrement())
  name           String
  socialNetworks Json
  openingHours   Json

  @@map("schools")
}

model Admin {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  name      String
  password  String
  role      RoleAdmin @default(DEFAULT)

  @@map("admins")
}

enum RoleAdmin {
  DEFAULT
  SECRETARY
  ACCOUNTING
  ASSISTANT
  TRAINER
  TEACHER
  DIRECTOR
}
